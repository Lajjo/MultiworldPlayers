name: Lajjo Main # Your name in-game. Spaces will be replaced with underscores and there is a 16 character limit
description: Lajjo Main game - all inclusive # Used to describe your yaml. Useful if you have multiple files

game: # Pick a game to play
  A Link to the Past: 1
  A Short Hike: 0
  Adventure: 0
  Blasphemous: 0
  Castlevania 64: 0
  Celeste 64: 0
  Dark Souls III: 0
  DLCQuest: 0
  Donkey Kong Country 3: 1
  DOOM 1993: 0
  DOOM II: 0
  Factorio: 0
  Final Fantasy Mystic Quest: 0
  Final Fantasy: 0
  Heretic: 0
  Hollow Knight: 0
  Hylics 2: 0
  Kingdom Hearts 2: 0
  Kirby's Dream Land 3: 1
  Landstalker - The Treasures of King Nole: 0
  Links Awakening DX: 1
  Lufia II Ancient Cave: 1
  MegaMan Battle Network 3: 0
  Meritous: 1
  Minecraft: 1
  Muse Dash: 0
  Noita: 1
  Ocarina of Time: 0
  Overcooked! 2: 0
  Pokemon Emerald: 1
  Pokemon Red and Blue: 1
  Raft: 0
  Risk of Rain 2: 1
  Rogue Legacy: 0
  Secret of Evermore: 1
  Shivers: 0
  Slay the Spire: 0
  SMZ3: 1
  Sonic Adventure 2 Battle: 0
  Starcraft 2 Wings of Liberty: 0
  Stardew Valley: 0
  Subnautica: 0
  Super Mario 64: 0
  Super Mario World: 1
  Super Metroid: 1
  Terraria: 0
  The Legend of Zelda: 0
  The Messenger: 0
  The Witness: 0
  Timespinner: 0
  TUNIC: 0
  Undertale: 0
  VVVVVV: 0
  Wargroove: 0
  Yoshi's Island: 1
  Zillion: 0
  Zork Grand Inquisitor: 0

requires:
  version: 0.4.6 # Version of Archipelago required for this yaml to work as expected.

A Link to the Past:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 1
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 0 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 4
    minimal: 1

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Ganon: Climb GT, defeat Agahnim 2, and then kill Ganon
    # Crystals: Only killing Ganon is required. However, items may still be placed in GT
    # Bosses: Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2)
    # Pedestal: Pull the Triforce from the Master Sword pedestal
    # Ganon Pedestal: Pull the Master Sword pedestal, then kill Ganon
    # Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then turn them in to Murahadala in front of Hyrule Castle
    # Local Triforce Hunt: Collect Triforce pieces spread throughout your world, then turn them in to Murahadala in front of Hyrule Castle
    # Ganon Triforce Hunt: Collect Triforce pieces spread throughout the worlds, then kill Ganon
    # Local Ganon Triforce Hunt: Collect Triforce pieces spread throughout your world, then kill Ganon
    ganon: 1
    crystals: 1
    bosses: 1
    pedestal: 1
    ganon_pedestal: 0
    triforce_hunt: 1
    local_triforce_hunt: 0
    ganon_triforce_hunt: 0
    local_ganon_triforce_hunt: 0

  mode:
    # Standard: Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary
    # Open: Begin the game from your choice of Link's House or the Sanctuary
    # Inverted: Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World, and the Light World game map is altered
    standard: 0
    open: 9
    inverted: 1

  glitches_required:
    # Determine the logic required to complete the seed
    # None: No glitches required
    # Minor Glitches: Puts fake flipper, waterwalk, super bunny shenanigans, and etc into logic
    # Overworld Glitches: Assumes the player has knowledge of both overworld major glitches (boots clips, mirror clips) and minor glitches
    # Hybrid Major Glitches: In addition to overworld glitches, also requires underworld clips between dungeons.
    # No Logic: Your own items are placed with no regard to any logic; such as your Fire Rod can be on your Trinexx.
    no_glitches: 6
    minor_glitches: 3
    overworld_glitches: 1
    hybrid_major_glitches: 0
    no_logic: 0

  dark_room_logic:
    # Logic for unlit dark rooms. Lamp: require the Lamp for these rooms to be considered accessible.
    # Torches: in addition to lamp, allow the fire rod and presence of easily accessible torches for access.
    # None: all dark rooms are always considered doable, meaning this may force completion of rooms in complete darkness.
    lamp: 6
    torches: 3
    none: 1

  open_pyramid:
    # Determines whether the hole at the top of pyramid is open.
    # Goal will open the pyramid if the goal requires you to kill Ganon, without needing to kill Agahnim 2.
    # Auto is the same as goal except if Ganon's dropdown is in another location, the hole will be closed.
    closed: 0
    open: 1
    goal: 0
    auto: 1

  crystals_needed_for_gt:
    # Number of crystals needed to open Ganon's Tower
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  crystals_needed_for_ganon:
    # Number of crystals needed to damage Ganon
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  triforce_pieces_mode:
    # Determine how to calculate the extra available triforce pieces.
    # Extra: available = triforce_pieces_extra + triforce_pieces_required
    # Percentage: available = (triforce_pieces_percentage /100) * triforce_pieces_required
    # Available: available = triforce_pieces_available
    extra: 0
    percentage: 0
    available: 1

  triforce_pieces_percentage:
    # Set to how many triforce pieces according to a percentage of the required ones, are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 100
    # Maximum value is 1000
    150: 50
    random: 0
    random-low: 0
    random-high: 0

  triforce_pieces_required:
    # Set to how many out of X triforce pieces you need to win the game in a triforce hunt.
    # Default is 20. Max is 90, Min is 1.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    20: 0
    random: 1
    random-low: 0
    random-high: 0

  triforce_pieces_available:
    # Set to how many triforces pieces are available to collect in the world. Default is 30. Max is 90, Min is 1
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 90
    30: 0
    random: 1
    random-low: 0
    random-high: 0

  triforce_pieces_extra:
    # Set to how many extra triforces pieces are available to collect in the world.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 89
    10: 0
    random: 1
    random-low: 0
    random-high: 0

  entrance_shuffle:
    # Dungeons Simple: Shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon.
    # Dungeons Full: Shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons, but keep dungeons to a specific world.
    # Dungeons Crossed: like dungeons_full, but allow cross-world traversal through a dungeon. Warning: May force repeated dungeon traversal.
    # Simple: Entrances are grouped together before being randomized. Interiors with two entrances are grouped shuffled together with each other,
    # and Death Mountain entrances are shuffled only on Death Mountain. Dungeons are swapped entirely.
    # Restricted: Like Simple, but single entrance interiors, multi entrance interiors, and Death Mountain interior entrances are all shuffled with each other.
    # Full: Like Restricted, but all Dungeon entrances are shuffled with all non-Dungeon entrances.
    # Crossed: Like Full, but interiors with multiple entrances are no longer confined to the same world, which may allow crossing worlds.
    # Insanity: Like Crossed, but entrances and exits may be decoupled from each other, so that leaving through an exit may not return you to the entrance you entered from.
    vanilla: 10
    dungeons_simple: 0
    dungeons_full: 0
    dungeons_crossed: 0
    simple: 8
    restricted: 6
    full: 4
    crossed: 2
    insanity: 1

  entrance_shuffle_seed:
    # You can specify a number to use as an entrance shuffle seed, or a group name. Everyone with the same group name
    # will get the same entrance shuffle result as long as their Entrance Shuffle, Mode, Retro Caves, and Glitches
    # Required options are the same.
    random: 50

  big_key_shuffle:
    # Big Key Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 1
    any_world: 1
    different_world: 0
    start_with: 0

  small_key_shuffle:
    # Small Key Placement
    original_dungeon: 50
    own_dungeons: 0
    own_world: 1
    any_world: 1
    different_world: 0
    start_with: 0
    universal: 0

  key_drop_shuffle:
    # Shuffle keys found in pots and dropped from killed enemies,
    # respects the small key and big key shuffle options.
    false: 0
    true: 50

  compass_shuffle:
    # Compass Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 1
    any_world: 1
    different_world: 0
    start_with: 0

  map_shuffle:
    # Map Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 1
    any_world: 1
    different_world: 0
    start_with: 0

  restrict_dungeon_item_on_boss:
    # Don't place dungeon-native items on the dungeon's boss.
    false: 50
    true: 0

  item_pool:
    # Easy: Doubled upgrades, progressives, and etc. Normal:  Item availability remains unchanged from vanilla game.
    # Hard: Reduced upgrade availability (max: 14 hearts, blue mail, tempered sword, fire shield, no silvers unless swordless).
    # Expert: Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers unless swordless).
    easy: 0
    normal: 50
    hard: 0
    expert: 0

  item_functionality:
    # Easy: Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
    # Normal: Vanilla item functionality
    # Hard: Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
    # Expert: Vastly reduces the helpfulness of items (potions barely effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled outside ganon)
    easy: 0
    normal: 50
    hard: 0
    expert: 0

  enemy_health:
    # Default: Vanilla enemy HP. Easy: Enemies have reduced health. Hard: Enemies have increased health.
    # Expert: Enemies have greatly increased health.
    easy: 0
    default: 50
    hard: 0
    expert: 0

  enemy_damage:
    # Default: Vanilla enemy damage. Shuffled: 0 # Enemies deal 0 to 4 hearts and armor helps.
    # Chaos: Enemies deal 0 to 8 hearts and armor just reshuffles the damage.
    default: 50
    shuffled: 0
    chaos: 0

  progressive:
    # How item types that have multiple tiers (armor, bows, gloves, shields, and swords) should be rewarded
    off: 0
    grouped_random: 1
    on: 0

  swordless:
    # No swords. Curtains in Skull Woods and Agahnim's
    # Tower are removed, Agahnim's Tower barrier can be
    # destroyed with hammer. Misery Mire and Turtle Rock
    # can be opened without a sword. Hammer damages Ganon.
    # Ether and Bombos Tablet can be activated with Hammer
    # (and Book).
    false: 9
    true: 1

  dungeon_counters:
    # On: Always display amount of items checked in a dungeon. Pickup: Show when compass is picked up.
    # Default: Show when compass is picked up if the compass itself is shuffled. Off: Never show item count in dungeons.
    on: 0
    pickup: 1
    default: 0
    off: 0

  retro_bow:
    # Zelda-1 like mode. You have to purchase a quiver to shoot arrows using rupees.
    false: 50
    true: 0

  retro_caves:
    # Zelda-1 like mode. There are randomly placed take-any caves that contain one Sword and
    # choices of Heart Container/Blue Potion.
    false: 50
    true: 0

  hints:
    # On/Full: Put item and entrance placement hints on telepathic tiles and some NPCs, Full removes joke hints.
    off: 0
    on: 1
    full: 1

  scams:
    # If on, these Merchants will no longer tell you what they're selling.
    off: 1
    king_zora: 1
    bottle_merchant: 1
    all: 1

  boss_shuffle:
    # Shuffles bosses around to different locations.
    # Basic will shuffle all bosses except Ganon and Agahnim anywhere they can be placed.
    # Full chooses 3 bosses at random to be placed twice instead of Lanmolas, Moldorm, and Helmasaur.
    # Chaos allows any boss to appear any number of times.
    # Singularity places a single boss in as many places as possible, and a second boss in any remaining locations.
    # Supports plando placement.
    none: 5
    basic: 3
    full: 2
    chaos: 1
    singularity: 0

  pot_shuffle:
    # Shuffle contents of pots within "supertiles" (item will still be nearby original placement).
    false: 50
    true: 0

  enemy_shuffle:
    # Randomize every enemy spawn.
    # If mode is Standard, Hyrule Castle is left out (may result in visually wrong enemy sprites in that area.)
    false: 9
    true: 1

  killable_thieves:
    # Makes Thieves killable.
    false: 50
    true: 0

  bush_shuffle:
    # Randomize chance that a bush contains an enemy as well as which enemy may spawn.
    false: 50
    true: 0

  shop_item_slots:
    # Number of slots in all shops available to have items from the multiworld
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    0: 4
    random: 1
    random-low: 0
    random-high: 0

  randomize_shop_inventories:
    # Generate new default inventories for overworld/underworld shops, and unique shops; or each shop independently
    default: 1
    randomize_by_shop_type: 1
    randomize_each: 1

  shuffle_shop_inventories:
    # Shuffle default inventories of the shops around
    false: 1
    true: 1

  include_witch_hut:
    # Consider witch's hut like any other shop and shuffle/randomize it too
    false: 1
    true: 1

  randomize_shop_prices:
    # Randomize the prices of the items in shop inventories
    false: 1
    true: 1

  randomize_cost_types:
    # Prices of the items in shop inventories may cost hearts, arrow, or bombs instead of rupees
    false: 1
    true: 1

  shop_price_modifier:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 400
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_capacity_upgrades:
    # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld).
    # On Combined will shuffle only a single bomb upgrade and arrow upgrade each which bring you to the maximum capacity.
    off: 1
    on: 1
    on_combined: 1

  bombless_start:
    # Start with a max of 0 bombs available, requiring Bomb Upgrade items in order to use bombs
    false: 1
    true: 1

  shuffle_prizes:
    # Shuffle "general" prize packs, as in enemy, tree pull, dig etc.; "bonk" prizes; or both.
    off: 0
    general: 50
    bonk: 0
    both: 0

  tile_shuffle:
    # Randomize flying tiles floor patterns.
    false: 0
    true: 1

  misery_mire_medallion:
    # Required medallion to open Misery Mire front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  turtle_rock_medallion:
    # Required medallion to open Turtle Rock front entrance.
    ether: 0
    bombos: 0
    quake: 0
    random: 50

  glitch_boots:
    # If this is enabled, the player will start with Pegasus Boots when playing with overworld glitches or harder logic.
    false: 0
    true: 50

  beemizer_total_chance:
    # Percentage chance for each junk-fill item (rupees, bombs, arrows) to be
    # replaced with either a bee swarm trap or a single bottle-filling bee.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  beemizer_trap_chance:
    # Percentage chance for each replaced junk-fill item to be a bee swarm
    # trap; all other replaced items are single bottle-filling bees.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  timer:
    # None: No timer will be displayed. OHKO: Timer always at zero. Permanent OHKO.
    # Timed: Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest time at the end.
    # Timed OHKO: Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as the clock as at zero, Link will die in one hit.
    # Timed Countdown: Starts the clock with forty minutes. Same clocks as timed mode, but if the clock hits zero you lose. You can still keep playing, though.
    # Display: Displays a timer, but otherwise does not affect gameplay or the item pool.
    none: 50
    timed: 0
    timed_ohko: 0
    ohko: 0
    timed_countdown: 0
    display: 0

  countdown_start_time:
    # For Timed OHKO and Timed Countdown timer modes, the amount of time in minutes to start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 480
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  red_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    -2: 50
    random: 0
    random-low: 0
    random-high: 0

  blue_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  green_clock_time:
    # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -60
    # Maximum value is 60
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  allow_collect:
    # Allows for !collect / co-op to auto-open chests containing items for other players.
    false: 50
    true: 0

  ow_palettes:
    # The type of palette shuffle to use for the overworld
    default: 1
    good: 1
    blackout: 0
    puke: 0
    classic: 1
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  uw_palettes:
    # The type of palette shuffle to use for the underworld (caves, dungeons, etc.)
    default: 1
    good: 1
    blackout: 0
    puke: 0
    classic: 1
    grayscale: 0
    negative: 0
    dizzy: 0
    sick: 0

  hud_palettes:
    # The type of palette shuffle to use for the HUD
    default: 1
    good: 1
    blackout: 0
    puke: 1
    classic: 1
    grayscale: 0
    negative: 0
    dizzy: 1
    sick: 1

  sword_palettes:
    # The type of palette shuffle to use for the sword
    default: 1
    good: 1
    blackout: 0
    puke: 1
    classic: 1
    grayscale: 0
    negative: 0
    dizzy: 1
    sick: 1

  shield_palettes:
    # The type of palette shuffle to use for the shield
    default: 1
    good: 1
    blackout: 0
    puke: 1
    classic: 1
    grayscale: 0
    negative: 0
    dizzy: 1
    sick: 1

  heartbeep:
    # How quickly the heart beep sound effect will play
    normal: 0
    double: 0
    half: 0
    quarter: 0
    off: 1

  heartcolor:
    # The color of hearts in the HUD
    red: 0
    blue: 0
    green: 0
    yellow: 0
    random: 1

  quickswap:
    # Allows you to quickly swap items while playing with L/R
    false: 0
    true: 50

  menuspeed:
    # How quickly the menu appears/disappears
    normal: 50
    instant: 0
    double: 0
    triple: 0
    quadruple: 0
    half: 0

  music:
    # Whether background music will play in game
    false: 0
    true: 50

  reduceflashing:
    # Reduces flashing for certain scenes such as the Misery Mire and Ganon's Tower opening cutscenes
    false: 0
    true: 50

  triforcehud:
    # When and how the triforce hunt HUD should display
    normal: 50
    hide_goal: 0
    hide_required: 0
    hide_both: 0

  # rom options section
  random_sprite_on_event: # An alternative to specifying randomonhit / randomonexit / etc... in sprite down below.
    enabled: # If enabled, sprite down below is ignored completely, (although it may become the sprite pool)
      on: 0
      off: 1
    on_hit: # Random sprite on hit. Being hit by things that cause 0 damage still counts.
      on: 1
      off: 0
    on_enter: # Random sprite on underworld entry. Note that entering hobo counts.
      on: 0
      off: 1
    on_exit: # Random sprite on underworld exit. Exiting hobo does not count.
      on: 0
      off: 1
    on_slash: # Random sprite on sword slash. Note, it still counts if you attempt to slash while swordless.
      on: 0
      off: 1
    on_item: # Random sprite on getting an item.  Anything that causes you to hold an item above your head counts.
      on: 0
      off: 1
    on_bonk: # Random sprite on bonk.
      on: 0
      off: 1
    on_everything: # Random sprite on ALL currently implemented events, even if not documented at present time.
      on: 0
      off: 1
    use_weighted_sprite_pool: # Always on if no sprite_pool exists, otherwise it controls whether to use sprite as a weighted sprite pool
      on: 0
      off: 1

  #sprite_pool: # When specified, limits the pool of sprites used for randomon-event to the specified pool.  Uncomment to use this.
  #  - link
  #  - pride link
  #  - penguin link
  #  - random  # You can specify random multiple times for however many potentially unique random sprites you want in your pool.
  sprite: # Enter the name of your preferred sprite and weight it appropriately
    random: 0
    randomonhit: 0 # Random sprite on hit
    randomonenter: 0 # Random sprite on entering the underworld.
    randomonexit: 0 # Random sprite on exiting the underworld.
    randomonslash: 0 # Random sprite on sword slashes
    randomonitem: 0 # Random sprite on getting items.
    randomonbonk: 0 # Random sprite on bonk.
    # You can combine these events like this.  randomonhit-enter-exit  if you want it on hit, enter, exit.
    randomonall: 0 # Random sprite on any and all currently supported events. Refer to above for the supported events.
    Link: 0 # To add other sprites: open the gui/Creator, go to adjust, select a sprite and write down the name the gui calls it
    Frog_Link: 1
    Astronaut: 1

A Short Hike:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Choose the end goal.
    # Nap: Complete the climb to the top of Hawk Peak and take a nap
    # Photo: Get your picture taken at the top of Hawk Peak
    # Races: Complete all three races with Avery
    # Help Everyone: Travel around Hawk Peak and help every character with their troubles
    # Fishmonger: Catch one of every fish from around Hawk Peak
    nap: 0
    photo: 0
    races: 0
    help_everyone: 50
    fishmonger: 0

  coins_in_shops:
    # When enabled, the randomizer can place coins into locations that are purchased, such as shops.
    false: 50
    true: 0

  golden_feathers:
    # Number of Golden Feathers in the item pool.
    # (Note that for the Photo and Help Everyone goals, a minimum of 12 Golden Feathers is enforced)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  silver_feathers:
    # Number of Silver Feathers in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  buckets:
    # Number of Buckets in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 2
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  golden_feather_progression:
    # Determines which locations are considered in logic based on the required amount of golden feathers to reach them.
    # Easy: Locations will be considered inaccessible until the player has enough golden feathers to easily reach them. A minimum of 10 golden feathers is recommended for this setting.
    # Normal: Locations will be considered inaccessible until the player has the minimum possible number of golden feathers to reach them. A minimum of 7 golden feathers is recommended for this setting.
    # Hard: Removes the requirement of golden feathers for progression entirely and glitches may need to be used to progress
    easy: 0
    normal: 50
    hard: 0

  cost_multiplier:
    # The percentage that all item shop costs will be of the vanilla values.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 200
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  filler_coin_amount:
    # The number of coins that will be in each filler coin item.
    7_coins: 0
    13_coins: 50
    15_coins: 0
    18_coins: 0
    21_coins: 0
    25_coins: 0
    27_coins: 0
    32_coins: 0
    33_coins: 0
    50_coins: 0

Adventure:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  dragon_slay_check:
    # If true, slaying each dragon for the first time is a check
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  bat_logic:
    # How the bat is considered for logic
    #
    # With cannot_break, the bat cannot pick up an item that starts out-of-logic until the player touches it
    # With can_break, the bat is free to pick up any items, even if they are out-of-logic
    # With use_logic, the bat can pick up anything just like can_break, and locations are no longer considered to require
    #   the magnet or bridge to collect, since the bat can retrieve these.
    # A future option may allow the bat itself to be placed as an item.
    #
    # Supported values: cannot_break, can_break, use_logic
    # Default value: can_break
    cannot_break: 0
    can_break: 50
    use_logic: 0

  freeincarnate_max:
    # How many maximum freeincarnate items to allow
    #
    # When done generating items, any remaining item slots will be filled
    # with freeincarnates, up to this maximum amount.  Any remaining item
    # slots after that will be 'nothing' items placed locally, so in multigame
    # multiworlds, keeping this value high will allow more items from other games
    # into Adventure.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 17
    17: 50
    random: 0
    random-low: 0
    random-high: 0

  dragon_rando_type:
    # How to randomize the dragon starting locations
    #
    # normal: Grundle is in the overworld, Yorgle in the white castle, and Rhindle in the black castle
    # shuffle: A random dragon is placed in the overworld, one in the white castle, and one in the black castle
    # overworldplus: Dragons can be placed anywhere, but at least one will be in the overworld
    # randomized: Dragons can be anywhere except the credits room
    #

    # Supported values: normal, shuffle, overworldplus, randomized
    # Default value: shuffle
    normal: 0
    shuffle: 50
    overworldplus: 0
    randomized: 0

  connector_multi_slot:
    # If true, the client and lua connector will add lowest 8 bits of the player slot
    # to the port number used to connect to each other, to simplify connecting multiple local
    # clients to local EmuHawk instances.
    # Set in the yaml, since the connector has to read this out of the rom file before connecting.
    false: 50
    true: 0

  yorgle_speed:
    # Sets Yorgle's initial speed.  Yorgle has a speed of 2 in the original game
    # Default value: 2
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  yorgle_min_speed:
    # Sets Yorgle's speed when all speed reducers are found.  Yorgle has a speed of 2 in the original game
    # Default value: 2
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  grundle_speed:
    # Sets Grundle's initial speed.  Grundle has a speed of 2 in the original game
    # Default value: 2
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  grundle_min_speed:
    # Sets Grundle's speed when all speed reducers are found.  Grundle has a speed of 2 in the original game
    # Default value: 2
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  rhindle_speed:
    # Sets Rhindle's initial speed.  Rhindle has a speed of 3 in the original game
    # Default value: 3
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  rhindle_min_speed:
    # Sets Rhindle's speed when all speed reducers are found.  Rhindle has a speed of 3 in the original game
    # Default value: 2
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  difficulty_switch_a:
    # Set availability of left difficulty switch
    # This controls the speed of the dragons' bite animation
    normal: 0
    locked_hard: 0
    hard_with_unlock_item: 50

  difficulty_switch_b:
    # Set availability of right difficulty switch
    # On hard, dragons will run away from the sword
    normal: 0
    locked_hard: 0
    hard_with_unlock_item: 50

  start_castle:
    # Choose or randomize which castle to start in front of.
    #
    # This affects both normal start and reincarnation.  Starting
    # at the black castle may give easy dot runs, while starting
    # at the white castle may make them more dangerous!  Also, not
    # starting at the yellow castle can make delivering the chalice
    # with a full inventory slightly less trivial.
    #
    # This doesn't affect logic since all the castles are reachable
    # from each other.
    yellow: 50
    black: 0
    white: 0

Blasphemous:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  prie_dieu_warp:
    # Automatically unlocks the ability to warp between Prie Dieu shrines.
    false: 0
    true: 50

  skip_cutscenes:
    # Automatically skips most cutscenes.
    false: 0
    true: 50

  corpse_hints:
    # Changes the 34 corpses in game to give various hints about item locations.
    false: 0
    true: 50

  difficulty:
    # Adjusts the overall difficulty of the randomizer, including upgrades required to defeat bosses
    # and advanced movement tricks or glitches.
    easy: 0
    normal: 50
    hard: 0

  penitence:
    # Allows one of the three Penitences to be chosen at the beginning of the game.
    false: 50
    true: 0

  starting_location:
    # Choose where to start the randomizer. Note that some starting locations cannot be chosen with certain
    # other options.
    # Specifically, Brotherhood and Mourning And Havoc cannot be chosen if Shuffle Dash is enabled, and Grievance Ascends
    # cannot be chosen if Shuffle Wall Climb is enabled.
    brotherhood: 50
    albero: 0
    convent: 0
    grievance: 0
    knot_of_words: 0
    rooftops: 0
    mourning_havoc: 0

  ending:
    # Choose which ending is required to complete the game.
    # Talking to Tirso in Albero will tell you the selected ending for the current game.
    # Ending A: Collect all thorn upgrades.
    # Ending C: Collect all thorn upgrades and the Holy Wound of Abnegation.
    any_ending: 50
    ending_a: 0
    ending_c: 0

  skip_long_quests:
    # Ensures that the rewards for long quests will be filler items.
    # Affected locations: "Albero: Donate 50000 Tears", "Ossuary: 11th reward", "AtTotS: Miriam's gift",
    # "TSC: Jocinero's final reward"
    false: 50
    true: 0

  thorn_shuffle:
    # Shuffles the Thorn given by Deogracias and all Thorn upgrades into the item pool.
    anywhere: 50
    local_only: 0
    vanilla: 0

  dash_shuffle:
    # Turns the ability to dash into an item that must be found in the multiworld.
    false: 50
    true: 0

  wall_climb_shuffle:
    # Turns the ability to climb walls with your sword into an item that must be found in the multiworld.
    false: 50
    true: 0

  reliquary_shuffle:
    # Adds the True Torment exclusive Reliquary rosary beads into the item pool.
    false: 0
    true: 50

  boots_of_pleading:
    # Adds the custom relic Boots of Pleading into the item pool, which grants the ability to fall onto spikes
    # and survive.
    # Must have the "Blasphemous-Boots-of-Pleading" mod installed to connect to a multiworld.
    false: 50
    true: 0

  purified_hand:
    # Adds the custom relic Purified Hand of the Nun into the item pool, which grants the ability to jump
    # a second time in mid-air.
    # Must have the "Blasphemous-Double-Jump" mod installed to connect to a multiworld.
    false: 50
    true: 0

  start_wheel:
    # Changes the beginning gift to The Young Mason's Wheel.
    false: 50
    true: 0

  skill_randomizer:
    # Randomizes the abilities from the skill tree into the item pool.
    false: 50
    true: 0

  enemy_randomizer:
    # Randomizes the enemies that appear in each room.
    # Shuffled: Enemies will be shuffled amongst each other, but can only appear as many times as they do in
    # a standard game.
    # Randomized: Every enemy is completely random, and can appear any number of times.
    # Some enemies will never be randomized.
    disabled: 50
    shuffled: 0
    randomized: 0

  enemy_groups:
    # Randomized enemies will chosen from sets of specific groups.
    # (Weak, normal, large, flying)
    # Has no effect if Enemy Randomizer is disabled.
    false: 0
    true: 50

  enemy_scaling:
    # Randomized enemies will have their stats increased or decreased depending on the area they appear in.
    # Has no effect if Enemy Randomizer is disabled.
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. The reverse is also true.
    # Note that Guilt Fragments will not appear when killed by Death Link.
    false: 0
    true: 1

Castlevania 64:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  character_stages:
    # Whether to include Reinhardt-only stages, Carrie-only stages, or both with or without branching paths at the end
    # of Villa and Castle Center.
    both: 50
    branchless_both: 0
    reinhardt_only: 0
    carrie_only: 0

  stage_shuffle:
    # Shuffles which stages appear in which stage slots. Villa and Castle Center will never appear in any character
    # stage slots if Character Stages is set to Both; they can only be somewhere on the main path.
    # Castle Keep will always be at the end of the line.
    false: 50
    true: 0

  starting_stage:
    # Which stage to start at if Stage Shuffle is turned on.
    forest_of_silence: 0
    castle_wall: 0
    villa: 0
    tunnel: 0
    underground_waterway: 0
    castle_center: 0
    duel_tower: 0
    tower_of_execution: 0
    tower_of_science: 0
    tower_of_sorcery: 0
    room_of_clocks: 0
    clock_tower: 0
    random: 50

  warp_order:
    # Arranges the warps in the warp menu in whichever stage order chosen,
    # thereby changing the order they are unlocked in.
    seed_stage_order: 50
    vanilla_stage_order: 0
    randomized_order: 0

  sub_weapon_shuffle:
    # Shuffles all sub-weapons in the game within each other in their own pool or in the main item pool.
    off: 50
    own_pool: 0
    anywhere: 0

  spare_keys:
    # Puts an additional copy of every non-Special key item in the pool for every key item that there is.
    # Chance gives each key item a 50% chance of having a duplicate instead of guaranteeing one for all of them.
    off: 50
    on: 0
    chance: 0

  hard_item_pool:
    # Replaces some items in the item pool with less valuable ones, to make the item pool sort of resemble Hard Mode
    # in the PAL version.
    false: 50
    true: 0

  special1s_per_warp:
    # Sets how many Special1 jewels are needed per warp menu option unlock.
    # This will decrease until the number x 7 is less than or equal to the Total Specail1s if it isn't already.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  total_special1s:
    # Sets how many Speical1 jewels are in the pool in total.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 7
    # Maximum value is 70
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  draculas_condition:
    # Sets the requirement for unlocking and opening the door to Dracula's chamber.
    # None: No requirement. Door is unlocked from the start.
    # Crystal: Activate the big crystal in Castle Center's basement. Neither boss afterwards has to be defeated.
    # Bosses: Kill a specified number of bosses with health bars and claim their Trophies.
    # Specials: Find a specified number of Special2 jewels shuffled in the main item pool.
    none: 0
    crystal: 50
    bosses: 0
    specials: 0

  percent_special2s_required:
    # Percentage of Special2s required to enter Dracula's chamber when Dracula's Condition is Special2s.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    80: 50
    random: 0
    random-low: 0
    random-high: 0

  total_special2s:
    # How many Speical2 jewels are in the pool in total when Dracula's Condition is Special2s.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 70
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  bosses_required:
    # How many bosses need to be defeated to enter Dracula's chamber when Dracula's Condition is set to Bosses.
    # This will automatically adjust if there are fewer available bosses than the chosen number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 16
    14: 50
    random: 0
    random-low: 0
    random-high: 0

  carrie_logic:
    # Adds the 2 checks inside Underground Waterway's crawlspace to the pool.
    # If you (and everyone else if racing the same seed) are planning to only ever play Reinhardt, don't enable this.
    # Can be combined with Hard Logic to include Carrie-only tricks.
    false: 50
    true: 0

  hard_logic:
    # Properly considers sequence break tricks in logic (i.e. maze skip). Can be combined with Carrie Logic to include
    # Carrie-only tricks.
    # See the Game Page for a full list of tricks and glitches that may be logically required.
    false: 50
    true: 0

  multi_hit_breakables:
    # Adds the items that drop from the objects that break in three hits to the pool. There are 18 of these throughout
    # the game, adding up to 79 or 80 checks (depending on sub-weapons
    # being shuffled anywhere or not) in total with all stages.
    # The game will be modified to
    # remember exactly which of their items you've picked up instead of simply whether they were broken or not.
    false: 50
    true: 0

  empty_breakables:
    # Adds 9 check locations in the form of breakables that normally have nothing (all empty Forest coffins, etc.)
    # and some additional Red Jewels and/or moneybags into the item pool to compensate.
    false: 50
    true: 0

  lizard_locker_items:
    # Adds the 6 items inside Castle Center 2F's Lizard-man generators to the pool.
    # Picking up all of these can be a very tedious luck-based process, so they are off by default.
    false: 50
    true: 0

  shopsanity:
    # Adds 7 one-time purchases from Renon's shop into the location pool. After buying an item from a slot, it will
    # revert to whatever it is in the vanilla game.
    false: 50
    true: 0

  shop_prices:
    # Randomizes the amount of gold each item costs in Renon's shop.
    # Use the below options to control how much or little an item can cost.
    vanilla: 50
    randomized: 0

  minimum_gold_price:
    # The lowest amount of gold an item can cost in Renon's shop, divided by 100.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 50
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  maximum_gold_price:
    # The highest amount of gold an item can cost in Renon's shop, divided by 100.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 50
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  post_behemoth_boss:
    # Sets which boss is fought in the vampire triplets' room in Castle Center by which characters after defeating
    # Behemoth.
    vanilla: 50
    inverted: 0
    always_rosa: 0
    always_camilla: 0

  room_of_clocks_boss:
    # Sets which boss is fought at Room of Clocks by which characters.
    vanilla: 50
    inverted: 0
    always_death: 0
    always_actrise: 0

  renon_fight_condition:
    # Sets the condition on which the Renon fight will trigger.
    never: 0
    spend_30k: 50
    always: 0

  vincent_fight_condition:
    # Sets the condition on which the vampire Vincent fight will trigger.
    never: 0
    wait_16_days: 50
    always: 0

  bad_ending_condition:
    # Sets the condition on which the currently-controlled character's Bad Ending will trigger.
    never: 0
    kill_vincent: 50
    always: 0

  increase_item_limit:
    # Increases the holding limit of usable items from 10 to 99 of each item.
    false: 0
    true: 50

  nerf_healing_items:
    # Decreases the amount of health healed by Roast Chickens to 25%, Roast Beefs to 50%, and Healing Kits to 80%.
    false: 50
    true: 0

  loading_zone_heals:
    # Whether end-of-level loading zones restore health and cure status aliments or not.
    # Recommended off for those looking for more of a survival horror experience!
    false: 0
    true: 50

  invisible_items:
    # Sets which items are visible in their locations and which are invisible until picked up.
    # 'Chance' gives each item a 50/50 chance of being visible or invisible.
    vanilla: 50
    reveal_all: 0
    hide_all: 0
    chance: 0

  drop_previous_sub_weapon:
    # When receiving a sub-weapon, the one you had before will drop behind you, so it can be taken back if desired.
    false: 50
    true: 0

  permanent_powerups:
    # Replaces PowerUps with PermaUps, which upgrade your B weapon level permanently and will stay even after
    # dying and/or continuing.
    # To compensate, only two will be in the pool overall, and they will not drop from any enemy or projectile.
    false: 50
    true: 0

  ice_trap_percentage:
    # Replaces a percentage of junk items with Ice Traps.
    # These will be visibly disguised as other items, and receiving one will freeze you
    # as if you were hit by Camilla's ice cloud attack.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  ice_trap_appearance:
    # What items Ice Traps can possibly be disguised as.
    major_only: 50
    junk_only: 0
    anything: 0

  disable_time_restrictions:
    # Disables the restriction on every event and door that requires the current time
    # to be within a specific range, so they can be triggered at any time.
    # This includes all sun/moon doors and, in the Villa, the meeting with Rosa and the fountain pillar.
    # The Villa coffin is not affected by this.
    false: 50
    true: 0

  skip_gondolas:
    # Makes jumping on and activating a gondola in Tunnel instantly teleport you
    # to the other station, thereby skipping the entire three-minute ride.
    # The item normally at the gondola transfer point is moved to instead be
    # near the red gondola at its station.
    false: 50
    true: 0

  skip_waterway_blocks:
    # Opens the door to the third switch in Underground Waterway from the start so that the jumping across floating
    # brick platforms won't have to be done. Shopping at the Contract on the other side of them may still be logically
    # required if Shopsanity is on.
    false: 50
    true: 0

  countdown:
    # Displays, near the HUD clock and below the health bar, the number of unobtained progression-marked items
    # or the total check locations remaining in the stage you are currently in.
    none: 50
    majors: 0
    all_locations: 0

  big_toss:
    # Makes every non-immobilizing damage source launch you as if you got hit by Behemoth's charge.
    # Press A while tossed to cancel the launch momentum and avoid being thrown off ledges.
    # Hold Z to have all incoming damage be treated as it normally would.
    # Any tricks that might be possible with it are NOT considered in logic by any options.
    false: 50
    true: 0

  panther_dash:
    # Hold C-right at any time to sprint way faster. Any tricks that might be
    # possible with it are NOT considered in logic by any options and any boss
    # fights with boss health meters, if started, are expected to be finished
    # before leaving their arenas if Dracula's Condition is bosses. Jumpless will
    # prevent jumping while moving at the increased speed to ensure logic cannot be broken with it.
    off: 50
    on: 0
    jumpless: 0

  increase_shimmy_speed:
    # Increases the speed at which characters shimmy left and right while hanging on ledges.
    false: 50
    true: 0

  background_music:
    # Randomizes or disables the music heard throughout the game.
    # Randomized music is split into two pools: songs that loop and songs that don't.
    # The "lead-in" versions of some songs will be paired accordingly.
    normal: 50
    disabled: 0
    randomized: 0

  map_lighting:
    # Randomizes the lighting color RGB values on every map during every time of day to be literally anything.
    # The colors and/or shading of the following things are affected: fog, maps, player, enemies, and some objects.
    normal: 50
    randomized: 0

  fall_guard:
    # Removes fall damage from landing too hard. Note that falling for too long will still result in instant death.
    false: 50
    true: 0

  cinematic_experience:
    # Enables an unused film reel effect on every cutscene in the game. Purely cosmetic.
    false: 50
    true: 0

  window_color_r:
    # The red value for the background color of the text windows during gameplay.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  window_color_g:
    # The green value for the background color of the text windows during gameplay.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  window_color_b:
    # The blue value for the background color of the text windows during gameplay.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  window_color_a:
    # The alpha value for the background color of the text windows during gameplay.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    # Explosive: Makes received DeathLinks kill you via the Magical Nitro explosion
    # instead of the normal death animation.
    off: 0
    on: 0
    explosive: 1

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

Celeste 64:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  death_link_amnesty:
    # How many deaths it takes to send a DeathLink
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 30
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  strawberries_required:
    # How many Strawberries you must receive to finish
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    15: 50
    random: 0
    random-low: 0
    random-high: 0

Dark Souls III:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  enable_weapon_locations:
    # Randomizes weapons (+76 locations)
    false: 0
    true: 50

  enable_shield_locations:
    # Randomizes shields (+24 locations)
    false: 0
    true: 50

  enable_armor_locations:
    # Randomizes armor pieces (+97 locations)
    false: 0
    true: 50

  enable_ring_locations:
    # Randomizes rings (+49 locations)
    false: 0
    true: 50

  enable_spell_locations:
    # Randomizes spells (+18 locations)
    false: 0
    true: 50

  enable_key_locations:
    # Randomizes items which unlock doors or bypass barriers
    false: 0
    true: 50

  enable_boss_locations:
    # Randomizes Boss Souls (+18 Locations)
    false: 0
    true: 50

  enable_npc_locations:
    # Randomizes friendly NPC drops (meaning you will probably have to kill them) (+14 locations)
    false: 50
    true: 0

  enable_misc_locations:
    # Randomizes miscellaneous items (ashes, tomes, scrolls, etc.) to the pool. (+36 locations)
    false: 50
    true: 0

  enable_health_upgrade_locations:
    # Randomizes health upgrade items. (+21 locations)
    false: 50
    true: 0

  enable_progressive_locations:
    # Randomizes upgrade materials and consumables such as the titanite shards, firebombs, resin, etc...
    #
    # Instead of specific locations, these are progressive, so Titanite Shard #1 is the first titanite shard
    # you pick up, regardless of whether it's from an enemy drop late in the game or an item on the ground in the
    # first 5 minutes.
    false: 50
    true: 0

  pool_type:
    # Changes which non-progression items you add to the pool
    #
    # Shuffle: Items are picked from the locations being randomized
    # Various: Items are picked from a list of all items in the game, but are the same type of item they replace
    shuffle: 50
    various: 0

  guaranteed_items:
    # Guarantees that the specified items will be in the item pool
    {}

  auto_equip:
    # Automatically equips any received armor or left/right weapons.
    false: 50
    true: 0

  lock_equip:
    # Lock the equipment slots so you cannot change your armor or your left/right weapons. Works great with the
    # Auto-equip option.
    false: 50
    true: 0

  no_weapon_requirements:
    # Disable the weapon requirements by removing any movement or damage penalties.
    # Permitting you to use any weapon early
    false: 50
    true: 0

  randomize_infusion:
    # Enable this option to infuse a percentage of the pool of weapons and shields.
    false: 50
    true: 0

  randomize_infusion_percentage:
    # The percentage of weapons/shields in the pool to be infused if Randomize Infusion is toggled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_weapon_level:
    # Enable this option to upgrade a percentage of the pool of weapons to a random value between the minimum and
    # maximum levels defined.
    #
    # All: All weapons are eligible, both basic and epic
    # Basic: Only weapons that can be upgraded to +10
    # Epic: Only weapons that can be upgraded to +5
    none: 50
    all: 0
    basic: 0
    epic: 0

  randomize_weapon_level_percentage:
    # The percentage of weapons in the pool to be upgraded if randomize weapons level is toggled
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 50
    random: 0
    random-low: 0
    random-high: 0

  min_levels_in_5:
    # The minimum upgraded value of a weapon in the pool of weapons that can only reach +5
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  max_levels_in_5:
    # The maximum upgraded value of a weapon in the pool of weapons that can only reach +5
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  min_levels_in_10:
    # The minimum upgraded value of a weapon in the pool of weapons that can reach +10
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  max_levels_in_10:
    # The maximum upgraded value of a weapon in the pool of weapons that can reach +10
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  early_banner:
    # This option makes it so the user can choose to force the Small Lothric Banner into an early sphere in their world or
    # into an early sphere across all worlds.
    off: 50
    early_global: 0
    early_local: 0

  late_basin_of_vows:
    # This option makes it so the Basin of Vows is still randomized, but guarantees you that you wont have to venture into
    # Lothric Castle to find your Small Lothric Banner to get out of High Wall of Lothric. So you may find Basin of Vows early,
    # but you wont have to fight Dancer to find your Small Lothric Banner.
    false: 50
    true: 0

  late_dlc:
    # This option makes it so you are guaranteed to find your Small Doll without having to venture off into the DLC,
    # effectively putting anything in the DLC in logic after finding both Contraption Key and Small Doll,
    # and being able to get into Irithyll of the Boreal Valley.
    false: 50
    true: 0

  no_spell_requirements:
    # Disable the spell requirements permitting you to use any spell
    false: 50
    true: 0

  no_equip_load:
    # Disable the equip load constraint from the game
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  enable_dlc:
    # To use this option, you must own both the ASHES OF ARIANDEL and the RINGED CITY DLC
    false: 50
    true: 0

DLCQuest:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  double_jump_glitch:
    # Whether to include the double jump glitches in logic. Separated between the simple ones and the very difficult ones
    none: 50
    simple: 0
    all: 0

  coinsanity:
    # Whether collecting coins are checks
    # If none, you will collect your own coins
    none: 50
    coin: 0

  coinbundlequantity:
    # This is the amount of coins in a coin bundle
    # You need to collect that number of coins to get a location check, and when receiving coin items, you will get bundles of this size
    # It is highly recommended to not set this value below 10, as it generates a very large number of boring locations and items.
    # In the worst case, it is 1500+ checks for a single coin
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    low: 0 # equivalent to 5
    normal: 50 # equivalent to 20
    high: 0 # equivalent to 50
    coin piece: 0 # equivalent to -1

  permanent_coins:
    # If purchasing a pack decreases your current coins amounts.
    false: 50
    true: 0

  time_is_money:
    # Whether the Time is Money pack is considered required to complete the grindstone.
    # If optional, you may be expected to grind 10 000 times by hand
    required: 50
    optional: 0

  ending_choice:
    # Which ending is considered completion for the DLC Quest campaign, either any ending or the true ending
    any: 0
    true: 50

  campaign:
    # Which campaign you want to play
    basic: 50
    live_freemium_or_die: 0
    both: 0

  item_shuffle:
    # Should Inventory Items be separate from their DLCs and shuffled in the item pool
    disabled: 50
    shuffled: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Donkey Kong Country 3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines the goal of the seed
    # Knautilus: Scuttle the Knautilus in Krematoa and defeat Baron K. Roolenstein
    # Banana Bird Hunt: Find a certain number of Banana Birds and rescue their mother
    knautilus: 50
    banana_bird_hunt: 0

  dk_coins_for_gyrocopter:
    # How many DK Coins are needed to unlock the Gyrocopter
    # Note: Achieving this number before unlocking the Turbo Ski will cause the game to grant you a
    # one-time upgrade to the next non-unlocked boat, until you return to Funky. Logic does not assume
    # that you will use this.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 41
    30: 0
    random: 1
    random-low: 0
    random-high: 0

  krematoa_bonus_coin_cost:
    # How many Bonus Coins are needed to unlock each level in Krematoa
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 17
    15: 0
    random: 1
    random-low: 0
    random-high: 0

  percentage_of_extra_bonus_coins:
    # What Percentage of unneeded Bonus Coins are included in the item pool
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  number_of_banana_birds:
    # How many Banana Birds are put into the item pool
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 15
    15: 0
    random: 1
    random-low: 0
    random-high: 0

  percentage_of_banana_birds:
    # What Percentage of Banana Birds in the item pool are required for Banana Bird Hunt
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 20
    # Maximum value is 100
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  kongsanity:
    # Whether collecting all four KONG letters in each level grants a check
    false: 1
    true: 1

  level_shuffle:
    # Whether levels are shuffled
    false: 0
    true: 1

  difficulty:
    # Which Difficulty Level to use
    # NORML: The Normal Difficulty
    # HARDR: Many DK Barrels are removed
    # TUFST: Most DK Barrels and all Midway Barrels are removed
    norml: 50
    hardr: 0
    tufst: 0

  autosave:
    # Whether the game should autosave after each level
    false: 0
    true: 50

  merry:
    # Whether the Bonus Barrels will be Christmas-themed
    false: 50
    true: 0

  music_shuffle:
    # Whether music is shuffled
    false: 50
    true: 0

  kong_palette_swap:
    # Which Palette to use for the Kongs
    default: 1
    purple: 1
    spooky: 1
    dark: 1
    chocolate: 1
    shadow: 1
    red_gold: 1
    gbc: 1
    halloween: 1

  starting_life_count:
    # How many extra lives to start the game with
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    5: 50
    random: 0
    random-low: 0
    random-high: 0

DOOM 1993:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Choose the main goal.
    # complete_all_levels: All levels of the selected episodes
    # complete_boss_levels: Boss levels (E#M8) of selected episodes
    complete_all_levels: 50
    complete_boss_levels: 0

  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    baby: 0
    easy: 0
    medium: 50
    hard: 0
    nightmare: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    # random_chaotic: Monsters are completely randomized, but balanced based on existing ratio in the entire game.
    vanilla: 0
    shuffle: 50
    random_balanced: 0
    random_chaotic: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 50
    shuffle_selected: 0
    shuffle_game: 0

  flip_levels:
    # Flip levels on one axis.
    # vanilla: No flipping
    # flipped: All levels are flipped
    # randomly_flipped: Random levels are flipped
    vanilla: 50
    flipped: 0
    randomly_flipped: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  start_with_computer_area_maps:
    # Give the player all Computer Area Map items from the start.
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 0
    true: 50

  episode1:
    # Knee-Deep in the Dead.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # The Shores of Hell.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # Inferno.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode4:
    # Thy Flesh Consumed.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0

DOOM II:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    baby: 0
    easy: 0
    medium: 50
    hard: 0
    nightmare: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    # random_chaotic: Monsters are completely randomized, but balanced based on existing ratio in the entire game.
    vanilla: 0
    shuffle: 0
    random_balanced: 50
    random_chaotic: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 50
    shuffle_selected: 0
    shuffle_game: 0

  flip_levels:
    # Flip levels on one axis.
    # vanilla: No flipping
    # flipped: All levels are flipped
    # random: Random levels are flipped
    vanilla: 50
    flipped: 0
    randomly_flipped: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  start_with_computer_area_maps:
    # Give the player all Computer Area Map items from the start.
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 0
    true: 50

  episode1:
    # Subterranean and Outpost.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # City.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # Hell.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode4:
    # Secret levels.
    # This is too short to be an episode. It's additive.
    # Another episode will have to be selected along with this one.
    # Otherwise episode 1 will be added.
    false: 50
    true: 0

Factorio:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  max_science_pack:
    # Maximum level of science pack required to complete the game.
    # This also affects the relative cost of silo and satellite recipes if they are randomized.
    # That is the only thing in which the Utility Science Pack and Space Science Pack settings differ.
    automation_science_pack: 0
    logistic_science_pack: 0
    military_science_pack: 0
    chemical_science_pack: 0
    production_science_pack: 0
    utility_science_pack: 0
    space_science_pack: 50

  goal:
    # Goal required to complete the game.
    rocket: 50
    satellite: 0

  tech_tree_layout:
    # Selects how the tech tree nodes are interwoven.
    # Single: No dependencies
    # Diamonds: Several grid graphs (4/9/16 nodes each)
    # Pyramids: Several top halves of diamonds (6/10/15 nodes each)
    # Funnels: Several bottom halves of diamonds (6/10/15 nodes each)
    # Trees: Several trees
    # Choices: A single balanced binary tree
    single: 50
    small_diamonds: 0
    medium_diamonds: 0
    large_diamonds: 0
    small_pyramids: 0
    medium_pyramids: 0
    large_pyramids: 0
    small_funnels: 0
    medium_funnels: 0
    large_funnels: 0
    trees: 0
    choices: 0

  min_tech_cost:
    # The cheapest a Technology can be in Science Packs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10000
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  max_tech_cost:
    # The most expensive a Technology can be in Science Packs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10000
    500: 50
    random: 0
    random-low: 0
    random-high: 0

  tech_cost_distribution:
    # Random distribution of costs of the Science Packs.
    # Even: any number between min and max is equally likely.
    # Low: low costs, near the minimum, are more likely.
    # Middle: medium costs, near the average, are more likely.
    # High: high costs, near the maximum, are more likely.
    even: 50
    low: 0
    middle: 0
    high: 0

  tech_cost_mix:
    # Percent chance that a preceding Science Pack is also required.
    # Chance is rolled per preceding pack.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    70: 50
    random: 0
    random-low: 0
    random-high: 0

  ramping_tech_costs:
    # Forces the amount of Science Packs required to ramp up with the highest involved Pack. Average is preserved.
    # For example:
    # off: Automation (red)/Logistics (green) sciences can range from 1 to 1000 Science Packs,
    # on: Automation (red) ranges to ~500 packs and Logistics (green) from ~500 to 1000 Science Packs
    false: 50
    true: 0

  silo:
    # Ingredients to craft rocket silo or auto-place if set to spawn.
    vanilla: 50
    randomize_recipe: 0
    spawn: 0

  satellite:
    # Ingredients to craft satellite.
    vanilla: 50
    randomize_recipe: 0

  free_samples:
    # Get free items with your technologies.
    none: 0
    single_craft: 0
    half_stack: 0
    stack: 50

  tech_tree_information:
    # How much information should be displayed in the tech tree.
    # None: No indication of what a research unlocks.
    # Advancement: Indicates if a research unlocks an item that is considered logical advancement, but not who it is for.
    # Full: Labels with exact names and recipients of unlocked items; all researches are prefilled into the !hint command.
    none: 0
    advancement: 0
    full: 50

  starting_items:
    # Mapping of Factorio internal item-name to amount granted on start.
    burner-mining-drill: 4
    raw-fish: 50
    stone-furnace: 4

  free_sample_blacklist:
    # Set of items that should never be granted from Free Samples
    []

  free_sample_whitelist:
    # Overrides any free sample blacklist present. This may ruin the balance of the mod, be warned.
    []

  recipe_time:
    # Randomize the time it takes for any recipe to craft, this includes smelting, chemical lab, hand crafting etc.
    # Fast: 0.25X - 1X
    # Normal: 0.5X - 2X
    # Slow: 1X - 4X
    # Chaos: 0.25X - 4X
    # New category: ignores vanilla recipe time and rolls new one
    # New Fast: 0.25 - 2 seconds
    # New Normal: 0.25 - 10 seconds
    # New Slow:  5 - 10 seconds
    vanilla: 50
    fast: 0
    normal: 0
    slow: 0
    chaos: 0
    new_fast: 0
    new_normal: 0
    new_slow: 0

  recipe_ingredients:
    # Select if rocket, or rocket + science pack ingredients should be random.
    rocket: 50
    science_pack: 0

  recipe_ingredients_offset:
    # When randomizing ingredients, remove or add this many "slots" of items.
    # For example, at -1 a randomized Automation Science Pack will only require 1 ingredient, instead of 2.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 5
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  imported_blueprints:
    # Allow or Disallow Blueprints from outside the current savegame.
    false: 0
    true: 50

  world_gen:
    # World Generation settings. Overview of options at https://wiki.factorio.com/Map_generator,
    # with in-depth documentation at https://lua-api.factorio.com/latest/Concepts.html#MapGenSettings
    autoplace_controls:
      coal:
        frequency: 1
        richness: 6
        size: 3
      copper-ore:
        frequency: 1
        richness: 6
        size: 3
      crude-oil:
        frequency: 1
        richness: 6
        size: 3
      enemy-base:
        frequency: 1
        richness: 1
        size: 1
      iron-ore:
        frequency: 1
        richness: 6
        size: 3
      stone:
        frequency: 1
        richness: 6
        size: 3
      trees:
        frequency: 1
        richness: 1
        size: 1
      uranium-ore:
        frequency: 1
        richness: 6
        size: 3
    cliff_settings:
      cliff_elevation_0: 10
      cliff_elevation_interval: 40
      name: cliff
      richness: 1
    enemy_evolution:
      destroy_factor: 0.002
      enabled: true
      pollution_factor: 9.0e-07
      time_factor: 4.0e-06
    enemy_expansion:
      enabled: true
      max_expansion_cooldown: 216000
      max_expansion_distance: 7
      min_expansion_cooldown: 14400
      settler_group_max_size: 20
      settler_group_min_size: 5
    peaceful_mode: false
    pollution:
      ageing: 1
      diffusion_ratio: 0.02
      enabled: true
      enemy_attack_pollution_consumption_modifier: 1
      min_pollution_to_damage_trees: 60
      pollution_restored_per_tree_damage: 10
    property_expression_names:
      control-setting:aux:bias: 0
      control-setting:aux:frequency:multiplier: 1
      control-setting:moisture:bias: 0
      control-setting:moisture:frequency:multiplier: 1
    seed: null
    starting_area: 1
    terrain_segmentation: 0.5
    water: 1.5

  progressive:
    # Merges together Technologies like "automation-1" to "automation-3" into 3 copies of "Progressive Automation",
    # which awards them in order.
    off: 0
    grouped_random: 0
    on: 50

  teleport_traps:
    # Trap items that when received trigger a random teleport.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  grenade_traps:
    # Trap items that when received trigger a grenade explosion on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  cluster_grenade_traps:
    # Trap items that when received trigger a cluster grenade explosion on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  artillery_traps:
    # Trap items that when received trigger an artillery shell on each player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  atomic_rocket_traps:
    # Trap items that when received trigger an atomic rocket explosion on each player.
    # Warning: there is no warning. The launch is instantaneous.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  attack_traps:
    # Trap items that when received trigger an attack on your base.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  evolution_traps:
    # Trap items that when received increase the enemy evolution.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  evolution_trap_increase:
    # How much an Evolution Trap increases the enemy evolution.
    # Increases scale down proportionally to the session's current evolution factor
    # (40 increase at 0.50 will add 0.20... 40 increase at 0.75 will add 0.10...)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  energy_link:
    # Allow sending energy to other worlds. 25% of the energy is lost in the transfer.
    false: 50
    true: 0

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

Final Fantasy Mystic Quest:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  logic:
    # Placement logic sets the rules that will be applied when placing items. Friendly: Required Items to clear a
    # dungeon will never be placed in that dungeon to avoid the need to revisit it. Also, the Magic Mirror and the Mask
    # will always be available before Ice Pyramid and Volcano, respectively. Note: If Dungeons are shuffled, Friendly
    # logic will only ensure the availability of the Mirror and the Mask. Standard: Items are randomly placed and logic
    # merely verifies that they're all accessible. As for Region access, only the Coins are considered. Expert: Same as
    # Standard, but Items Placement logic also includes other routes than Coins: the Crests Teleporters, the
    # Fireburg-Aquaria Lava bridge and the Sealed Temple Exit trick.
    friendly: 0
    standard: 50
    expert: 0

  brown_boxes:
    # Include the 201 brown box locations from the original game. Brown Boxes are all the boxes that contained a
    # consumable in the original game. If shuffle is chosen, the consumables contained will be shuffled but the brown
    # boxes will not be Archipelago location checks.
    exclude: 0
    include: 50
    shuffle: 0

  sky_coin_mode:
    # Configure how the Sky Coin is acquired. With standard, the Sky Coin will be placed randomly. With Start With, the
    # Sky Coin will be in your inventory at the start of the game. With Save The Crystals, the Sky Coin will be acquired
    # once you save all 4 crystals. With Shattered Sky Coin, the Sky Coin is split in 40 fragments; you can enter Doom
    # Castle once the required amount is found. Shattered Sky Coin will force brown box locations to be included.
    standard: 50
    start_with: 0
    save_the_crystals: 0
    shattered_sky_coin: 0

  shattered_sky_coin_quantity:
    # Configure the number of the 40 Sky Coin Fragments required to enter the Doom Castle. Only has an effect if
    # Sky Coin Mode is set to shattered. Low: 16. Mid: 24. High: 32. Random Narrow: random between 16 and 32.
    # Random Wide: random between 10 and 38.
    low_16: 0
    mid_24: 50
    high_32: 0
    random_narrow: 0
    random_wide: 0

  starting_weapon:
    # Choose your starting weapon.
    steel_sword: 0
    axe: 0
    cat_claw: 0
    bomb: 0
    random: 50

  progressive_gear:
    # Pieces of gear are always acquired from weakest to strongest in a set.
    false: 50
    true: 0

  leveling_curve:
    # Adjust the level gain rate.
    half: 0
    normal: 0
    one_and_half: 0
    double: 0
    double_and_half: 50
    triple: 0
    quadruple: 0

  starting_companion:
    # Set a companion to start with.
    # Random Companion: Randomly select one companion.
    # Random Plus None: Randomly select a companion, with the possibility of none selected.
    none: 50
    kaeli: 0
    tristam: 0
    phoebe: 0
    reuben: 0
    random_companion: 0
    random_plus_none: 0

  available_companions:
    # Select randomly which companions will join your party. Unavailable companions can still be reached to get their items and complete their quests if needed.
    # Note: If a Starting Companion is selected, it will always be available, regardless of this setting.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  companions_locations:
    # Set the primary location of companions. Their secondary location is always the same.
    # Standard: Companions will be at the same locations as in the original game.
    # Shuffled: Companions' locations are shuffled amongst themselves.
    # Shuffled Extended: Add all the Temples, as well as Phoebe's House and the Rope Bridge as possible locations.
    standard: 50
    shuffled: 0
    shuffled_extended: 0

  kaelis_mom_fight_minotaur:
    # Transfer Kaeli's requirements (Tree Wither, Elixir) and the two items she's giving to her mom.
    # Kaeli will be available to join the party right away without the Tree Wither.
    false: 50
    true: 0

  companion_leveling_type:
    # Set how companions gain levels.
    # Quests: Complete each companion's individual quest for them to promote to their second version.
    # Quests Extended: Each companion has four exclusive quests, leveling each time a quest is completed.
    # Save the Crystals (All): Each time a Crystal is saved, all companions gain levels.
    # Save the Crystals (Individual): Each companion will level to their second version when a specific Crystal is saved.
    # Benjamin Level: Companions' level tracks Benjamin's.
    quests: 50
    quests_extended: 0
    save_crystals_individual: 0
    save_crystals_all: 0
    benjamin_level: 0
    benjamin_level_plus_5: 0
    benjamin_level_plus_10: 0

  companion_spellbook_type:
    # Update companions' spellbook.
    # Standard: Original game spellbooks.
    # Extended: Add some extra spells. Tristam gains Exit and Quake and Reuben gets Blizzard.
    # Random Balanced: Randomize the spellbooks with an appropriate mix of spells.
    # Random Chaos: Randomize the spellbooks in total free-for-all.
    standard: 50
    extended: 0
    random_balanced: 0
    random_chaos: 0

  enemies_density:
    # Set how many of the original enemies are on each map.
    all: 50
    three_quarter: 0
    half: 0
    quarter: 0
    none: 0

  enemies_scaling_lower:
    # Randomly adjust enemies stats by the selected range percentage. Include mini-bosses' weaker clones.
    quarter: 50
    half: 0
    three_quarter: 0
    normal: 0
    one_and_quarter: 0
    one_and_half: 0
    double: 0
    double_and_half: 0
    triple: 0

  enemies_scaling_upper:
    # Randomly adjust enemies stats by the selected range percentage. Include mini-bosses' weaker clones.
    quarter: 0
    half: 0
    three_quarter: 0
    normal: 0
    one_and_quarter: 50
    one_and_half: 0
    double: 0
    double_and_half: 0
    triple: 0

  bosses_scaling_lower:
    # Randomly adjust bosses stats by the selected range percentage. Include Mini-Bosses, Bosses, Bosses' refights and
    # the Dark King.
    quarter: 50
    half: 0
    three_quarter: 0
    normal: 0
    one_and_quarter: 0
    one_and_half: 0
    double: 0
    double_and_half: 0
    triple: 0

  bosses_scaling_upper:
    # Randomly adjust bosses stats by the selected range percentage. Include Mini-Bosses, Bosses, Bosses' refights and
    # the Dark King.
    quarter: 0
    half: 0
    three_quarter: 0
    normal: 0
    one_and_quarter: 50
    one_and_half: 0
    double: 0
    double_and_half: 0
    triple: 0

  enemizer_attacks:
    # Shuffles enemy attacks. Standard: No shuffle. Safe: Randomize every attack but leave out self-destruct and Dark
    # King attacks. Chaos: Randomize and include self-destruct and Dark King attacks. Self Destruct: Every enemy
    # self-destructs. Simple Shuffle: Instead of randomizing, shuffle one monster's attacks to another. Dark King is left
    # vanilla.
    normal: 50
    safe: 0
    chaos: 0
    self_destruct: 0
    simple_shuffle: 0

  enemizer_groups:
    # Set which enemy groups will be affected by Enemizer.
    mobs_only: 0
    mobs_and_bosses: 50
    mobs_bosses_and_dark_king: 0

  shuffle_res_weak_types:
    # Resistance and Weakness types are shuffled for all enemies.
    false: 50
    true: 0

  shuffle_enemies_position:
    # Instead of their original position in a given map, enemies are randomly placed.
    false: 0
    true: 50

  progressive_formations:
    # Enemies' formations are selected by regions, with the weakest formations always selected in Foresta and the
    # strongest in Windia. Disabled: Standard formations are used. Regions Strict: Formations will come exclusively
    # from the current region, whatever the map is. Regions Keep Type: Formations will keep the original formation type
    # and match with the nearest power level.
    disabled: 50
    regions_strict: 0
    regions_keep_type: 0

  doom_castle_mode:
    # Configure how you reach the Dark King. With Standard, you need to defeat all four bosses and their floors to
    # reach the Dark King. With Boss Rush, only the bosses are blocking your way in the corridor to the Dark King's room.
    # With Dark King Only, the way to the Dark King is free of any obstacle.
    standard: 50
    boss_rush: 0
    dark_king_only: 0

  doom_castle_shortcut:
    # Create a shortcut granting access from the start to Doom Castle at Focus Tower's entrance.
    # Also modify the Desert floor, so it can be navigated without the Mega Grenades and the Dragon Claw.
    false: 50
    true: 0

  tweak_frustrating_dungeons:
    # Make some small changes to a few of the most annoying dungeons. Ice Pyramid: Add 3 shortcuts on the 1st floor.
    # Giant Tree: Add shortcuts on the 1st and 4th floors and curtail mushrooms population.
    # Pazuzu's Tower: Staircases are devoid of enemies (regardless of Enemies Density settings).
    false: 50
    true: 0

  map_shuffle:
    # None: No shuffle. Overworld: Only shuffle the Overworld locations. Dungeons: Only shuffle the dungeons' floors
    # amongst themselves. Temples and Towns aren't included. Overworld And Dungeons: Shuffle the Overworld and dungeons
    # at the same time. Everything: Shuffle the Overworld, dungeons, temples and towns all amongst each others.
    # When dungeons are shuffled, defeating Pazuzu won't teleport you to the 7th floor, you have to get there normally to
    # save the Crystal and get Pazuzu's Chest.
    none: 50
    overworld: 0
    dungeons: 0
    overworld_and_dungeons: 0
    everything: 0

  crest_shuffle:
    # Shuffle the Crest tiles amongst themselves.
    false: 50
    true: 0

  shuffle_battlefield_rewards:
    # Shuffle the type of reward (Item, XP, GP) given by battlefields and color code them by reward type.
    # Blue: Give an item. Grey: Give XP. Green: Give GP.
    false: 50
    true: 0

  map_shuffle_seed:
    # If this is a number, it will be used as a set seed number for Map, Crest, Battlefield Reward, and Companion shuffles.
    # If this is "random" the seed will be chosen randomly. If it is any other text, it will be used as a seed group name.
    # All players using the same seed group name will get the same shuffle results, as long as their Map Shuffle,
    # Crest Shuffle, Shuffle Battlefield Rewards, Companion Shuffle, and Kaeli's Mom settings are the same.
    random: 50

  battlefields_battles_quantities:
    # Adjust the number of battles that need to be fought to get a battlefield's reward.
    ten: 50
    seven: 0
    five: 0
    three: 0
    one: 0
    random_one_through_five: 0
    random_one_through_ten: 0

Final Fantasy:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  locations:
    # to roll settings go to https://finalfantasyrandomizer.com/
    {}

  items:
    # to roll settings go to https://finalfantasyrandomizer.com/
    {}

  rules:
    # to roll settings go to https://finalfantasyrandomizer.com/
    {}

Heretic:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  goal:
    # Choose the main goal.
    # complete_all_levels: All levels of the selected episodes
    # complete_boss_levels: Boss levels (E#M8) of selected episodes
    complete_all_levels: 50
    complete_boss_levels: 0

  difficulty:
    # Choose the difficulty option. Those match DOOM's difficulty options.
    # baby (I'm too young to die.) double ammos, half damage, less monsters or strength.
    # easy (Hey, not too rough.) less monsters or strength.
    # medium (Hurt me plenty.) Default.
    # hard (Ultra-Violence.) More monsters or strength.
    # nightmare (Nightmare!) Monsters attack more rapidly and respawn.
    #
    # wet nurse (hou needeth a wet-nurse) - Fewer monsters and more items than medium. Damage taken is halved, and ammo pickups carry twice as much ammo. Any Quartz Flasks and Mystic Urns are automatically used when the player nears death.
    # easy (Yellowbellies-r-us) - Fewer monsters and more items than medium.
    # medium (Bringest them oneth) - Completely balanced, this is the standard difficulty level.
    # hard (Thou art a smite-meister) - More monsters and fewer items than medium.
    # black plague (Black plague possesses thee) - Same as hard, but monsters and their projectiles move much faster. Cheating is also disabled.
    wet_nurse: 0
    easy: 0
    medium: 50
    hard: 0
    black_plague: 0

  random_monsters:
    # Choose how monsters are randomized.
    # vanilla: No randomization
    # shuffle: Monsters are shuffled within the level
    # random_balanced: Monsters are completely randomized, but balanced based on existing ratio in the level. (Small monsters vs medium vs big)
    # random_chaotic: Monsters are completely randomized, but balanced based on existing ratio in the entire game.
    vanilla: 0
    shuffle: 50
    random_balanced: 0
    random_chaotic: 0

  random_pickups:
    # Choose how pickups are randomized.
    # vanilla: No randomization
    # shuffle: Pickups are shuffled within the level
    # random_balanced: Pickups are completely randomized, but balanced based on existing ratio in the level. (Small pickups vs Big)
    vanilla: 0
    shuffle: 50
    random_balanced: 0

  random_music:
    # Level musics will be randomized.
    # vanilla: No randomization
    # shuffle_selected: Selected episodes' levels will be shuffled
    # shuffle_game: All the music will be shuffled
    vanilla: 50
    shuffle_selected: 0
    shuffle_game: 0

  allow_death_logic:
    # Some locations require a timed puzzle that can only be tried once.
    # After which, if the player failed to get it, the location cannot be checked anymore.
    # By default, no progression items are placed here. There is a way, hovewer, to still get them:
    # Get killed in the current map. The map will reset, you can now attempt the puzzle again.
    false: 50
    true: 0

  pro:
    # Include difficult tricks into rules. Mostly employed by speed runners.
    # i.e.: Leaps across to a locked area, trigger a switch behind a window at the right angle, etc.
    false: 50
    true: 0

  check_sanity:
    # Include redundant checks. This increase total check count for the game.
    # i.e.: In a room, there might be 3 checks close to each other. By default, two of them will be remove.
    # This was done to lower the total count check for Heretic, as it is quite high compared to other games.
    # Check Sanity restores original checks.
    false: 50
    true: 0

  start_with_map_scrolls:
    # Give the player all Map Scroll items from the start.
    false: 50
    true: 0

  reset_level_on_death:
    # When dying, levels are reset and monsters respawned. But inventory and checks are kept.
    # Turning this setting off is considered easy mode. Good for new players that don't know the levels well.
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  episode1:
    # City of the Damned.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode2:
    # Hell's Maw.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode3:
    # The Dome of D'Sparil.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 0
    true: 50

  episode4:
    # The Ossuary.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0

  episode5:
    # The Stagnant Demesne.
    # If none of the episodes are chosen, Episode 1 will be chosen by default.
    false: 50
    true: 0

Hollow Knight:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  RandomizeDreamers:
    # Allow for Dreamers to be randomized into the item pool and opens their locations for randomization.
    false: 0
    true: 50

  RandomizeSkills:
    # Allow for Skills, such as Mantis Claw or Shade Soul, to be randomized into the item pool. Also opens their locations
    # for receiving randomized items.
    false: 0
    true: 50

  RandomizeFocus:
    # Removes the ability to focus and randomizes it into the item pool.
    false: 50
    true: 0

  RandomizeSwim:
    # Removes the ability to swim in water and randomizes it into the item pool.
    false: 50
    true: 0

  RandomizeCharms:
    # Allow for Charms to be randomized into the item pool and open their locations for randomization. Includes Charms
    # sold in shops.
    false: 0
    true: 50

  RandomizeKeys:
    # Allow for Keys to be randomized into the item pool. Includes those sold in shops.
    false: 0
    true: 50

  RandomizeMaskShards:
    # Allow for Mask Shard to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeVesselFragments:
    # Allow for Vessel Fragments to be randomized into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeCharmNotches:
    # Allow for Charm Notches to be randomized into the item pool. Includes those sold by Salubra.
    false: 0
    true: 50

  RandomizePaleOre:
    # Randomize Pale Ores into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGeoChests:
    # Allow for Geo Chests to contain randomized items, as well as their Geo reward being randomized into the item pool.
    false: 50
    true: 0

  RandomizeJunkPitChests:
    # Randomize the contents of junk pit chests into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeRancidEggs:
    # Randomize Rancid Eggs into the item pool and open their locations for randomization
    false: 50
    true: 0

  RandomizeRelics:
    # Randomize Relics (King's Idol, et al.) into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeWhisperingRoots:
    # Randomize the essence rewards from Whispering Roots into the item pool. Whispering Roots will now grant a randomized
    # item when completed. This can be previewed by standing on the root.
    false: 50
    true: 0

  RandomizeBossEssence:
    # Randomize boss essence drops, such as those for defeating Warrior Dreams, into the item pool and open their locations
    # for randomization.
    false: 50
    true: 0

  RandomizeGrubs:
    # Randomize Grubs into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeMimics:
    # Randomize Mimic Grubs into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeMaps:
    # Randomize Maps into the item pool. This causes Cornifer to give you a message allowing you to see and buy an item
    # that is randomized into that location as well.
    false: 50
    true: 0

  RandomizeStags:
    # Randomize Stag Stations unlocks into the item pool as well as placing randomized items on the stag station bell/toll.
    false: 0
    true: 50

  RandomizeLifebloodCocoons:
    # Randomize Lifeblood Cocoon grants into the item pool and open their locations for randomization.
    false: 0
    true: 50

  RandomizeGrimmkinFlames:
    # Randomize Grimmkin Flames into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeJournalEntries:
    # Randomize the Hunter's Journal as well as the findable journal entries into the item pool, and open their locations
    # for randomization. Does not include journal entries gained by killing enemies.
    false: 50
    true: 0

  RandomizeNail:
    # Removes the ability to swing the nail left, right and up, and shuffles these into the item pool.
    false: 50
    true: 0

  RandomizeGeoRocks:
    # Randomize Geo Rock rewards into the item pool and open their locations for randomization.
    false: 50
    true: 0

  RandomizeBossGeo:
    # Randomize boss Geo drops into the item pool and open those locations for randomization.
    false: 50
    true: 0

  RandomizeSoulTotems:
    # Randomize Soul Refill items into the item pool and open the Soul Totem locations for randomization.
    false: 50
    true: 0

  RandomizeLoreTablets:
    # Randomize Lore items into the itempool, one per Lore Tablet, and place randomized item grants on the tablets themselves.
    # You must still read the tablet to get the item.
    false: 50
    true: 0

  RandomizeElevatorPass:
    # Adds an Elevator Pass item to the item pool, which is then required to use the large elevators connecting
    # City of Tears to the Forgotten Crossroads and Resting Grounds.
    false: 50
    true: 0

  PreciseMovement:
    # Places skips into logic which require extremely precise player movement, possibly without movement skills such as
    # dash or hook.
    false: 50
    true: 0

  ProficientCombat:
    # Places skips into logic which require proficient combat, possibly with limited items.
    false: 50
    true: 0

  BackgroundObjectPogos:
    # Places skips into logic for locations which are reachable via pogoing off of background objects.
    false: 50
    true: 0

  EnemyPogos:
    # Places skips into logic for locations which are reachable via pogos off of enemies.
    false: 50
    true: 0

  ObscureSkips:
    # Places skips into logic which are considered obscure enough that a beginner is not expected to know them.
    false: 50
    true: 0

  ShadeSkips:
    # Places shade skips into logic which utilize the player's shade for pogoing or damage boosting.
    false: 50
    true: 0

  InfectionSkips:
    # Places skips into logic which are only possible after the crossroads become infected.
    false: 50
    true: 0

  FireballSkips:
    # Places skips into logic which require the use of spells to reset fall speed while in mid-air.
    false: 50
    true: 0

  SpikeTunnels:
    # Places skips into logic which require the navigation of narrow tunnels filled with spikes.
    false: 50
    true: 0

  AcidSkips:
    # Places skips into logic which require crossing a pool of acid without Isma's Tear, or water if swim is disabled.
    false: 50
    true: 0

  DamageBoosts:
    # Places skips into logic which require you to take damage from an enemy or hazard to progress.
    false: 50
    true: 0

  DangerousSkips:
    # Places skips into logic which contain a high risk of taking damage.
    false: 50
    true: 0

  DarkRooms:
    # Places skips into logic which require navigating dark rooms without the use of the Lumafly Lantern.
    false: 50
    true: 0

  ComplexSkips:
    # Places skips into logic which require intense setup or are obscure even beyond advanced skip standards.
    false: 50
    true: 0

  DifficultSkips:
    # Places skips into logic which are considered more difficult than typical.
    false: 50
    true: 0

  RemoveSpellUpgrades:
    # Removes the second level of all spells from the item pool.
    false: 50
    true: 0

  StartLocation:
    # Choose your start location. This is currently only locked to King's Pass.
    king's_pass: 50

  Goal:
    # The goal required of you in order to complete your run in Archipelago.
    any: 50
    hollowknight: 0
    siblings: 0
    radiance: 0
    godhome: 0
    godhome_flower: 0

  WhitePalace:
    # Whether or not to include White Palace or not.  Note: Even if excluded, the King Fragment check may still be
    # required if charms are vanilla.
    exclude: 50
    kingfragment: 0
    nopathofpain: 0
    include: 0

  ExtraPlatforms:
    # Places additional platforms to make traveling throughout Hallownest more convenient.
    false: 0
    true: 50

  AddUnshuffledLocations:
    # Adds non-randomized locations to the location pool, which allows syncing
    # of location state with co-op or automatic collection via collect.
    #
    # Note: This will increase the number of location checks required to purchase
    # hints to the total maximum.
    false: 50
    true: 0

  StartingGeo:
    # The amount of starting geo you have.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  DeathLink:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  DeathLinkShade:
    # Sets whether to create a shade when you are killed by a DeathLink and how to handle your existing shade, if any.
    #
    # vanilla: DeathLink deaths function like any other death and overrides your existing shade (including geo), if any.
    # shadeless: DeathLink deaths do not spawn shades. Your existing shade (including geo), if any, is untouched.
    # shade: DeathLink deaths spawn a shade if you do not have an existing shade. Otherwise, it acts like shadeless.
    #
    # * This option has no effect if DeathLink is disabled.
    # ** Self-death shade behavior is not changed; if a self-death normally creates a shade in vanilla, it will override
    #     your existing shade, if any.
    vanilla: 0
    shadeless: 0
    shade: 50

  DeathLinkBreaksFragileCharms:
    # Sets if fragile charms break when you are killed by a DeathLink.
    #
    # * This option has no effect if DeathLink is disabled.
    # ** Self-death fragile charm behavior is not changed; if a self-death normally breaks fragile charms in vanilla, it
    #     will continue to do so.
    false: 0
    true: 1

  MinimumGeoPrice:
    # The minimum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 200
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGeoPrice:
    # The maximum geo price for items in geo shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2000
    400: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumGrubPrice:
    # The minimum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumGrubPrice:
    # The maximum grub price in the range of prices that an item should cost from Grubfather.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 46
    23: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumEssencePrice:
    # The minimum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEssencePrice:
    # The maximum essence price in the range of prices that an item should cost from Seer.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2800
    1400: 50
    random: 0
    random-low: 0
    random-high: 0

  MinimumCharmPrice:
    # The minimum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumCharmPrice:
    # The maximum charm price in the range of prices that an item should cost for Salubra's shop item which also
    # carry a charm cost.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 40
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  RandomCharmCosts:
    # Total Notch Cost of all Charms together. Vanilla sums to 90.
    # This value is distributed among all charms in a random fashion.
    # Special Cases:
    # Set to -1 or vanilla for vanilla costs.
    # Set to -2 or shuffle to shuffle around the vanilla costs to different charms.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 240
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1
    shuffle: 0 # equivalent to -2

  PlandoCharmCosts:
    # Allows setting a Charm's Notch costs directly, mapping {name: cost}.
    # This is set after any random Charm Notch costs, if applicable.
    {}

  MinimumEggPrice:
    # The minimum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  MaximumEggPrice:
    # The maximum rancid egg price in the range of prices that an item should cost from Jiji.
    # Only takes effect if the EggSlotShops option is greater than 0.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 21
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  EggShopSlots:
    # For each slot, add a location to the Egg Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyShopSlots:
    # For each extra slot, add a location to the Sly Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  SlyKeyShopSlots:
    # For each extra slot, add a location to the Sly Shop (requiring Shopkeeper's Key) and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  IseldaShopSlots:
    # For each extra slot, add a location to the Iselda Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraShopSlots:
    # For each extra slot, add a location to the Salubra Shop, and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  SalubraCharmShopSlots:
    # For each extra slot, add a location to the Salubra Shop (requiring Charms), and a filler item to the item
    # pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  LegEaterShopSlots:
    # For each extra slot, add a location to the Leg Eater Shop and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  GrubfatherRewardSlots:
    # For each extra slot, add a location to the Grubfather and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  SeerRewardSlots:
    # For each extra slot, add a location to the Seer and a filler item to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  ExtraShopSlots:
    # For each extra slot, add a location to a randomly chosen shop a filler item to the item pool.
    #
    # The Egg Shop will be excluded from this list unless it has at least one item.
    #
    # Shops are capped at 16 items each.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 144
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SplitCrystalHeart:
    # Splits the Crystal Heart into left- and right-only versions of the item.
    false: 50
    true: 0

  SplitMothwingCloak:
    # Splits the Mothwing Cloak into left- and right-only versions of the item. Randomly adds a second left or
    # right Mothwing cloak item which functions as the upgrade to Shade Cloak.
    false: 50
    true: 0

  SplitMantisClaw:
    # Splits the Mantis Claw into left- and right-only versions of the item.
    false: 50
    true: 0

  CostSanity:
    # If enabled, most locations with costs (like stag stations) will have randomly determined costs.
    # If set to shopsonly, CostSanity will only apply to shops (including Grubfather, Seer and Egg Shop).
    # If set to notshops, CostSanity will only apply to non-shops (e.g. Stag stations and Cornifer locations)
    #
    # These costs can be in Geo (except Grubfather, Seer and Eggshop), Grubs, Charms, Essence and/or Rancid Eggs
    off: 50
    on: 0
    shopsonly: 0
    notshops: 0

  CostSanityHybridChance:
    # The chance that a CostSanity cost will include two components instead of one, e.g. Grubs + Essence
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEggWeight:
    # The likelihood of Costsanity choosing a Egg cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGrubWeight:
    # The likelihood of Costsanity choosing a Grub cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityEssenceWeight:
    # The likelihood of Costsanity choosing a Essence cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityCharmWeight:
    # The likelihood of Costsanity choosing a Charm cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  CostSanityGeoWeight:
    # The likelihood of Costsanity choosing a Geo cost. Chosen as a sum of all weights from other types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    8: 50
    random: 0
    random-low: 0
    random-high: 0

Hylics 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  party_shuffle:
    # Shuffles party members into the pool.
    # Note that enabling this can potentially increase both the difficulty and length of a run.
    false: 50
    true: 0

  gesture_shuffle:
    # Choose where gestures will appear in the item pool.
    anywhere: 50
    tvs_only: 0
    default_locations: 0

  medallion_shuffle:
    # Shuffles red medallions into the pool.
    false: 50
    true: 0

  random_start:
    # Start the randomizer in 1 of 4 positions.
    # (Waynehouse, Viewax's Edifice, TV Island, Shield Facility)
    false: 50
    true: 0

  extra_items_in_logic:
    # Include some extra items in logic (CHARGE UP, 1x PAPER CUP) to prevent the game from becoming too difficult.
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. The reverse is also true.
    # Note that this also includes death by using the PERISH gesture.
    # Can be toggled via in-game console command "/deathlink".
    false: 0
    true: 1

Kingdom Hearts 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  LevelDepth:
    # Determines How many locations you want on levels
    #
    # Level 50: 23 checks spread through 50 levels.
    # Level 99: 23 checks spread through 99 levels.
    #
    # Level 50 sanity: 49 checks spread through 50 levels.
    # Level 99 sanity: 98 checks spread through 99 levels.
    #
    # Level 1: no checks on levels(checks are replaced with stats)
    level_50: 50
    level_99: 0
    level_50_sanity: 0
    level_99_sanity: 0
    level_1: 0

  Sora_Level_EXP:
    # Sora Level Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  Valor_Form_EXP:
    # Valor Form Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Wisdom_Form_EXP:
    # Wisdom Form Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Limit_Form_EXP:
    # Limit Form Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Master_Form_EXP:
    # Master Form Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Final_Form_EXP:
    # Final Form Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Summon_EXP:
    # Summon Exp Multiplier
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  Schmovement:
    # Level of Progressive Movement Abilities You Start With
    level_0: 0
    level_1: 50
    level_2: 0
    level_3: 0
    level_4: 0

  RandomGrowth:
    # Amount of Random Progressive Movement Abilities You Start With
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  AntiForm:
    # Add Anti Form to the pool
    false: 50
    true: 0

  Promise_Charm:
    # Add Promise Charm to the pool
    false: 50
    true: 0

  Goal:
    # Win Condition
    # Three Proofs: Find the 3 Proofs to unlock the final door.
    #
    # Lucky Emblem Hunt: Find required amount of Lucky Emblems.
    #
    # Hitlist (Bounty Hunt): Find required amount of Bounties.
    #
    # Lucky Emblem and Hitlist: Find the required amount of Lucky Emblems and Bounties.
    three_proofs: 0
    lucky_emblem_hunt: 50
    hitlist: 0
    hitlist_and_lucky_emblem: 0

  FinalXemnas:
    # Kill Final Xemnas to Beat the Game.
    #
    # This is in addition to your Goal.
    #
    # I.E. get three proofs+kill final Xemnas
    false: 0
    true: 50

  LuckyEmblemsAmount:
    # Number of Lucky Emblems that are in the pool.
    #
    # If Goal is not Lucky Emblem Hunt or Lucky Emblem and Hitlist this does nothing.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 60
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  LuckyEmblemsRequired:
    # Number of Lucky Emblems to collect to Win/Unlock Final Xemnas' Door.
    #
    # If Goal is not Lucky Emblem Hunt or Lucky Emblem and Hitlist this does nothing.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 60
    35: 50
    random: 0
    random-low: 0
    random-high: 0

  BountyAmount:
    # Number of Bounties that are in the pool.
    #
    # If Goal is not Hitlist or Lucky Emblem and Hitlist this does nothing.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 26
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  BountyRequired:
    # Number of Bounties to collect to Win/Unlock Final Xemnas Door.
    #
    # If Goal is not Hitlist or Lucky Emblem and Hitlist this does nothing.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 26
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  BountyStartingHintToggle:
    # Start with Bounties Hinted
    false: 50
    true: 0

  Keyblade_Minimum:
    # Minimum Stats for Keyblades
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  Keyblade_Maximum:
    # Maximum Stats for Keyblades
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  WeaponSlotStartHint:
    # Start with Weapon Slots' Hinted
    false: 50
    true: 0

  FightLogic:
    # The level of logic to use when determining what fights in each KH2 world are beatable.
    #
    # Easy: For Players not very comfortable doing things without a lot of tools.
    #
    # Normal: For Players somewhat comfortable doing fights with some of the tools.
    #
    # Hard: For Players comfortable doing fights with almost no tools.
    easy: 0
    normal: 50
    hard: 0

  FinalFormLogic:
    # Determines forcing final form logic
    #
    # No Light and Darkness: Light and Darkness is not in logic.
    # Light And Darkness: Final Forcing with light and darkness is in logic.
    # Just a Form: All that requires final forcing is another form.
    no_light_and_darkness: 0
    light_and_darkness: 50
    just_a_form: 0

  AutoFormLogic:
    # Have Auto Forms levels in logic.
    false: 50
    true: 0

  DonaldGoofyStatsanity:
    # Toggles if on Donald and Goofy's Get Bonus locations can be any item
    false: 0
    true: 50

  FillerItemsLocal:
    # Make all dynamic filler classified items local. Recommended when playing with games with fewer locations than kh2
    false: 0
    true: 50

  Visitlocking:
    # Determines the level of visit locking
    #
    # No Visit Locking: Start with all 25 visit locking items.
    #

    # Second Visit Locking: Start with 13 visit locking items for every first visit.
    #

    # First and Second Visit Locking: One item for First Visit Two For Second Visit
    no_visit_locking: 0
    second_visit_locking: 0
    first_and_second_visit_locking: 50

  RandomVisitLockingItem:
    # Start with random amount of visit locking items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  SuperBosses:
    # Terra Sephiroth and Data Fights Toggle.
    false: 0
    true: 50

  Cups:
    # Olympus Cups Toggles
    #     No Cups: All Cups are placed into Excluded Locations.
    #     Cups: Hades Paradox Cup is placed into Excluded Locations
    #     Cups and Hades Paradox: Has Every Cup On.
    no_cups: 50
    cups: 0
    cups_and_hades_paradox: 0

  SummonLevelLocationToggle:
    # Toggle Summon levels to have locations.
    false: 50
    true: 0

  AtlanticaToggle:
    # Atlantica Toggle
    false: 50
    true: 0

  CorSkipToggle:
    # Toggle for Cor skip.
    #
    # Tools depend on which difficulty was chosen on Fight Difficulty.
    #
    # Toggle does not negate fight logic but is an alternative.
    #
    # Full Cor Skip is also affected by this Toggle.
    false: 50
    true: 0

  CustomItemPoolQuantity:
    # Add more of an item into the itempool. Note: You cannot take out items from the pool.
    Aerial Dodge: 4
    Anti Form: 1
    Battlefields of War: 2
    Beast's Claw: 2
    Blizzard Element: 3
    Bone Fist: 2
    Chicken Little: 1
    Cure Element: 3
    Disney Castle Key: 2
    Dodge Roll: 4
    Final Form: 1
    Fire Element: 3
    Genie: 1
    Glide: 4
    High Jump: 4
    Ice Cream: 3
    Identity Disk: 2
    Limit Form: 1
    Magnet Element: 3
    Master Form: 1
    Membership Card: 2
    Namine Sketches: 1
    Peter Pan: 1
    Promise Charm: 1
    Proof of Connection: 1
    Proof of Nonexistence: 1
    Proof of Peace: 1
    Proud Fang: 2
    Quick Run: 4
    Reflect Element: 3
    Scimitar: 2
    Skill and Crossbones: 2
    Stitch: 1
    Sword of the Ancestor: 2
    Thunder Element: 3
    Torn Page: 5
    Valor Form: 1
    Way to the Dawn: 2
    Wisdom Form: 1

Kirby's Dream Land 3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  game_language:
    # The language that the game should display. This does not have to match the given rom.
    japanese: 0
    english: 50

  goal:
    # Zero: collect the Heart Stars, and defeat Zero in the Hyper Zone.
    # Boss Butch: collect the Heart Stars, and then complete the boss rematches in the Boss Butch mode.
    # MG5: collect the Heart Stars, and then complete a perfect run through the minigame gauntlet within the Super MG5
    # Jumping: collect the Heart Stars, and then reach a designated score within the Jumping sub-game
    zero: 1
    boss_butch: 1
    mg5: 1
    jumping: 1

  goal_speed:
    # Normal: the goal is unlocked after purifying the five bosses
    # Fast: the goal is unlocked after acquiring the target number of Heart Stars
    normal: 50
    fast: 0

  total_heart_stars:
    # Maximum number of heart stars to include in the pool of items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 50
    30: 0
    random: 1
    random-low: 0
    random-high: 0

  heart_stars_required:
    # Percentage of heart stars required to purify the five bosses and reach Zero.
    # Each boss will require a differing amount of heart stars to purify.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  filler_percentage:
    # Percentage of non-required Heart Stars to be converted to filler items (1-Ups, Maxim Tomatoes, Invincibility Candy).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 0
    random: 1
    random-low: 0
    random-high: 0

  trap_percentage:
    # Percentage of filler items to be converted to trap items (Gooey Bags, Slowness, Eject Ability).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  gooey_trap_weight:
    # Chance that any given trap is a Gooey Bag (spawns Gooey when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  slow_trap_weight:
    # Chance that any given trap is Slowness (halves your max speed for 15 seconds when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  ability_trap_weight:
    # Chance that any given trap is an Eject Ability (ejects your ability when you receive it).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  jumping_target:
    # The required score needed to complete the Jumping minigame.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 25
    10: 0
    random: 1
    random-low: 0
    random-high: 0

  stage_shuffle:
    # None: No stage shuffling.
    # Same World: shuffles stages around their world.
    # Pattern: shuffles stages according to the stage pattern (stage 3 will always be a minigame stage, etc.)
    # Shuffled: shuffles stages across all worlds.
    none: 50
    same_world: 0
    pattern: 0
    shuffled: 0

  boss_shuffle:
    # None: Bosses will remain in their vanilla locations
    # Shuffled: Bosses will be shuffled amongst each other
    # Full: Bosses will be randomized
    # Singularity: All (non-Zero) bosses will be replaced with a single boss
    # Supports plando placement.
    none: 50
    shuffled: 0
    full: 0
    singularity: 0

  allow_bb:
    # Allow Boss Butch variants of bosses in Boss Shuffle.
    # Enabled: any boss placed will have a 50% chance of being the Boss Butch variant, including bosses not present
    # Enforced: all bosses will be their Boss Butch variant.
    # Boss Butch boss changes are only visual.
    disabled: 50
    enabled: 0
    enforced: 0

  animal_randomization:
    # Disabled: all animal positions will be vanilla.
    # Shuffled: all animal positions will be shuffled amongst each other.
    # Full: random animals will be placed across the levels. At least one of each animal is guaranteed.
    disabled: 50
    shuffled: 0
    full: 0

  copy_ability_randomization:
    # Disabled: enemies give regular copy abilities and health.
    # Enabled: all enemies will have the copy ability received from them randomized.
    # Enabled Plus Minus: enemies (except minibosses) can additionally give you anywhere from +2 health to -1 health when eaten.
    disabled: 50
    enabled: 0
    enabled_plus_minus: 0

  strict_bosses:
    # If enabled, one will not be able to move onto the next world until the previous world's boss has been purified.
    false: 0
    true: 50

  open_world:
    # If enabled, all 6 stages will be unlocked upon entering a world for the first time. A certain amount of stages
    # will need to be completed in order to unlock the bosses
    false: 0
    true: 50

  ow_boss_requirement:
    # The amount of stages completed needed to unlock the boss of a world when Open World is turned on.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  boss_requirement_random:
    # If enabled, boss purification will require a random amount of Heart Stars. Depending on options, this may have
    # boss purification unlock in a random order.
    false: 50
    true: 0

  consumables:
    # When enabled, adds all 1-Ups and Maxim Tomatoes as possible locations.
    false: 50
    true: 0

  starsanity:
    # When enabled, every star in a given stage will become a check.
    # Will increase the possible filler pool to include 1/3/5 stars.
    false: 50
    true: 0

  gifting:
    # When enabled, the goal game item will be sent to other compatible games as a gift,
    # and you can receive gifts from other players. This can be enabled during gameplay
    # using the client.
    false: 50
    true: 0

  kirby_flavor_preset:
    # The color of Kirby, from a list of presets.
    default: 1
    bubblegum: 1
    cherry: 1
    blueberry: 1
    lemon: 1
    kiwi: 1
    grape: 1
    chocolate: 1
    marshmallow: 1
    licorice: 1
    watermelon: 1
    orange: 1
    lime: 1
    lavender: 1
    custom: 0

  kirby_flavor:
    # A custom color for Kirby. To use a custom color, set the preset to Custom and then define a dict of keys from "1" to
    # "15", with their values being an HTML hex color.
    "1": B01810
    "10": E85048
    "11": D0C0C0
    "12": B08888
    "13": E87880
    "14": F8F8F8
    "15": B03830
    "2": F0E0E8
    "3": C8A0A8
    "4": A87070
    "5": E02018
    "6": F0A0B8
    "7": D07880
    "8": A85048
    "9": E8D0D0

  gooey_flavor_preset:
    # The color of Gooey, from a list of presets.
    default: 1
    bubblegum: 1
    cherry: 1
    blueberry: 1
    lemon: 1
    kiwi: 1
    grape: 1
    chocolate: 1
    marshmallow: 1
    licorice: 1
    watermelon: 1
    orange: 1
    lime: 1
    lavender: 1
    custom: 0

  gooey_flavor:
    # A custom color for Gooey. To use a custom color, set the preset to Custom and then define a dict of keys from "1" to
    # "15", with their values being an HTML hex color.
    "1": 000808
    "2": "102838"
    "3": "183048"
    "4": "183878"
    "5": 1838A0
    "6": B01810
    "7": E85048
    "8": D0C0C0
    "9": F8F8F8

  music_shuffle:
    # None: default music will play
    # Shuffled: music will be shuffled amongst each other
    # Full: random music will play in each room
    # Note that certain songs will not be chosen in shuffled or full
    none: 50
    shuffled: 0
    full: 0

  virtual_console:
    # Adds the ability to enable 2 of the Virtual Console changes.
    # Flash Reduction: reduces the flashing during the Zero battle.
    # Color Changes: changes the color of the background within the Zero Boss Butch rematch.
    none: 0
    flash_reduction: 50
    color_changes: 0
    both: 0

Landstalker - The Treasures of King Nole:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # The goal to accomplish in order to complete the seed.
    # - Beat Gola: beat the usual final boss (same as vanilla)
    # - Reach Kazalt: find the jewels and take the teleporter to Kazalt
    # - Beat Dark Nole: the door to King Nole's fight brings you into a final dungeon with an absurdly hard boss you have
    #     to beat to win the game
    beat_gola: 50
    reach_kazalt: 0
    beat_dark_nole: 0

  spawn_region:
    # List of spawn locations that can be picked by the randomizer.
    # It is advised to keep Massan as your spawn location for your first few seeds.
    # Picking a late-game location can make the seed significantly harder, both for logic and combat.
    massan: 50
    gumi: 0
    kado: 0
    waterfall: 0
    ryuma: 0
    mercator: 0
    verla: 0
    greenmaze: 0
    destel: 0

  jewel_count:
    # Determines the number of jewels to find to be able to reach Kazalt.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 9
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  progressive_armors:
    # When obtaining an armor, you get the next armor tier instead of getting the specific armor tier that was
    # placed here by randomization. Enabling this provides a smoother progression.
    false: 0
    true: 50

  use_record_book:
    # Gives a Record Book item in starting inventory, allowing to save the game anywhere.
    # This makes the game significantly less frustrating and enables interesting save-scumming strategies in some places.
    false: 0
    true: 50

  use_spell_book:
    # Gives a Spell Book item in starting inventory, allowing to warp back to the starting location at any time.
    # This prevents any kind of softlock and makes the world easier to explore.
    false: 0
    true: 50

  shop_prices_factor:
    # Applies a percentage factor on all prices in shops. Having higher prices can lead to a bit of gold farming, which
    # can make seeds longer but also sometimes more frustrating.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 200
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  combat_difficulty:
    # Determines the overall combat difficulty in the game by modifying both monsters HP & damage.
    # - Peaceful: 50% HP & damage
    # - Easy: 75% HP & damage
    # - Normal: 100% HP & damage
    # - Hard: 140% HP & damage
    # - Insane: 200% HP & damage
    peaceful: 0
    easy: 0
    normal: 50
    hard: 0
    insane: 0

  teleport_tree_requirements:
    # Determines the requirements to be able to use a teleport tree pair.
    # - None: All teleport trees are available right from the start
    # - Clear Tibor: Tibor needs to be cleared before unlocking any tree
    # - Visit Trees: Both trees from a tree pair need to be visited to teleport between them
    # Vanilla behavior is "Clear Tibor And Visit Trees"
    none: 0
    clear_tibor: 0
    visit_trees: 0
    clear_tibor_and_visit_trees: 50

  shuffle_trees:
    # If enabled, all teleportation trees will be shuffled into new pairs.
    false: 50
    true: 0

  ensure_ekeeke_in_shops:
    # Ensures an EkeEke will always be for sale in one shop per region in the game.
    # Disabling this can lead to frustrating situations where you cannot refill your health items and might get locked.
    false: 0
    true: 50

  remove_gumi_boulder:
    # Removes the boulder between Gumi and Ryuma, which is usually a one-way path.
    # This makes the vanilla early game (Massan, Gumi...) more easily accessible when starting outside it.
    false: 50
    true: 0

  allow_whistle_usage_behind_trees:
    # In Greenmaze, Einstein Whistle can only be used to call Cutter from the intended side by default.
    # Enabling this allows using Einstein Whistle from both sides of the magic trees.
    # This is only useful in seeds starting in the "waterfall" spawn region or where teleportation trees are made open from the start.
    false: 0
    true: 50

  handle_damage_boosting_in_logic:
    # Adds damage boosting as a logical rule, removing any requirements involving Iron Boots or Fireproof Boots.
    # Who doesn't like walking on spikes and lava?
    false: 50
    true: 0

  handle_enemy_jumping_in_logic:
    # Adds jumping on enemies' heads as a logical rule.
    # This gives access to Mountainous Area from Lake Shrine sector and to the cliff chest behind a magic tree near Mir Tower.
    # These tricks not being easy, you should leave this disabled until practiced.
    false: 50
    true: 0

  handle_tree_cutting_glitch_in_logic:
    # Adds tree-cutting glitch as a logical rule, enabling access to both chests behind magic trees in Mir Tower Sector
    # without having Axe Magic.
    false: 50
    true: 0

  hint_count:
    # Determines the number of Foxy NPCs that will be scattered across the world, giving various types of hints
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 25
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  revive_using_ekeeke:
    # In the vanilla game, when you die, you are automatically revived by Friday using an EkeEke.
    # This setting allows disabling this feature, making the game extremely harder.
    # USE WITH CAUTION!
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Links Awakening DX:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  logic:
    # Affects where items are allowed to be placed.
    # [Normal] Playable without using any tricks or glitches. Can require knowledge from a vanilla playthrough, such as how to open Color Dungeon.
    # [Hard] More advanced techniques may be required, but glitches are not. Examples include tricky jumps, killing enemies with only pots.
    # [Glitched] Advanced glitches and techniques may be required, but extremely difficult or tedious tricks are not required. Examples include Bomb Triggers, Super Jumps and Jesus Jumps.
    # [Hell] Obscure knowledge and hard techniques may be required. Examples include featherless jumping with boots and/or hookshot, sequential pit buffers and unclipped superjumps. Things in here can be extremely hard to do or very time consuming.
    normal: 50
    hard: 0
    glitched: 0
    hell: 0

  tradequest:
    # [On] adds the trade items to the pool (the trade locations will always be local items)
    # [Off] (default) doesn't add them
    false: 0
    true: 1

  rooster:
    # [On] Adds the rooster to the item pool.
    # [Off] The rooster spot is still a check giving an item. But you will never find the rooster. Any rooster spot is accessible without rooster by other means.
    false: 0
    true: 50

  experimental_dungeon_shuffle:
    # [WARNING] Experimental, may fail to fill
    # Randomizes dungeon entrances within eachother
    false: 50
    true: 0

  experimental_entrance_shuffle:
    # [WARNING] Experimental, may fail to fill
    # Randomizes where overworld entrances lead to.
    # [Simple] Single-entrance caves/houses that have items are shuffled amongst each other.
    # If random start location and/or dungeon shuffle is enabled, then these will be shuffled with all the non-connector entrance pool.
    # Note, some entrances can lead into water, use the warp-to-home from the save&quit menu to escape this.
    none: 50
    simple: 0

  goal:
    # The Goal of the game
    # [Instruments] The Wind Fish's Egg will only open if you have the required number of Instruments of the Sirens, and play the Ballad of the Wind Fish.
    # [Seashells] The Egg will open when you bring 20 seashells. The Ballad and Ocarina are not needed.
    # [Open] The Egg will start pre-opened.
    instruments: 1
    seashells: 1
    open: 1

  instrument_count:
    # Sets the number of instruments required to open the Egg
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 0
    random: 1
    random-low: 0
    random-high: 0

  link_palette:
    # Sets link's palette
    # A-D are color palettes usually used during the damage animation and can change based on where you are.
    normal: 0
    green: 1
    yellow: 1
    red: 1
    blue: 1
    invert_a: 1
    invert_b: 1
    invert_c: 1
    invert_d: 1

  warp_improvements:
    # [On] Adds remake style warp screen to the game. Choose your warp destination on the map after jumping in a portal and press B to select.
    # [Off] No change
    false: 0
    true: 1

  additional_warp_points:
    # [On] (requires warp improvements) Adds a warp point at Crazy Tracy's house (the Mambo teleport spot) and Eagle's Tower
    # [Off] No change
    false: 50
    true: 0

  trendy_game:
    # [Easy] All of the items hold still for you
    # [Normal] The vanilla behavior
    # [Hard] The trade item also moves
    # [Harder] The items move faster
    # [Hardest] The items move diagonally
    # [Impossible] The items move impossibly fast, may scroll on and off the screen
    easy: 0
    normal: 50
    hard: 0
    harder: 0
    hardest: 0
    impossible: 0

  gfxmod:
    # Sets the sprite for link, among other things
    # The option should be the same name as a with sprite (and optional name) file in data/sprites/ladx
    Link: 50

  palette:
    # Sets the palette for the game.
    # Note: A few places aren't patched, such as the menu and a few color dungeon tiles.
    # [Normal] The vanilla palette
    # [1-Bit] One bit of color per channel
    # [2-Bit] Two bits of color per channel
    # [Greyscale] Shades of grey
    # [Pink] Aesthetic
    # [Inverted] Inverted
    normal: 50
    1bit: 0
    2bit: 0
    greyscale: 0
    pink: 0
    inverted: 0

  text_shuffle:
    # [On] Shuffles all the text in the game
    # [Off] (default) doesn't shuffle them.
    false: 50
    true: 0

  shuffle_nightmare_keys:
    # Shuffle Nightmare Keys
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    original_dungeon: 1
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0

  shuffle_small_keys:
    # Shuffle Small Keys
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    original_dungeon: 1
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0

  shuffle_maps:
    # Shuffle Dungeon Maps
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    original_dungeon: 1
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0

  shuffle_compasses:
    # Shuffle Dungeon Compasses
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    original_dungeon: 1
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0

  shuffle_stone_beaks:
    # Shuffle Owl Beaks
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    original_dungeon: 1
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0

  music:
    # [Vanilla] Regular Music
    # [Shuffled] Shuffled Music
    # [Off] No music
    vanilla: 0
    shuffled: 1
    off: 0

  shuffle_instruments:
    # Shuffle Instruments
    # [Original Dungeon] The item will be within its original dungeon
    # [Own Dungeons] The item will be within a dungeon in your world
    # [Own World] The item will be somewhere in your world
    # [Any World] The item could be anywhere
    # [Different World] The item will be somewhere in another world
    # [Vanilla] The item will be in its vanilla location in your world
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0
    vanilla: 0

  music_change_condition:
    # Controls how the music changes.
    # [Sword] When you pick up a sword, the music changes
    # [Always] You always have the post-sword music
    sword: 0
    always: 50

  nag_messages:
    # Controls if nag messages are shown when rocks and crystals are touched. Useful for glitches, annoying for everyone else.
    false: 50
    true: 0

  ap_title_screen:
    # Enables AP specific title screen and disables the intro cutscene
    false: 0
    true: 50

  boots_controls:
    # Adds additional button to activate Pegasus Boots (does nothing if you haven't picked up your boots!)
    # [Vanilla] Nothing changes, you have to equip the boots to use them
    # [Bracelet] Holding down the button for the bracelet also activates boots (somewhat like Link to the Past)
    # [Press A] Holding down A activates boots
    # [Press B] Holding down B activates boots
    vanilla: 0
    bracelet: 0
    press_a: 1
    press_b: 0

Lufia II Ancient Cave:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  blue_chest_chance:
    # The chance of a chest being a blue chest.
    #
    # It is given in units of 1/256, i.e., a value of 25 corresponds to 25/256 ~ 9.77%.
    # If you increase the blue chest chance, then the red chest chance is decreased in return.
    # Supported values: 5 – 75
    # Default value: 25 (five times as much as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 75
    25: 0
    random: 0
    random-low: 0
    random-high: 1

  blue_chest_count:
    # The number of blue chest items that will be in your item pool.
    #
    # The number of blue chests in your world that count as multiworld location checks will be equal this amount plus one
    # more for each party member or capsule monster if you have shuffle_party_members/shuffle_capsule_monsters enabled.
    # (You will still encounter blue chests in your world after all the multiworld location checks have been exhausted,
    # but these chests will then generate items for yourself only.)
    # Supported values: 10 – 100
    # Default value: 25
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 100
    25: 0
    random: 1
    random-low: 0
    random-high: 0

  boss:
    # Which boss to fight on the final floor.
    #
    # Supported values:
    # lizard_man, big_catfish, regal_goblin, follower_x2, camu, tarantula, pierre, daniele, gades_a, mummy_x4, troll_x3,
    # gades_b, idura_a, lion_x2, idura_b, idura_c, rogue_flower, soldier_x4, gargoyle_x4, venge_ghost, white_dragon_x3,
    # fire_dragon, ghost_ship, tank, gades_c, amon, erim, daos, egg_dragon, master
    # random-low — select a random regular boss, from lizard_man to troll_x3
    # random-middle — select a random regular boss, from idura_a to gargoyle_x4
    # random-high — select a random regular boss, from venge_ghost to tank
    # random-sinistral — select a random Sinistral boss
    # Default value: master (same as in an unmodified game)
    lizard_man: 0
    big_catfish: 0
    regal_goblin: 0
    follower_x2: 0
    camu: 0
    tarantula: 0
    pierre: 0
    daniele: 0
    gades_a: 0
    mummy_x4: 0
    troll_x3: 0
    gades_b: 0
    idura_a: 0
    lion_x2: 0
    idura_b: 0
    idura_c: 0
    rogue_flower: 0
    soldier_x4: 0
    gargoyle_x4: 0
    venge_ghost: 0
    white_dragon_x3: 0
    fire_dragon: 0
    ghost_ship: 0
    tank: 0
    gades_c: 0
    amon: 0
    erim: 0
    daos: 0
    egg_dragon: 0
    master: 0
    random-high: 0
    random-low: 0
    random-sinistral: 0
    random-middle: 0
    random: 1

  capsule_cravings_jp_style:
    # Make capsule monster cravings behave as in the Japanese version.
    #
    # In the US version, the data that determines which items a capsule monster can request is a mess.
    # It allows only for a very limited selection of items to be requested, and the quality of the selected item is almost
    # always either too low or too high (compared to the capsule monsters current quality preference). This means that,
    # if fed, the requested item will either be rejected by the capsule monster or lead to an unreasonable increase of the
    # quality preference, making further feeding more difficult.
    # This setting provides a fix for the bug described above.
    # If enabled, the capsule monster feeding behavior will be changed to behave analogous to the JP (and EU) version.
    # This means that requests become more varied, while the requested item will be guaranteed to be of the same quality
    # as the capsule monsters current preference. Thus, it can no longer happen that the capsule monster dislikes eating
    # the very item it just requested.
    # Supported values: false, true
    # Default value: false (same as in an unmodified game)
    false: 50
    true: 0

  capsule_starting_form:
    # The starting form of your capsule monsters.
    #
    # Supported values: 1 – 4, m
    # Default value: 1 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    random: 1
    random-low: 0
    random-high: 0
    default: 0 # equivalent to 1
    m: 0 # equivalent to 5

  capsule_starting_level:
    # The starting level of your capsule monsters.
    #
    # Can be set to the special value party_starting_level to make it the same value as the party_starting_level option.
    # Supported values: 1 – 99, party_starting_level
    # Default value: 1 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    default: 0 # equivalent to 1
    party_starting_level: 1 # equivalent to 0

  crowded_floor_chance:
    # The chance of a floor being a crowded floor.
    #
    # It is given in units of 1/256, i.e., a value of 16 corresponds to 16/256 = 6.25%.
    # A crowded floor is a floor where most of the chests are grouped in one room together with many enemies.
    # Supported values: 0 – 255
    # Default value: 16 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 255
    16: 0
    random: 1
    random-low: 0
    random-high: 0

  custom_item_pool:
    # Customize your multiworld item pool.
    #
    # Using this option you can place any cave item in your multiworld item pool. (By default, the pool is filled with
    # blue chest items.) Here you can add any valid item from the Lufia II Ancient Cave section of the datapackage
    # (see https://archipelago.gg/datapackage). The value of this option has to be a mapping of item name to count,
    # e.g., to add two Deadly rods and one Dekar Blade: {Deadly rod: 2, Dekar blade: 1}
    # The maximum total amount of custom items you can place is limited by the chosen blue_chest_count; any remaining,
    # non-customized space in the pool will be occupied by random blue chest items.
    {}

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  default_capsule:
    # Preselect the active capsule monster.
    #
    # (Only has an effect if shuffle_capsule_monsters is set to false.)
    # Supported values: jelze, flash, gusto, zeppy, darbi, sully, blaze
    # Default value: jelze
    jelze: 1
    flash: 1
    gusto: 1
    zeppy: 1
    darbi: 1
    sully: 1
    blaze: 1

  default_party:
    # Preselect the party lineup.
    #
    # (Only has an effect if shuffle_party_members is set to false.)
    # Supported values:
    # Can be set to any valid combination of up to 4 party member initials, e.g.:
    # M — Maxim
    # DGMA — Dekar, Guy, Maxim, and Arty
    # MSTL — Maxim, Selan, Tia, and Lexis
    # random-2p — a random 2-person party
    # random-3p — a random 3-person party
    # random-4p — a random 4-person party
    # Default value: M
    random-2p: 0
    random-3p: 0
    random-4p: 0
    m: 50
    ma: 0
    md: 0
    mg: 0
    ml: 0
    ms: 0
    mt: 0
    mad: 0
    mag: 0
    mal: 0
    mas: 0
    mat: 0
    mdg: 0
    mdl: 0
    mds: 0
    mdt: 0
    mgl: 0
    mgs: 0
    mgt: 0
    mls: 0
    mlt: 0
    mst: 0
    madg: 0
    madl: 0
    mads: 0
    madt: 0
    magl: 0
    mags: 0
    magt: 0
    mals: 0
    malt: 0
    mast: 0
    mdgl: 0
    mdgs: 0
    mdgt: 0
    mdls: 0
    mdlt: 0
    mdst: 0
    mgls: 0
    mglt: 0
    mgst: 0
    mlst: 0

  enemy_floor_numbers:
    # Change which enemy types are encountered at which floor numbers.
    #
    # Supported values:
    # vanilla
    #     Ninja, e.g., is allowed to appear on the 3 floors B44-B46
    # shuffle — The existing enemy types are redistributed among nearby floors. Shifts by up to 6 floors are possible.
    #     Ninja, e.g., will be allowed to appear on exactly 3 consecutive floors somewhere from B38-B40 to B50-B52
    # randomize — For each floor, new enemy types are chosen randomly from the set usually possible on floors [-6, +6].
    #     Ninja, e.g., is among the various possible selections for any enemy slot affecting the floors from B38 to B52
    # Default value: vanilla (same as in an unmodified game)
    vanilla: 0
    shuffle: 0
    randomize: 1

  enemy_movement_patterns:
    # Change the movement patterns of enemies.
    #
    # Supported values:
    # vanilla
    # shuffle_by_pattern — The existing movement patterns are redistributed among each other.
    #     Sprites that usually share a movement pattern will still share movement patterns after shuffling
    # randomize_by_pattern — For each movement pattern, a new one is chosen randomly from the set of existing patterns.
    #     Sprites that usually share a movement pattern will still share movement patterns after randomizing
    # shuffle_by_sprite — The existing movement patterns of sprites are redistributed among the enemy sprites.
    #     Sprites that usually share a movement pattern can end up with different movement patterns after shuffling
    # randomize_by_sprite — For each sprite, a new movement is chosen randomly from the set of existing patterns.
    #     Sprites that usually share a movement pattern can end up with different movement patterns after randomizing
    # singularity — All enemy sprites use the same, randomly selected movement pattern
    # Alternatively, you can directly specify an enemy name such as "Red Jelly" as the value of this option.
    #     In that case, the movement pattern usually associated with this sprite will be used by all enemy sprites
    # Default value: vanilla (same as in an unmodified game)
    vanilla: 50
    shuffle_by_pattern: 0
    randomize_by_pattern: 0
    shuffle_by_sprite: 0
    randomize_by_sprite: 0
    singularity: 0

  enemy_sprites:
    # Change the appearance of enemies.
    #
    # Supported values:
    # vanilla
    # shuffle — The existing sprites are redistributed among the enemy types.
    #     This means that, after shuffling, exactly 1 enemy type will be dressing up as the "Red Jelly" sprite
    # randomize — For each enemy type, a new sprite is chosen randomly from the set of existing sprites.
    #     This means that, after randomizing, any number of enemy types could end up using the "Red Jelly" sprite
    # singularity — All enemies use the same, randomly selected sprite
    # Alternatively, you can directly specify an enemy name such as "Red Jelly" as the value of this option.
    #     In this case, the sprite usually associated with that enemy will be used by all enemies
    # Default value: vanilla (same as in an unmodified game)
    vanilla: 50
    shuffle: 0
    randomize: 0
    singularity: 0

  exp_modifier:
    # Percentage modifier for EXP gained from enemies.
    #
    # Supported values: 100 – 500
    # Default value: 100 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 100
    # Maximum value is 500
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  final_floor:
    # The final floor, where the boss resides.
    #
    # Supported values: 2 – 99
    # Default value: 99 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 99
    99: 0
    random: 1
    random-low: 0
    random-high: 0

  gear_variety_after_b9:
    # Fixes a bug that prevents various gear from appearing after B9.
    #
    # Due to an overflow bug in the game, the distribution of red chest gear is impaired after B9.
    # Starting with B10, the number of items available from red chests is severely limited, meaning that red chests will
    # no longer contain any shields, headgear, rings, or jewels (and the selection of body armor is reduced as well).
    # This setting provides a fix for the bug described above.
    # If enabled, red chests beyond B9 will continue to produce shields, headgear, rings, and jewels as intended,
    # while the odds of finding body armor in red chests are decreased as a result.
    # The distributions of red chest weapons, spells, and consumables as well as blue chests are unaffected.
    # Supported values: false, true
    # Default value: false (same as in an unmodified game)
    false: 50
    true: 0

  goal:
    # The objective you have to fulfill in order to complete the game.
    #
    # Supported values:
    # boss — defeat the boss on the final floor
    # iris_treasure_hunt — gather the required number of Iris treasures and leave the cave
    # boss_iris_treasure_hunt — complete both the "boss" and the "iris_treasure_hunt" objective (in any order)
    # final_floor — merely reach the final floor
    # Default value: boss
    boss: 1
    iris_treasure_hunt: 1
    boss_iris_treasure_hunt: 0
    final_floor: 1

  gold_modifier:
    # Percentage modifier for gold gained from enemies.
    #
    # Supported values: 25 – 400
    # Default value: 100 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 400
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  healing_floor_chance:
    # The chance of a floor having a healing tile hidden under a bush.
    #
    # It is given in units of 1/256, i.e., a value of 16 corresponds to 16/256 = 6.25%.
    # Supported values: 0 – 255
    # Default value: 16 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 255
    16: 0
    random: 1
    random-low: 0
    random-high: 0

  inactive_exp_gain:
    # The rate at which characters not currently in the active party gain EXP.
    #
    # Supported values: disabled, half, full
    # Default value: disabled (same as in an unmodified game)
    disabled: 0
    half: 0
    full: 1

  initial_floor:
    # The initial floor, where you begin your journey.
    #
    # (If this value isn't smaller than the value of final_floor, it will automatically be set to final_floor - 1)
    # Supported values: 1 – 98
    # Default value: 1 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 98
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  iris_floor_chance:
    # The chance of a floor being able to generate an Iris treasure.
    #
    # It is given in units of 1/256, i.e., a value of 5 corresponds to 5/256 ~ 1.95%.
    # The true chance of a floor holding an Iris treasure you need is usually lower than the chance specified here, e.g.,
    # if you have already found 8 of 9 Iris items then the chance of generating the last one is only 1/9 of this value.
    # Supported values: 5 – 255
    # Default value: 5 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 5
    # Maximum value is 255
    5: 0
    random: 1
    random-low: 0
    random-high: 0

  iris_treasures_required:
    # The number of Iris treasures required to complete the goal.
    #
    # This setting only has an effect if the "iris_treasure_hunt" or "boss_iris_treasure_hunt" goal is active.
    # Supported values: 1 – 9
    # Default value: 9
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    9: 0
    random: 1
    random-low: 0
    random-high: 0

  master_hp:
    # The number of hit points of the Master
    #
    # (Only has an effect if boss is set to master.)
    # Supported values: 1 – 9980
    # Default value: 9980 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9980
    9980: 0
    random: 1
    random-low: 0
    random-high: 0

  party_starting_level:
    # The starting level of your party members.
    #
    # Supported values: 1 – 99
    # Default value: 1 (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  run_speed:
    # Modifies the game to allow you to move faster than normal when pressing the Y button.
    #
    # Supported values: disabled, double, triple, quadruple
    # Default value: disabled (same as in an unmodified game)
    disabled: 0
    double: 0
    triple: 0
    quadruple: 1

  shop_interval:
    # Place shops after a certain number of floors.
    #
    # E.g., if you set this to 5, then you will be given the opportunity to shop after completing B5, B10, B15, etc.,
    # whereas if you set it to 1, then there will be a shop after every single completed floor.
    # Shops will offer a random selection of wares; on deeper floors, more expensive items might appear.
    # You can customize the stock that can appear in shops using the shop_inventory option.
    # You can control how much gold you will be obtaining from enemies using the gold_multiplier option.
    # Supported values: disabled, 1 – 10
    # Default value: disabled (same as in an unmodified game)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    random: 1
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0

  shop_inventory:
    # Determine the item types that can appear in shops.
    #
    # The value of this option should be a mapping of item categories (or individual items) to weights (non-negative
    # integers), which are used as relative probabilities when it comes to including these things in shops. (The actual
    # contents of the generated shops are selected randomly and are subject to additional constraints such as more
    # expensive things being allowed only on later floors.)
    # Supported keys:
    # non_restorative — a selection of mostly non-restorative red chest consumables
    # restorative — all HP- or MP-restoring red chest consumables
    # blue_chest — all blue chest items
    # spell — all red chest spells
    # gear — all red chest armors, shields, headgear, rings, and rocks (this respects the gear_variety_after_b9 option,
    #     meaning that you will not encounter any shields, headgear, rings, or rocks in shops from B10 onward unless you
    #     also enabled that option)
    # weapon — all red chest weapons
    # Additionally, you can also add extra weights for any specific cave item. If you want your shops to have a
    # higher than normal chance of selling a Dekar blade, you can, e.g., add "Dekar blade: 5".
    # You can even forego the predefined categories entirely and design a custom shop pool from scratch by providing
    # separate weights for each item you want to include.
    # (Spells, however, cannot be weighted individually and are only available as part of the "spell" category.)
    # Default value: {spell: 30, gear: 45, weapon: 82}
    gear: 45
    spell: 30
    weapon: 82

  shuffle_capsule_monsters:
    # Shuffle the capsule monsters into the multiworld.
    #
    # Supported values:
    # false — all 7 capsule monsters are available in the menu and can be selected right away
    # true — you start without capsule monster; 7 new "items" are added to your pool and shuffled into the multiworld;
    #     when one of these items is found, the corresponding capsule monster is unlocked for you to use
    # Default value: false (same as in an unmodified game)
    false: 0
    true: 1

  shuffle_party_members:
    # Shuffle the party members into the multiworld.
    #
    # Supported values:
    # false — all 6 optional party members are present in the cafe and can be recruited right away
    # true — only Maxim is available from the start; 6 new "items" are added to your pool and shuffled into the
    #     multiworld; when one of these items is found, the corresponding party member is unlocked for you to use.
    #     While cave diving, you can add or remove unlocked party members by using the character items from the inventory
    # Default value: false (same as in an unmodified game)
    false: 0
    true: 1

MegaMan Battle Network 3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  extra_ranks:
    # How many extra Undernet Ranks to add to the pool in place of filler items.
    # The more ranks there are, the faster the game will go.
    # Depending on your other options, you might not have enough filler items to replace.
    # If generation errors occur, consider reducing this value.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 16
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  include_jobs:
    # Whether Jobs can be included in logic.
    false: 0
    true: 50

  trade_quest_hinting:
    # Whether NPCs offering Chip Trades should show what item they provide.
    # None - NPCs will not provide any information on what item they will give
    # Partial - NPCs will state if an item is progression or not, but not the specific item
    # Full - NPCs will state what item they will give, providing an Archipelago Hint when doing so
    none: 0
    partial: 0
    full: 50

Meritous:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Which goal must be achieved to trigger completion.
    return_the_cursed_seal: 50
    any_ending: 0
    true_ending: 0

  include_psi_keys:
    # Whether PSI Keys should be included in the multiworld pool. If not, they will be in their vanilla locations.
    false: 0
    true: 50

  include_evolution_traps:
    # Whether evolution traps should be included in the multiworld pool.
    #     If not, they will be activated by bosses, as in vanilla.
    false: 50
    true: 0

  item_cache_cost:
    # Determines how the cost for Alpha, Beta, and Gamma caches will scale.
    #     Vanilla has a total cost of about 1B crystals on Normal difficulty;
    #     Reduced has about 750M; and Heavily Reduced has about 600M.
    vanilla: 50
    reduced: 0
    heavily_reduced: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Minecraft:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  advancement_goal:
    # Number of advancements required to spawn bosses.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 114
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  egg_shards_required:
    # Number of dragon egg shards to collect to spawn bosses.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  egg_shards_available:
    # Number of dragon egg shards available to collect.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  required_bosses:
    # Bosses which must be defeated to finish the game.
    none: 0
    ender_dragon: 50
    wither: 0
    both: 0

  shuffle_structures:
    # Enables shuffling of villages, outposts, fortresses, bastions, and end cities.
    false: 0
    true: 50

  structure_compasses:
    # Adds structure compasses to the item pool, which point to the nearest indicated structure.
    false: 0
    true: 50

  combat_difficulty:
    # Modifies the level of items logically required for exploring dangerous areas and fighting bosses.
    easy: 0
    normal: 50
    hard: 0

  include_hard_advancements:
    # Enables certain RNG-reliant or tedious advancements.
    false: 50
    true: 0

  include_unreasonable_advancements:
    # Enables the extremely difficult advancements "How Did We Get Here?" and "Adventuring Time."
    false: 50
    true: 0

  include_postgame_advancements:
    # Enables advancements that require spawning and defeating the required bosses.
    false: 50
    true: 0

  bee_traps:
    # Replaces a percentage of junk items with bee traps, which spawn multiple angered bees around every player when
    # received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  send_defeated_mobs:
    # Send killed mobs to other Minecraft worlds which have this option enabled.
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  starting_items:
    # Start with these items. Each entry should be of this format: {item: "item_name", amount: #, nbt: "nbt_string"}
    []

Muse Dash:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  allow_just_as_planned_dlc_songs:
    # Whether [Muse Plus] DLC Songs, and all the albums included in it, can be chosen as randomised songs.
    # Note: The [Just As Planned] DLC contains all [Muse Plus] songs.
    false: 50
    true: 0

  dlc_packs:
    # Which non-[Muse Plus] DLC packs can be chosen as randomised songs.
    {}

  streamer_mode_enabled:
    # In Muse Dash, an option named 'Streamer Mode' removes songs which may trigger copyright issues when streaming.
    # If this is enabled, only songs available under Streamer Mode will be available for randomization.
    false: 50
    true: 0

  starting_song_count:
    # The number of songs that will be automatically unlocked at the start of a run.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  additional_song_count:
    # The total number of songs that will be placed in the randomization pool.
    # - This does not count any starting songs or the goal song.
    # - The final song count may be lower due to other settings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 528
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  song_difficulty_mode:
    # Ensures that at any chosen song has at least 1 value falling within these values.
    # - Any: All songs are available
    # - Easy: 1, 2 or 3
    # - Medium: 4, 5
    # - Hard: 6, 7
    # - Expert: 8, 9
    # - Master: 10+
    # - Manual: Uses the provided minimum and maximum range.
    any: 50
    easy: 0
    medium: 0
    hard: 0
    expert: 0
    master: 0
    manual: 0

  song_difficulty_min:
    # Ensures that 1 difficulty has at least 1 this value or higher per song.
    # - Difficulty Mode must be set to Manual.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  song_difficulty_max:
    # Ensures that 1 difficulty has at least 1 this value or lower per song.
    # - Difficulty Mode must be set to Manual.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  grade_needed:
    # Completing a song will require a grade of this value or higher in order to unlock items.
    # The grades are as follows:
    # - Silver S (SS): >= 95% accuracy
    # - Pink S (S): >= 90% accuracy
    # - A: >= 80% or a Full Combo
    # - B: >= 70%
    # - C: >= 60%
    any: 50
    c: 0
    b: 0
    a: 0
    pinks: 0
    silvers: 0

  music_sheet_count_percentage:
    # Controls how many music sheets are added to the pool based on the number of songs, including starting songs.
    # Higher numbers leads to more consistent game lengths, but will cause individual music sheets to be less important.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 40
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  music_sheet_win_count_percentage:
    # The percentage of Music Sheets in the item pool that are needed to unlock the winning song.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    80: 50
    random: 0
    random-low: 0
    random-high: 0

  available_trap_types:
    # This controls the types of traps that can be added to the pool.
    # - VFX Traps consist of visual effects that play over the song. (i.e. Grayscale.)
    # - SFX Traps consist of changing your sfx setting to one possibly more annoying sfx.
    # Traps last the length of a song, or until you die.
    # Note: SFX traps are only available if [Just as Planned] DLC songs are enabled.
    none: 0
    vfx: 0
    sfx: 0
    all: 50

  trap_count_percentage:
    # This controls how many traps to add into the pool, based the total number of songs.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  include_songs:
    # Any song listed here will be guaranteed to be included as part of the seed.
    # - Difficulty options will be skipped for these songs.
    # - If there being too many included songs, songs will be randomly chosen without regard for difficulty.
    # - If you want these songs immediately, use start_inventory instead.
    []

  exclude_songs:
    # Any song listed here will be excluded from being a part of the seed.
    []

Noita:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  bad_effects:
    # Whether negative effects on the Noita world are added to the item pool.
    false: 0
    true: 50

  victory_condition:
    # Greed is to get to the bottom, beat the boss, and win the game.
    # Pure is to get 11 orbs, grab the sampo, and bring it to the mountain altar.
    # Peaceful is to get all 33 orbs, grab the sampo, and bring it to the mountain altar.
    # Orbs will be added to the randomizer pool based on which victory condition you chose.
    # The base game orbs will not count towards these victory conditions.
    greed_ending: 50
    pure_ending: 0
    peaceful_ending: 0

  path_option:
    # Choose where you would like Hidden Chest and Pedestal checks to be placed.
    # Main Path includes the main 7 biomes you typically go through to get to the final boss.
    # Side Path includes the Lukki Lair and Fungal Caverns. 9 biomes total.
    # Main World includes the full world (excluding parallel worlds). 15 biomes total.
    # Note: The Collapsed Mines have been combined into the Mines as the biome is tiny.
    main_path: 50
    side_path: 0
    main_world: 0

  hidden_chests:
    # Number of hidden chest checks added to the applicable biomes.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  pedestal_checks:
    # Number of checks that will spawn on pedestals in the applicable biomes.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  orbs_as_checks:
    # Decides whether finding the orbs that naturally spawn in the world count as checks.
    # The Main Path option includes only the Floating Island and Abyss Orb Room orbs.
    # The Side Path option includes the Main Path, Magical Temple, Lukki Lair, and Lava Lake orbs.
    # The Main World option includes all 11 orbs.
    no_orbs: 50
    main_path: 0
    side_path: 0
    main_world: 0

  bosses_as_checks:
    # Makes bosses count as location checks. The boss only needs to die, you do not need the kill credit.
    # The Main Path option includes Gate Guardian, Suomuhauki, and Kolmisilmä.
    # The Side Path option includes the Main Path bosses, Sauvojen Tuntija, and Ylialkemisti.
    # The All Bosses option includes all 15 bosses.
    no_bosses: 50
    main_path: 0
    side_path: 0
    all_bosses: 0

  extra_orbs:
    # Add extra orbs to your item pool, to prevent you from needing to wait as long for the last orb you need for your victory condition.
    # Extra orbs received past your victory condition's amount will be received as hearts instead.
    # Can be turned on for the Greed Ending goal, but will only really make it harder.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  shop_price:
    # Reduce the costs of Archipelago items in shops.
    # By default, the price of Archipelago items matches the price of wands at that shop.
    full_price: 0
    25_percent_off: 1
    50_percent_off: 0
    75_percent_off: 0

Ocarina of Time:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  logic_rules:
    # Set the logic used for the generator.
    # Glitchless: Normal gameplay. Can enable more difficult logical paths using the Logic Tricks option.
    # Glitched: Many powerful glitches expected, such as bomb hovering and clipping.
    # Glitched is incompatible with the following settings:
    # - All forms of entrance randomizer
    # - MQ dungeons
    # - Pot shuffle
    # - Freestanding item shuffle
    # - Crate shuffle
    # - Beehive shuffle
    # No Logic: No logic is used when placing items. Not recommended for most players.
    glitchless: 50
    glitched: 0
    no_logic: 0

  logic_no_night_tokens_without_suns_song:
    # When enabled, nighttime skulltulas logically require Sun's Song.
    false: 50
    true: 0

  open_forest:
    # Set the state of Kokiri Forest and the path to Deku Tree.
    # Open: Neither the forest exit nor the path to Deku Tree is blocked.
    # Closed Deku: The forest exit is not blocked; the path to Deku Tree requires Kokiri Sword and Deku Shield.
    # Closed: Path to Deku Tree requires sword and shield. The forest exit is blocked until Deku Tree is beaten.
    # Closed forest will force child start, and becomes Closed Deku if interior entrances, overworld entrances, warp songs, or random spawn positions are enabled.
    open: 50
    closed_deku: 0
    closed: 0

  open_kakariko:
    # Set the state of the Kakariko Village gate for child. The gate is always open as adult.
    # Open: The gate starts open. Happy Mask Shop opens upon receiving Zelda's Letter.
    # Zelda: The gate and Mask Shop open upon receiving Zelda's Letter, without needing to show it to the guard.
    # Closed: Vanilla behavior; the gate and Mask Shop open upon showing Zelda's Letter to the gate guard.
    open: 50
    zelda: 0
    closed: 0

  open_door_of_time:
    # When enabled, the Door of Time starts opened, without needing Song of Time.
    false: 0
    true: 50

  zora_fountain:
    # Set the state of King Zora, blocking the way to Zora's Fountain.
    # Open: King Zora starts moved as both ages. Ruto's Letter is removed.
    # Adult: King Zora must be moved as child, but is always moved for adult.
    # Closed: Vanilla behavior; King Zora must be shown Ruto's Letter as child to move him as both ages.
    open: 0
    adult: 0
    closed: 50

  gerudo_fortress:
    # Set the requirements for access to Gerudo Fortress.
    # Normal: Vanilla behavior; all four carpenters must be rescued.
    # Fast: Only one carpenter must be rescued, which is the one in the bottom-left of the fortress.
    # Open: The Gerudo Valley bridge starts repaired. Gerudo Membership Card is given to start if not shuffled.
    normal: 0
    fast: 50
    open: 0

  bridge:
    # Set the requirements for the Rainbow Bridge.
    # Open: The bridge is always present.
    # Vanilla: Bridge requires Shadow Medallion, Spirit Medallion, and Light Arrows.
    # Stones: Bridge requires a configurable amount of Spiritual Stones.
    # Medallions: Bridge requires a configurable amount of medallions.
    # Dungeons: Bridge requires a configurable amount of rewards (stones + medallions).
    # Tokens: Bridge requires a configurable amount of gold skulltula tokens.
    # Hearts: Bridge requires a configurable amount of hearts.
    open: 0
    vanilla: 0
    stones: 0
    medallions: 50
    dungeons: 0
    tokens: 0
    hearts: 0

  trials:
    # Set the number of required trials in Ganon's Castle.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_age:
    # Choose which age Link will start as.
    child: 50
    adult: 0

  shuffle_interior_entrances:
    # Shuffles interior entrances.
    # Simple: Houses and Great Fairies are shuffled.
    # All: In addition to Simple, includes Windmill, Link's House, Temple of Time, and the Kakariko potion shop.
    off: 50
    simple: 0
    all: 0

  shuffle_grotto_entrances:
    # Shuffles grotto and grave entrances.
    false: 50
    true: 0

  shuffle_dungeon_entrances:
    # Shuffles dungeon entrances. When enabled, both ages will have access to Fire Temple, Bottom of the Well, and Deku Tree.
    # Simple: Shuffle dungeon entrances except for Ganon's Castle.
    # All: Include Ganon's Castle as well.
    off: 50
    simple: 0
    all: 0

  shuffle_overworld_entrances:
    # Shuffles overworld loading zones.
    false: 50
    true: 0

  owl_drops:
    # Randomizes owl drops from Lake Hylia or Death Mountain Trail as child.
    false: 50
    true: 0

  warp_songs:
    # Randomizes warp song destinations.
    false: 50
    true: 0

  spawn_positions:
    # Randomizes the starting position on loading a save. Consistent between savewarps.
    off: 50
    child: 0
    adult: 0
    both: 0

  shuffle_bosses:
    # Shuffles boss entrances.
    # Limited: Bosses will be limited to the ages that typically fight them.
    # Full: Bosses may be fought as different ages than usual. Child can defeat Phantom Ganon and Bongo Bongo.
    off: 50
    limited: 0
    full: 0

  triforce_hunt:
    # Gather pieces of the Triforce scattered around the world to complete the game.
    false: 50
    true: 0

  triforce_goal:
    # Number of Triforce pieces required to complete the game.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_triforce_percentage:
    # Percentage of additional Triforce pieces in the pool. With high numbers, you may need to randomize additional
    # locations to have enough items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  bombchus_in_logic:
    # Bombchus are properly considered in logic.
    # The first found pack will always have 20 chus.
    # Kokiri Shop and Bazaar will sell refills at reduced cost.
    # Bombchus open Bombchu Bowling.
    false: 50
    true: 0

  dungeon_shortcuts:
    # Shortcuts to dungeon bosses are available without any requirements.
    # If enabled, this will impact the logic of dungeons where shortcuts are available.
    # Choice: Use the option "dungeon_shortcuts_list" to choose shortcuts.
    off: 50
    choice: 0
    all: 0
    random_dungeons: 0

  dungeon_shortcuts_list:
    # Chosen dungeons to have shortcuts.
    []

  mq_dungeons_mode:
    # Choose between vanilla and Master Quest dungeon layouts.
    # Vanilla: All layouts are vanilla.
    # MQ: All layouts are Master Quest.
    # Specific: Use the option "mq_dungeons_list" to choose which dungeons are MQ.
    # Count: Use the option "mq_dungeons_count" to choose a number of random dungeons as MQ.
    vanilla: 50
    mq: 0
    specific: 0
    count: 0

  mq_dungeons_list:
    # With MQ dungeons as Specific: chosen dungeons to be MQ layout.
    []

  mq_dungeons_count:
    # With MQ dungeons as Count: number of randomly-selected dungeons to be MQ layout.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_stones:
    # With Stones bridge: set the number of Spiritual Stones required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_medallions:
    # With Medallions bridge: set the number of medallions required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_rewards:
    # With Dungeons bridge: set the number of dungeon rewards required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 9
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_tokens:
    # With Tokens bridge: set the number of Gold Skulltula Tokens required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  bridge_hearts:
    # With Hearts bridge: set the number of hearts required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_mapcompass:
    # Control where to shuffle dungeon maps and compasses.
    # Remove: There will be no maps or compasses in the itempool.
    # Startwith: You start with all maps and compasses.
    # Vanilla: Maps and compasses remain vanilla.
    # Dungeon: Maps and compasses are shuffled within their original dungeon.
    # Regional: Maps and compasses are shuffled only in regions near the original dungeon.
    # Overworld: Maps and compasses are shuffled locally outside of dungeons.
    # Any Dungeon: Maps and compasses are shuffled locally in any dungeon.
    # Keysanity: Maps and compasses can be anywhere in the multiworld.
    remove: 0
    startwith: 50
    vanilla: 0
    dungeon: 0
    regional: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0

  shuffle_smallkeys:
    # Control where to shuffle dungeon small keys.
    # Remove/"Keysy": There will be no small keys in the itempool. All small key doors are automatically unlocked.
    # Vanilla: Small keys remain vanilla. You may start with extra small keys in some dungeons to prevent softlocks.
    # Dungeon: Small keys are shuffled within their original dungeon.
    # Regional: Small keys are shuffled only in regions near the original dungeon.
    # Overworld: Small keys are shuffled locally outside of dungeons.
    # Any Dungeon: Small keys are shuffled locally in any dungeon.
    # Keysanity: Small keys can be anywhere in the multiworld.
    remove: 0
    vanilla: 0
    dungeon: 50
    regional: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0

  shuffle_hideoutkeys:
    # Control where to shuffle the Thieves' Hideout small keys.
    # Vanilla: Hideout keys remain vanilla.
    # Regional: Hideout keys are shuffled only in the Gerudo Valley/Desert Colossus area.
    # Overworld: Hideout keys are shuffled locally outside of dungeons.
    # Any Dungeon: Hideout keys are shuffled locally in any dungeon.
    # Keysanity: Hideout keys can be anywhere in the multiworld.
    vanilla: 50
    regional: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0

  shuffle_bosskeys:
    # Control where to shuffle boss keys, except the Ganon's Castle Boss Key.
    # Remove/"Keysy": There will be no boss keys in the itempool. All boss key doors are automatically unlocked.
    # Vanilla: Boss keys remain vanilla. You may start with extra small keys in some dungeons to prevent softlocks.
    # Dungeon: Boss keys are shuffled within their original dungeon.
    # Regional: Boss keys are shuffled only in regions near the original dungeon.
    # Overworld: Boss keys are shuffled locally outside of dungeons.
    # Any Dungeon: Boss keys are shuffled locally in any dungeon.
    # Keysanity: Boss keys can be anywhere in the multiworld.
    remove: 0
    vanilla: 0
    dungeon: 50
    regional: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0

  enhance_map_compass:
    # Map tells if a dungeon is vanilla or MQ. Compass tells what the dungeon reward is.
    false: 50
    true: 0

  shuffle_ganon_bosskey:
    # Control how to shuffle the Ganon's Castle Boss Key (GCBK).
    # Remove: GCBK is removed, and the boss key door is automatically unlocked.
    # Vanilla: GCBK remains vanilla.
    # Dungeon: GCBK is shuffled within its original dungeon.
    # Regional: GCBK is shuffled only in Hyrule Field, Market, and Hyrule Castle areas.
    # Overworld: GCBK is shuffled locally outside of dungeons.
    # Any Dungeon: GCBK is shuffled locally in any dungeon.
    # Keysanity: GCBK can be anywhere in the multiworld.
    # On LACS: GCBK is on the Light Arrow Cutscene, which requires Shadow and Spirit Medallions.
    # Stones: GCBK will be awarded when reaching the target number of Spiritual Stones.
    # Medallions: GCBK will be awarded when reaching the target number of medallions.
    # Dungeons: GCBK will be awarded when reaching the target number of dungeon rewards.
    # Tokens: GCBK will be awarded when reaching the target number of Gold Skulltula Tokens.
    # Hearts: GCBK will be awarded when reaching the target number of hearts.
    remove: 50
    vanilla: 0
    dungeon: 0
    regional: 0
    overworld: 0
    any_dungeon: 0
    keysanity: 0
    on_lacs: 0
    stones: 0
    medallions: 0
    dungeons: 0
    tokens: 0
    hearts: 0

  ganon_bosskey_medallions:
    # With medallions GCBK: set how many medallions are required to receive GCBK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_stones:
    # With stones GCBK: set how many Spiritual Stones are required to receive GCBK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_rewards:
    # With dungeons GCBK: set how many dungeon rewards are required to receive GCBK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 9
    9: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_tokens:
    # With tokens GCBK: set how many Gold Skulltula Tokens are required to receive GCBK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  ganon_bosskey_hearts:
    # With hearts GCBK: set how many hearts are required to receive GCBK.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  key_rings:
    # A key ring grants all dungeon small keys at once, rather than individually.
    # Choose: Use the option "key_rings_list" to choose which dungeons have key rings.
    # All: All dungeons have key rings instead of small keys.
    off: 50
    choose: 0
    all: 0
    random_dungeons: 0

  key_rings_list:
    # With key rings as Choose: select areas with key rings rather than individual small keys.
    []

  shuffle_song_items:
    # Set where songs can appear.
    # Song: Songs are shuffled into other song locations.
    # Dungeon: Songs are placed into end-of-dungeon locations:
    # - The 8 boss heart containers
    # - Sheik in Ice Cavern
    # - Lens of Truth chest in Bottom of the Well
    # - Ice Arrows chest in Gerudo Training Ground
    # - Impa at Hyrule Castle
    # Any: Songs can appear anywhere in the multiworld.
    song: 50
    dungeon: 0
    any: 0

  shopsanity:
    # Randomizes shop contents.
    # Off: Shops are not randomized at all.
    # Fixed Number: Shop contents are shuffled, and a specific number of multiworld locations exist in each shop, controlled by the "shop_slots" option.
    # Random Number: Same as Fixed Number, but the number of locations per shop is random and may differ between shops.
    off: 50
    fixed_number: 0
    random_number: 0

  shop_slots:
    # With Shopsanity fixed number: quantity of multiworld locations per shop to be randomized.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  shopsanity_prices:
    # Controls prices of shop locations.
    # Normal: Balanced distribution from 0 to 300.
    # Affordable: Every shop location costs 10 rupees.
    # Starting Wallet: Prices capped at 99 rupees.
    # Adult's Wallet: Prices capped at 200 rupees.
    # Giant's Wallet: Prices capped at 500 rupees.
    # Tycoon's Wallet: Prices capped at 999 rupees.
    normal: 50
    affordable: 0
    starting_wallet: 0
    adults_wallet: 0
    giants_wallet: 0
    tycoons_wallet: 0

  tokensanity:
    # Token rewards from Gold Skulltulas can be shuffled into the pool.
    # Dungeons: Only skulltulas in dungeons are shuffled.
    # Overworld: Only skulltulas on the overworld (all skulltulas not in dungeons) are shuffled.
    # All: Every skulltula is shuffled.
    off: 50
    dungeons: 0
    overworld: 0
    all: 0

  shuffle_scrubs:
    # Shuffle the items sold by Business Scrubs, and set the prices.
    # Off: Only the three business scrubs that sell one-time upgrades in vanilla will have items at their vanilla prices.
    # Low/"Affordable": All scrub prices are 10 rupees.
    # Regular/"Expensive": All scrub prices are vanilla.
    # Random Prices: All scrub prices are randomized between 0 and 99 rupees.
    off: 50
    low: 0
    regular: 0
    random_prices: 0

  shuffle_child_trade:
    # Controls the behavior of the start of the child trade quest.
    # Vanilla: Malon will give you the Weird Egg at Hyrule Castle.
    # Shuffle: Malon will give you a random item, and the Weird Egg is shuffled.
    # Skip Child Zelda: The game starts with Zelda already met, Zelda's Letter obtained, and the item from Impa obtained.
    vanilla: 50
    shuffle: 0
    skip_child_zelda: 0

  shuffle_freestanding_items:
    # Shuffles freestanding rupees, recovery hearts, Shadow Temple Spinning Pots, and Goron Pot drops.
    # Dungeons: Only freestanding items in dungeons are shuffled.
    # Overworld: Only freestanding items in the overworld are shuffled.
    # All: All freestanding items are shuffled.
    off: 50
    dungeons: 0
    overworld: 0
    all: 0

  shuffle_pots:
    # Shuffles pots and flying pots which normally contain an item.
    # Dungeons: Only pots in dungeons are shuffled.
    # Overworld: Only pots in the overworld are shuffled.
    # All: All pots are shuffled.
    off: 50
    dungeons: 0
    overworld: 0
    all: 0

  shuffle_crates:
    # Shuffles large and small crates containing an item.
    # Dungeons: Only crates in dungeons are shuffled.
    # Overworld: Only crates in the overworld are shuffled.
    # All: All crates are shuffled.
    off: 50
    dungeons: 0
    overworld: 0
    all: 0

  shuffle_cows:
    # Cows give items when Epona's Song is played.
    false: 50
    true: 0

  shuffle_beehives:
    # Beehives drop an item when destroyed by an explosion, the Hookshot, or the Boomerang.
    false: 50
    true: 0

  shuffle_kokiri_sword:
    # Shuffle Kokiri Sword into the item pool.
    false: 50
    true: 0

  shuffle_ocarinas:
    # Shuffle the Fairy Ocarina and Ocarina of Time into the item pool.
    false: 50
    true: 0

  shuffle_gerudo_card:
    # Shuffle the Gerudo Membership Card into the item pool.
    false: 50
    true: 0

  shuffle_beans:
    # Adds a pack of 10 beans to the item pool and changes the bean salesman to sell one item for 60 rupees.
    false: 50
    true: 0

  shuffle_medigoron_carpet_salesman:
    # Shuffle the items sold by Medigoron and the Haunted Wasteland Carpet Salesman.
    false: 50
    true: 0

  shuffle_frog_song_rupees:
    # Shuffles the purple rupees received from the Zora's River frogs.
    false: 50
    true: 0

  no_escape_sequence:
    # Skips the tower collapse sequence between the Ganondorf and Ganon fights.
    false: 0
    true: 50

  no_guard_stealth:
    # The crawlspace into Hyrule Castle skips straight to Zelda.
    false: 0
    true: 50

  no_epona_race:
    # Epona can always be summoned with Epona's Song.
    false: 0
    true: 50

  skip_some_minigame_phases:
    # Dampe Race and Horseback Archery give both rewards if the second condition is met on the first attempt.
    false: 0
    true: 50

  complete_mask_quest:
    # All masks are immediately available to borrow from the Happy Mask Shop.
    false: 50
    true: 0

  useful_cutscenes:
    # Reenables the Poe cutscene in Forest Temple, Darunia in Fire Temple, and Twinrova introduction. Mostly useful for
    #  glitched.
    false: 50
    true: 0

  fast_chests:
    # All chest animations are fast. If disabled, major items have a slow animation.
    false: 0
    true: 50

  free_scarecrow:
    # Pulling out the ocarina near a scarecrow spot spawns Pierre without needing the song.
    false: 50
    true: 0

  fast_bunny_hood:
    # Bunny Hood lets you move 1.5x faster like in Majora's Mask.
    false: 50
    true: 0

  plant_beans:
    # Pre-plants all 10 magic beans in the soft soil spots.
    false: 50
    true: 0

  chicken_count:
    # Controls the number of Cuccos for Anju to give an item as child.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  big_poe_count:
    # Number of Big Poes required for the Poe Collector's item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  fae_torch_count:
    # Number of lit torches required to open Shadow Temple.
    # Does not affect logic; use the trick Shadow Temple Entry with Fire Arrows if desired.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 24
    24: 50
    random: 0
    random-low: 0
    random-high: 0

  correct_chest_appearances:
    # Changes chest textures and/or sizes to match their contents.
    # Off: All chests have their vanilla size/appearance.
    # Textures: Chest textures reflect their contents.
    # Both: Like Textures, but progression items and boss keys get big chests, and other items get small chests.
    # Classic: Old behavior of CSMC; textures distinguish keys from non-keys, and size distinguishes importance.
    off: 50
    textures: 0
    both: 0
    classic: 0

  minor_items_as_major_chest:
    # Hylian Shield, Deku Shield, and Bombchus appear in big/gold chests.
    false: 50
    true: 0

  invisible_chests:
    # Chests visible only with Lens of Truth. Logic is not changed.
    false: 50
    true: 0

  correct_potcrate_appearances:
    # Changes the appearance of pots, crates, and beehives that contain items.
    # Off: Vanilla appearance for all containers.
    # Textures (Content): Unchecked pots and crates have a texture reflecting their contents. Unchecked beehives with progression items will wiggle.
    # Textures (Unchecked): Unchecked pots and crates are golden. Unchecked beehives will wiggle.
    off: 0
    textures_content: 0
    textures_unchecked: 50

  hints:
    # Gossip Stones can give hints about item locations.
    # None: Gossip Stones do not give hints.
    # Mask: Gossip Stones give hints with Mask of Truth.
    # Agony: Gossip Stones give hints wtih Stone of Agony.
    # Always: Gossip Stones always give hints.
    none: 0
    mask: 0
    agony: 0
    always: 50

  misc_hints:
    # The Temple of Time altar hints dungeon rewards, bridge info, and Ganon BK info; Ganondorf hints the Light Arrows; Dampe's diary hints a local Hookshot if one exists; Skulltula House locations hint their item.
    false: 0
    true: 50

  hint_dist:
    # Choose the hint distribution to use. Affects the frequency of strong hints, which items are always hinted, etc.
    # Detailed documentation on hint distributions can be found on the Archipelago GitHub or OoTRandomizer.com.
    # The Async hint distribution is intended for async multiworlds. It removes Way of the Hero hints to improve generation times, since they are not very useful in asyncs.
    balanced: 0
    ddr: 0
    scrubs: 0
    strong: 0
    useless: 0
    very_strong: 0
    async: 50

  text_shuffle:
    # Randomizes text in the game for comedic effect.
    # Except Hints: does not randomize important text such as hints, small/boss key information, and item prices.
    # Complete: randomizes every textbox, including the useful ones.
    none: 50
    except_hints: 0
    complete: 0

  damage_multiplier:
    # Controls the amount of damage Link takes.
    half: 0
    normal: 50
    double: 0
    quadruple: 0
    ohko: 0

  deadly_bonks:
    # Bonking on a wall or object will hurt Link. "Normal" is a half heart of damage.
    none: 50
    half: 0
    normal: 0
    double: 0
    quadruple: 0
    ohko: 0

  no_collectible_hearts:
    # Hearts will not drop from enemies or objects.
    false: 50
    true: 0

  starting_tod:
    # Change the starting time of day.
    # Daytime starts at Sunrise and ends at Sunset. Default is between Morning and Noon.
    default: 50
    sunrise: 0
    morning: 0
    noon: 0
    afternoon: 0
    sunset: 0
    evening: 0
    midnight: 0
    witching_hour: 0

  blue_fire_arrows:
    # Ice arrows can melt red ice and break the mud walls in Dodongo's Cavern.
    false: 50
    true: 0

  fix_broken_drops:
    # Fixes two broken vanilla drops: deku shield in child Spirit Temple, and magic drop on GTG eye statue.
    false: 50
    true: 0

  start_with_consumables:
    # Start the game with full Deku Sticks and Deku Nuts.
    false: 50
    true: 0

  start_with_rupees:
    # Start with a full wallet. Wallet upgrades will also fill your wallet.
    false: 50
    true: 0

  item_pool_value:
    # Changes the number of items available in the game.
    # Plentiful: One extra copy of every major item.
    # Balanced: Original item pool.
    # Scarce: Extra copies of major items are removed. Heart containers are removed.
    # Minimal: All major item upgrades not used for locations are removed. All health is removed.
    plentiful: 0
    balanced: 50
    scarce: 0
    minimal: 0

  junk_ice_traps:
    # Adds ice traps to the item pool.
    # Off: All ice traps are removed.
    # Normal: The vanilla quantity of ice traps are placed.
    # On/"Extra": There is a chance for some extra ice traps to be placed.
    # Mayhem: All added junk items are ice traps.
    # Onslaught: All junk items are replaced by ice traps, even those in the base pool.
    off: 0
    normal: 50
    on: 0
    mayhem: 0
    onslaught: 0

  ice_trap_appearance:
    # Changes the appearance of traps, including other games' traps, as freestanding items.
    major_only: 50
    junk_only: 0
    anything: 0

  adult_trade_start:
    # Choose the item that starts the adult trade sequence.
    pocket_egg: 0
    pocket_cucco: 0
    cojiro: 0
    odd_mushroom: 0
    poachers_saw: 0
    broken_sword: 0
    prescription: 0
    eyeball_frog: 0
    eyedrops: 0
    claim_check: 50

  default_targeting:
    # Default targeting option.
    hold: 50
    switch: 0

  display_dpad:
    # Show dpad icon on HUD for quick actions (ocarina, hover boots, iron boots, mask).
    false: 0
    true: 50

  dpad_dungeon_menu:
    # Show separated menus on the pause screen for dungeon keys, rewards, and Vanilla/MQ info.
    false: 0
    true: 50

  correct_model_colors:
    # Makes in-game models match their HUD element colors.
    false: 0
    true: 50

  background_music:
    # Randomize or disable background music.
    normal: 50
    off: 0
    randomized: 0

  fanfares:
    # Randomize or disable item fanfares.
    normal: 50
    off: 0
    randomized: 0

  ocarina_fanfares:
    # Enable ocarina songs as fanfares. These are longer than usual fanfares. Does nothing without fanfares randomized.
    false: 50
    true: 0

  kokiri_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 50
    goron_red: 0
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  goron_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 0
    goron_red: 50
    zora_blue: 0
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  zora_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    kokiri_green: 0
    goron_red: 0
    zora_blue: 50
    black: 0
    white: 0
    azure_blue: 0
    vivid_cyan: 0
    light_red: 0
    fuchsia: 0
    purple: 0
    majora_purple: 0
    twitch_purple: 0
    purple_heart: 0
    persian_rose: 0
    dirty_yellow: 0
    blush_pink: 0
    hot_pink: 0
    rose_pink: 0
    orange: 0
    gray: 0
    gold: 0
    silver: 0
    beige: 0
    teal: 0
    blood_red: 0
    blood_orange: 0
    royal_blue: 0
    sonic_blue: 0
    nes_green: 0
    dark_green: 0
    lumen: 0

  silver_gauntlets_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    silver: 50
    gold: 0
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0

  golden_gauntlets_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    silver: 0
    gold: 50
    black: 0
    green: 0
    blue: 0
    bronze: 0
    red: 0
    sky_blue: 0
    pink: 0
    magenta: 0
    orange: 0
    lime: 0
    purple: 0

  mirror_shield_frame_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    red: 50
    green: 0
    blue: 0
    yellow: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  navi_color_default_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 50
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_default_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_enemy_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 50
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_enemy_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_npc_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 50
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_npc_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  navi_color_prop_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 50
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0

  navi_color_prop_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    gold: 0
    white: 0
    green: 0
    light_blue: 0
    yellow: 0
    red: 0
    magenta: 0
    black: 0
    tatl: 0
    tael: 0
    fi: 0
    ciela: 0
    epona: 0
    ezlo: 0
    king_of_red_lions: 0
    linebeck: 0
    loftwing: 0
    midna: 0
    phantom_zelda: 0
    match_inner: 50

  sword_trail_duration:
    # Set the duration for sword trails.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4
    # Maximum value is 20
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  sword_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    white: 50
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  sword_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    white: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  bombchu_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 50
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  bombchu_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  boomerang_trail_color_inner:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 50
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0

  boomerang_trail_color_outer:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    #     "match_inner" copies the inner color for this option.
    random_choice: 0
    completely_random: 0
    rainbow: 0
    yellow: 0
    red: 0
    green: 0
    blue: 0
    cyan: 0
    magenta: 0
    orange: 0
    gold: 0
    purple: 0
    pink: 0
    match_inner: 50

  heart_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    red: 50
    green: 0
    blue: 0
    yellow: 0

  magic_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    green: 50
    red: 0
    blue: 0
    purple: 0
    pink: 0
    yellow: 0
    white: 0

  a_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 50
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  b_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 50
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  c_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 0
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 50
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  start_button_color:
    # Choose a color. "random_choice" selects a random option. "completely_random" generates a random hex code.
    random_choice: 0
    completely_random: 0
    n64_blue: 0
    n64_green: 0
    n64_red: 50
    gamecube_green: 0
    gamecube_red: 0
    gamecube_grey: 0
    yellow: 0
    black: 0
    white: 0
    magenta: 0
    ruby: 0
    sapphire: 0
    lime: 0
    cyan: 0
    purple: 0
    orange: 0

  sfx_navi_overworld:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_navi_enemy:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    cockadoodledoo: 0
    dusk_howl: 0
    exploding_crate: 0
    explosion: 0
    great_fairy: 0
    guay: 0
    low_health: 0
    recover_health: 0
    horse_neigh: 0
    shattering_ice: 0
    moo: 0
    mweep: 0
    navi_hello: 0
    notification: 0
    poe: 0
    shattering_pot: 0
    redead_scream: 0
    ribbit: 0
    ruto_giggle: 0
    skulltula: 0
    soft_beep: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_low_hp:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_low: 0
    bow_twang: 0
    business_scrub: 0
    carrot_refill: 0
    cluck: 0
    drawbridge_set: 0
    guay: 0
    recover_health: 0
    horse_trot: 0
    iron_boots: 0
    moo: 0
    mweep: 0
    navi_hey: 0
    navi_random: 0
    notification: 0
    shattering_pot: 0
    ribbit: 0
    silver_rupee: 0
    soft_beep: 0
    switch: 0
    sword_bonk: 0
    tambourine: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_menu_cursor:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_pant: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_menu_select:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    bomb_bounce: 0
    bongo_bongo_high: 0
    bongo_bongo_low: 0
    bottle_cork: 0
    bow_twang: 0
    bubble_laugh: 0
    carrot_refill: 0
    change_item: 0
    child_cringe: 0
    child_pant: 0
    child_scream: 0
    cluck: 0
    deku_baba: 0
    drawbridge_set: 0
    dusk_howl: 0
    fanfare_light: 0
    fanfare_medium: 0
    field_shrub: 0
    flare_dancer_startled: 0
    ganondorf_teh: 0
    gohma_larva_croak: 0
    gold_skull_token: 0
    goron_wake: 0
    guay: 0
    gunshot: 0
    low_health: 0
    recover_health: 0
    hammer_bonk: 0
    horse_trot: 0
    iron_boots: 0
    iron_knuckle: 0
    moo: 0
    mweep: 0
    notification: 0
    phantom_ganon_laugh: 0
    plant_explode: 0
    shattering_pot: 0
    redead_moan: 0
    ribbit: 0
    rupee: 0
    silver_rupee: 0
    ruto_crash: 0
    ruto_lift: 0
    ruto_thrown: 0
    scrub_emerge: 0
    shabom_bounce: 0
    shabom_pop: 0
    shellblade: 0
    skulltula: 0
    soft_beep: 0
    spit_nut: 0
    switch: 0
    sword_bonk: 0
    talon_hmm: 0
    talon_snore: 0
    talon_wtf: 0
    tambourine: 0
    target_enemy: 0
    target_neutral: 0
    thunder: 0
    timer: 0
    adult_zelda_gasp: 0

  sfx_nightfall:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    cockadoodledoo: 0
    gold_skull_token: 0
    great_fairy: 0
    moo: 0
    mweep: 0
    redead_moan: 0
    talon_snore: 0
    thunder: 0

  sfx_horse_neigh:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    armos: 0
    child_scream: 0
    great_fairy: 0
    moo: 0
    mweep: 0
    redead_scream: 0
    ruto_wiggle: 0
    stalchild_attack: 0

  sfx_hover_boots:
    # Choose a sound effect. "random_choice" selects a random option. "random_ear_safe" selects a random safe option.
    #     "completely_random" selects any random sound.
    default: 50
    completely_random: 0
    random_ear_safe: 0
    random_choice: 0
    none: 0
    bark: 0
    cartoon_fall: 0
    flare_dancer_laugh: 0
    mweep: 0
    shabom_pop: 0
    tambourine: 0

  sfx_ocarina:
    # Change the sound of the ocarina.
    ocarina: 50
    malon: 0
    whistle: 0
    harp: 0
    grind_organ: 0
    flute: 0

  logic_tricks:
    # Set various tricks for logic in Ocarina of Time.
    # Format as a comma-separated list of "nice" names: ["Fewer Tunic Requirements", "Hidden Grottos without Stone of Agony"].
    # A full list of supported tricks can be found at:
    # https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/oot/LogicTricks.py
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Overcooked! 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  location_balancing:
    # Location balancing affects the density of progression items found in your world relative to other worlds. This setting changes nothing for solo games.
    #
    # - Disabled: Location density in your world can fluctuate greatly depending on the settings of other players. In extreme cases, your world may be entirely populated with filler items
    #
    # - Compromise: Locations are balanced to a midpoint between "fair" and "natural"
    #
    # - Full: Locations are balanced in an attempt to make the number of progression items sent out and received equal over the entire game
    disabled: 0
    compromise: 50
    full: 0

  ramp_tricks:
    # If enabled, generated games may require sequence breaks on the overworld map. This includes crossing small gaps and escaping out of bounds.
    false: 50
    true: 0

  deathlink:
    # DeathLink is an opt-in feature for Multiworlds where individual death events are propagated to all games with DeathLink enabled.
    #
    # - Disabled: Death will behave as it does in the original game.
    #
    # - Death Only: A DeathLink broadcast will be sent every time a chef falls into a stage hazard. All local chefs will be killed when any one perishes.
    #
    # - Death and Overcook: Same as above, but an additional broadcast will be sent whenever the kitchen catches on fire from burnt food.
    disabled: 0
    death_only: 1
    death_and_overcook: 1

  shuffle_level_order:
    # Shuffles the order of kitchens on the overworld map. Also draws from DLC maps.
    false: 0
    true: 50

  include_dlcs:
    # Which DLCs should be included when 'Shuffle Level Order' is enabled?'
    ["Story", "Seasonal"]

  include_horde_levels:
    # Includes "Horde Defense" levels in the pool of possible kitchens when Shuffle Level Order is enabled. Also adds
    # two horde-specific items into the item pool.
    false: 0
    true: 50

  prep_levels:
    # Choose How "Prep Levels" are handled (levels where the timer does not start until the first order is served):
    #
    # - Original: Prep Levels may appear
    #
    # - Excluded: Prep Levels are excluded from the pool during level shuffling
    #
    # - All You Can Eat: Prep Levels may appear, but the timer automatically starts. The star score requirements are also
    # adjusted to use the All You Can Eat World Record (if it exists)
    original: 0
    excluded: 50
    all_you_can_eat: 0

  kevin_levels:
    # Includes the 8 Kevin level locations on the map as unlockables. Turn off to make games shorter.
    false: 0
    true: 50

  fix_bugs:
    # Fixes Bugs Present in the base game:
    # - Double Serving Exploit
    # - Sink Bug
    # - Control Stick Cancel/Throw Bug
    # - Can't Throw Near Empty Burner Bug
    false: 0
    true: 50

  shorter_level_duration:
    # Modifies level duration to be about 1/3rd shorter than in the original game, thus bringing the item discovery
    # pace in line with other popular Archipelago games.
    #
    # Points required to earn stars are scaled accordingly. ("Boss Levels" which change scenery mid-game are not
    # affected.)
    false: 0
    true: 50

  short_horde_levels:
    # Modifies horde levels to contain roughly 1/3rd fewer waves than in the original game.
    #
    # The kitchen's health is scaled appropriately to preserve the same approximate difficulty.
    false: 0
    true: 50

  always_preserve_cooking_progress:
    # Modifies the game to behave more like AYCE, where adding an item to an in-progress container doesn't reset the
    # entire progress bar.
    false: 0
    true: 50

  always_serve_oldest_order:
    # Modifies the game so that serving an expired order doesn't target the ticket with the highest tip. This helps
    # players dig out of a broken tip combo faster.
    false: 0
    true: 50

  display_leaderboard_scores:
    # Modifies the Overworld map to fetch and display the current world records for each level. Press number keys 1-4
    # to view leaderboard scores for that number of players.
    false: 50
    true: 0

  stars_to_win:
    # Number of stars required to unlock 6-6.
    #
    # Level purchase requirements between 1-1 and 6-6 will be spread between these two numbers. Using too high of a number
    # may result in more frequent generation failures, especially when horde levels are enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    60: 50
    random: 0
    random-low: 0
    random-high: 0

  star_threshold_scale:
    # How difficult should the third star for each level be on a scale of 1-100%, where 100% is the current world
    # record score and 45% is the average vanilla 4-star score.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    35: 50
    random: 0
    random-low: 0
    random-high: 0

Pokemon Emerald:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines what your goal is to consider the game beaten
    #
    # Champion: Become the champion and enter the hall of fame
    # Steven: Defeat Steven in Meteor Falls
    # Norman: Defeat Norman in Petalburg Gym
    champion: 1
    steven: 1
    norman: 1
    legendary_hunt: 0

  badges:
    # Adds Badges to the pool
    #
    # Vanilla: Gym leaders give their own badge
    # Shuffle: Gym leaders give a random badge
    # Completely Random: Badges can be found anywhere
    vanilla: 0
    shuffle: 0
    completely_random: 50

  hms:
    # Adds HMs to the pool
    #
    # Vanilla: HMs are at their vanilla locations
    # Shuffle: HMs are shuffled among vanilla HM locations
    # Completely Random: HMs can be found anywhere
    vanilla: 0
    shuffle: 0
    completely_random: 50

  key_items:
    # Adds most key items to the pool. These are usually required to unlock
    # a location or region (e.g. Devon Scope, Letter, Basement Key)
    false: 0
    true: 50

  bikes:
    # Adds the mach bike and acro bike to the pool
    false: 0
    true: 1

  event_tickets:
    # Adds the event tickets to the pool, which let you access legendaries by sailing from Lilycove
    false: 0
    true: 1

  rods:
    # Adds fishing rods to the pool
    false: 0
    true: 1

  overworld_items:
    # Adds items on the ground with a Pokeball sprite to the pool
    false: 0
    true: 1

  hidden_items:
    # Adds hidden items to the pool
    false: 0
    true: 1

  npc_gifts:
    # Adds most gifts received from NPCs to the pool (not including key items or HMs)
    false: 0
    true: 1

  berry_trees:
    # Adds berry trees to the pool. Empty soil patches are converted to locations and contribute Sitrus Berries to the pool.
    false: 50
    true: 0

  dexsanity:
    # Adding a "caught" pokedex entry gives you an item (catching, evolving, trading, etc.).
    #
    # Defeating gym leaders provides dex info, allowing you to see where on the map you can catch species you need.
    #
    # Each pokedex entry adds a Poke Ball, Great Ball, or Ultra Ball to the pool.
    false: 50
    true: 0

  trainersanity:
    # Defeating a trainer for the first time gives you an item. Trainers are no longer missable.
    #
    # Trainers no longer give you money for winning. Each trainer adds a valuable item (nugget, stardust, etc.) to the pool.
    false: 50
    true: 0

  item_pool_type:
    # Determines which non-progression items get put into the item pool
    #
    # Shuffled: Item pool consists of shuffled vanilla items
    # Diverse Balanced: Item pool consists of random items approximately proportioned
    # according to what they're replacing (i.e. more pokeballs, fewer X items, etc.)
    # Diverse: Item pool consists of uniformly random (non-unique) items
    shuffled: 50
    diverse_balanced: 0
    diverse: 0

  require_itemfinder:
    # The Itemfinder is logically required to pick up hidden items
    false: 1
    true: 0

  require_flash:
    # Determines whether HM05 Flash is logically required to navigate a dark cave
    neither: 0
    only_granite_cave: 0
    only_victory_road: 0
    both: 50

  elite_four_requirement:
    # Sets the requirements to challenge the elite four
    #
    # Badges: Obtain some number of badges
    # Gyms: Defeat some number of gyms
    badges: 1
    gyms: 1

  elite_four_count:
    # Sets the number of badges/gyms required to challenge the elite four
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 0
    random: 1
    random-low: 0
    random-high: 0

  norman_requirement:
    # Sets the requirements to challenge the Petalburg Gym
    #
    # Badges: Obtain some number of badges
    # Gyms: Defeat some number of gyms
    badges: 1
    gyms: 1

  norman_count:
    # Sets the number of badges/gyms required to challenge the Petalburg Gym
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    4: 0
    random: 1
    random-low: 0
    random-high: 0

  legendary_hunt_catch:
    # Sets whether legendaries need to be caught to satisfy the Legendary Hunt win condition. Defeated legendaries can be respawned by defeating the Elite 4.
    false: 0
    true: 1

  legendary_hunt_count:
    # Sets the number of legendaries that must be caught/defeated for the Legendary Hunt goal
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 12
    3: 0
    random: 1
    random-low: 0
    random-high: 0

  allowed_legendary_hunt_encounters:
    # Sets which legendary encounters can contribute to the Legendary Hunt goal.
    #
    # Latios will always be the roamer. Latias will always be at Southern Island.
    #
    # Possible values are:
    # "Groudon"
    # "Kyogre"
    # "Rayquaza"
    # "Latios"
    # "Latias"
    # "Regirock"
    # "Registeel"
    # "Regice"
    # "Ho-Oh"
    # "Lugia"
    # "Deoxys"
    # "Mew"
    [
      "Kyogre",
      "Lugia",
      "Groudon",
      "Mew",
      "Ho-Oh",
      "Latias",
      "Deoxys",
      "Latios",
      "Regice",
      "Registeel",
      "Regirock",
      "Rayquaza",
    ]

  wild_pokemon:
    # Randomizes wild pokemon encounters (grass, caves, water, fishing)
    #
    # Vanilla: Wild encounters are unchanged
    # Match Base Stats: Wild pokemon are replaced with species with approximately the same bst
    # Match Type: Wild pokemon are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 1

  wild_encounter_blacklist:
    # Prevents listed species from appearing in the wild when wild encounters are randomized.
    #
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    #
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  starters:
    # Randomizes the starter pokemon in Professor Birch's bag
    #
    # Vanilla: Starters are unchanged
    # Match Base Stats: Starters are replaced with species with approximately the same bst
    # Match Type: Starters are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 1

  starter_blacklist:
    # Prevents listed species from appearing as starters when starters are randomized.
    #
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    #
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  trainer_parties:
    # Randomizes the parties of all trainers.
    #
    # Vanilla: Parties are unchanged
    # Match Base Stats: Trainer pokemon are replaced with species with approximately the same bst
    # Match Type: Trainer pokemon are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 1

  trainer_party_blacklist:
    # Prevents listed species from appearing in opponent trainers' parties if opponent parties are randomized.
    #
    # May be overridden if enforcing other restrictions in combination with this blacklist is impossible.
    #
    # Use "_Legendaries" as a shortcut for legendary pokemon.
    []

  force_fully_evolved:
    # When an opponent uses a pokemon of the specified level or higher, restricts the species to only fully evolved pokemon.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  legendary_encounters:
    # Randomizes legendary encounters (Rayquaza, Regice, Latias, etc.). The roamer will always be Latios during legendary hunts.
    #
    # Vanilla: Legendary encounters are unchanged
    # Shuffle: Legendary encounters are shuffled between each other
    # Match Base Stats: Legendary encounters are replaced with species with approximately the same bst
    # Match Type: Legendary encounters are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 0
    shuffle: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 1

  misc_pokemon:
    # Randomizes non-legendary static encounters. May grow to include other pokemon like trades or gifts.
    #
    # Vanilla: Species are unchanged
    # Shuffle: Species are shuffled between each other
    # Match Base Stats: Species are replaced with species with approximately the same bst
    # Match Type: Species are replaced with species that share a type with the original
    # Match Base Stats and Type: Apply both Match Base Stats and Match Type
    # Completely Random: There are no restrictions
    vanilla: 0
    shuffle: 0
    match_base_stats: 0
    match_type: 0
    match_base_stats_and_type: 0
    completely_random: 1

  types:
    # Randomizes the type(s) of every pokemon. Each species will have the same number of types.
    #
    # Vanilla: Types are unchanged
    # Shuffle: Types are shuffled globally for all species (e.g. every Water-type pokemon becomes Fire-type)
    # Completely Random: Each species has its type(s) randomized
    # Follow Evolutions: Types are randomized per evolution line instead of per species
    vanilla: 50
    shuffle: 0
    completely_random: 0
    follow_evolutions: 0

  abilities:
    # Randomizes abilities of every species. Each species will have the same number of abilities.
    #
    # Vanilla: Abilities are unchanged
    # Completely Random: Each species has its abilities randomized
    # Follow Evolutions: Abilities are randomized, but if a pokemon would normally retain its ability
    # when evolving, the random ability will also be retained
    vanilla: 50
    completely_random: 0
    follow_evolutions: 0

  ability_blacklist:
    # A list of abilities which no pokemon should have if abilities are randomized.
    # For example, you could exclude Wonder Guard and Arena Trap like this:
    # ["Wonder Guard", "Arena Trap"]
    []

  level_up_moves:
    # Randomizes the moves a pokemon learns when they reach a level where they would learn a move.
    # Your starter is guaranteed to have a usable damaging move.
    #
    # Vanilla: Learnset is unchanged
    # Randomized: Moves are randomized
    # Start with Four Moves: Moves are randomized and all Pokemon know 4 moves at level 1
    vanilla: 0
    randomized: 0
    start_with_four_moves: 1

  move_match_type_bias:
    # Sets the probability that a learned move will be forced match one of the types of a pokemon.
    #
    # If a move is not forced to match type, it will roll for Normal type bias.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  move_normal_type_bias:
    # After it has been decided that a move will not be forced to match types, sets the probability that a learned move
    # will be forced to be the Normal type.
    #
    # If a move is not forced to be Normal, it will be completely random.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  tm_tutor_compatibility:
    # Sets the percent chance that a given TM or move tutor is compatible with a species
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    100: 1
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1

  hm_compatibility:
    # Sets the percent chance that a given HM is compatible with a species
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 100
    100: 1
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1

  tm_tutor_moves:
    # Randomizes the moves taught by TMs and move tutors
    false: 0
    true: 1

  reusable_tms_tutors:
    # Sets TMs to not break after use (they remain sellable). Sets move tutors to infinite use.
    false: 0
    true: 1

  move_blacklist:
    # A list of moves which should be excluded from learnsets, TMs, and move tutors.
    []

  min_catch_rate:
    # Sets the minimum catch rate a pokemon can have. Any pokemon with a catch rate below this floor will have it raised to this value.
    #
    # Legendaries are often in the single digits
    # Fully evolved pokemon are often double digits
    # Pidgey is 255
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 255
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  guaranteed_catch:
    # Every throw is guaranteed to catch a wild pokemon
    false: 50
    true: 0

  normalize_encounter_rates:
    # Make every slot on an encounter table approximately equally likely.
    #
    # This does NOT mean every species is equally likely. But it will make rarer encounters less rare overall.
    false: 0
    true: 1

  exp_modifier:
    # Multiplies gained experience by a percentage
    #
    # 100 is default
    # 50 is half
    # 200 is double
    # etc.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1000
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  blind_trainers:
    # Causes trainers to not start a battle with you unless you talk to them
    false: 50
    true: 0

  purge_spinners:
    # Trainers will rotate in predictable patterns on a set interval instead of randomly and don't turn toward you when you run
    false: 50
    true: 0

  match_trainer_levels:
    # When you start a battle with a trainer, your party's levels will be automatically set to match that trainer's highest level pokemon.
    #
    # The experience you receive will match your party's average actual level, and will only be awarded when you win the battle.
    #
    # This is a pseudo-replacement for a level cap and makes every trainer battle a fair fight while still allowing you to level up.
    #
    # Off: The vanilla experience
    # Additive: The modifier you apply to your team is a flat bonus
    # Multiplicative: The modifier you apply to your team is a percent bonus
    off: 50
    additive: 0
    multiplicative: 0

  match_trainer_levels_bonus:
    # A level bonus (or penalty) to apply to your team when matching an opponent's levels.
    #
    # When the match trainer levels option is "additive", this value is added to your team's levels during a battle.
    # For example, if this value is 5 (+5 levels), you'll have a level 25 team against a level 20 team, and a level 45 team against a level 40 team.
    #
    # When the match trainer levels option is "multiplicative", this is a percent bonus.
    # For example, if this value is 5 (+5%), you'll have a level 21 team against a level 20 team, and a level 42 team against a level 40 team.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -100
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  double_battle_chance:
    # The percent chance that a trainer with more than 1 pokemon will be converted into a double battle.
    # If these trainers would normally approach you, they will only do so if you have 2 unfainted pokemon.
    # They can be battled by talking to them no matter what.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 0
    random: 1
    random-low: 0
    random-high: 0

  better_shops:
    # Pokemarts sell every item that can be obtained in a pokemart (except mail, which is still unique to the relevant city)
    false: 50
    true: 0

  remove_roadblocks:
    # Removes specific NPCs that normally stand in your way until certain events are completed.
    #
    # This can open up the world a bit and make your playthrough less linear, but careful how many you remove; it may make too much of your world accessible upon receiving Surf.
    #
    # Possible values are:
    # "Route 110 Aqua Grunts"
    # "Route 112 Magma Grunts"
    # "Route 119 Aqua Grunts"
    # "Safari Zone Construction Workers"
    # "Lilycove City Wailmer"
    # "Aqua Hideout Grunts"
    # "Seafloor Cavern Aqua Grunt"
    []

  extra_boulders:
    # Places strength boulders on Route 115 which block access to Meteor Falls from the beach.
    # This aims to take some power away from Surf by restricting how much it allows you to access.
    false: 50
    true: 0

  extra_bumpy_slope:
    # Adds a bumpy slope to Route 115 which allows access to Meteor Falls if you have the Acro Bike.
    # This aims to take some power away from Surf by adding a new way to exit the Rustboro area.
    false: 50
    true: 0

  modify_118:
    # Changes the layout of Route 118 so that it must be crossed with the Acro Bike instead of Surf.
    # This aims to take some power away from Surf by restricting how much it allows you to access.
    false: 50
    true: 0

  free_fly_location:
    # Enables flying to one random location when Mom gives you the running shoes (excluding cities reachable with no items)
    false: 50
    true: 0

  hm_requirements:
    # Sets the requirements to use HMs outside of battle
    vanilla: 50
    fly_without_badge: 0

  turbo_a:
    # Holding A will advance most text automatically
    false: 0
    true: 1

  receive_item_messages:
    # Determines whether you receive an in-game notification when receiving an item. Items can still only be received in the overworld.
    #
    # All: Every item shows a message
    # Progression: Only progression items show a message
    # None: All items are added to your bag silently (badges will still show)
    all: 50
    progression: 0
    none: 0

  remote_items:
    # Instead of placing your own items directly into the ROM, all items are received from the server, including items you find for yourself.
    #
    # This enables co-op of a single slot and recovering more items after a lost save file (if you're so unlucky).
    # But it changes pickup behavior slightly and requires connection to the server to receive any items.
    false: 50
    true: 0

  music:
    # Shuffles music played in any situation where it loops. Includes many FRLG tracks.
    false: 0
    true: 1

  fanfares:
    # Shuffles fanfares for item pickups, healing at the pokecenter, etc.
    #
    # When this option is enabled, pressing B will interrupt most fanfares.
    false: 0
    true: 1

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  enable_wonder_trading:
    # Allows participation in wonder trading with other players in your current multiworld. Speak with the center receptionist on the second floor of any pokecenter.
    #
    # Wonder trading NEVER affects logic.
    #
    # Certain aspects of a pokemon species are per-game, not per-pokemon.
    # As a result, some things are not retained during a trade, including type, ability, level up learnset, and so on.
    # Receiving a pokemon this way does not mark it as found in your pokedex.
    # Trade evolutions do not evolve this way; they retain their modified methods (level ups and item use).
    false: 0
    true: 50

  easter_egg:
    # Enter certain phrases and something special might happen.
    #
    # All secret phrases are something that could be a trendy phrase in Dewford Town. They are case insensitive.
    EMERALD SECRET: 50

Pokemon Red and Blue:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  game_version:
    # Select Red or Blue version.
    red: 0
    blue: 0
    random: 50

  trainer_name:
    # Your trainer name. If not set to choose_in_game, must be a name not exceeding 7 characters, and the prompt to
    # name your character in-game will be skipped. See the setup guide on archipelago.gg for a list of allowed characters.
    choose_in_game: 0
    Lajjo: 1

  rival_name:
    # Your rival's name. If not set to choose_in_game, must be a name not exceeding 7 characters, and the prompt to
    # name your rival in-game will be skipped. See the setup guide on archipelago.gg for a list of allowed characters.
    choose_in_game: 0
    Vimz: 1

  elite_four_badges_condition:
    # Number of badges required to challenge the Elite Four once the Indigo Plateau has been reached.
    # Your rival will reveal the amount needed on the first Route 22 battle (after turning in Oak's Parcel).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    8: 0
    random: 1
    random-low: 0
    random-high: 0

  elite_four_key_items_condition:
    # Percentage of available key items (not counting items you can lose) required to challenge the Elite Four. Does
    # not count HMs. Evolution stones and Exp. All are key items in Archipelago.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  elite_four_pokedex_condition:
    # Percentage of logically-reachable Pokemon that must be registered as "owned" in the Pokedex in order to
    # challenge the Elite Four.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  victory_road_condition:
    # Number of badges required to reach the front entrance of Victory Road.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  route_22_gate_condition:
    # Number of badges required to pass through the Route 22 Gate
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  viridian_gym_condition:
    # Number of badges required to enter Viridian Gym.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  cerulean_cave_badges_condition:
    # Number of badges needed to access the Cerulean Cave entrance in addition to the required Key Items.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    4: 0
    random: 1
    random-low: 0
    random-high: 0

  cerulean_cave_key_items_condition:
    # Percentage of available key items (not counting items you can lose) required to access the Cerulean Cave
    # entrance in addition to the required badges. Does not count HMs.
    # Evolution stones and Exp. All are key items in Archipelago.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  route_3_condition:
    # Set a condition to pass through from Pewter City to Route 3.
    open: 0
    defeat_brock: 50
    defeat_any_gym: 0
    boulder_badge: 0
    any_badge: 0

  robbed_house_officer:
    # You can disable to remove the requirement to help Bill before you can enter the robbed house in Cerulean City.
    false: 1
    true: 1

  second_fossil_check_condition:
    # After choosing one of the fossil location items, you can obtain the remaining item from the Cinnabar Lab
    # Scientist after reviving this number of fossils.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 0
    random: 1
    random-low: 0
    random-high: 0

  fossil_check_item_types:
    # The two fossil checks always contain items for your own game. Here, you can choose what types of items can
    # appear. Key Items means only advancement items can appear. Unique means key items or TMs may appear. No Key Items
    # means no advancement items may appear.
    any: 50
    key_items: 0
    unique_items: 0
    no_key_items: 0

  exp_all:
    # Choose how the Exp. All item is handled. It can be removed entirely, shuffled into the item pool, or you can
    # start with it.
    remove: 0
    randomize: 50
    start_with: 0

  old_man:
    # With Open Viridian City, the Old Man will let you through without needing to turn in Oak's Parcel.
    # Early Parcel will ensure Oak's Parcel is available at the beginning of your game.
    vanilla: 1
    early_parcel: 0
    open_viridian_city: 0

  badgesanity:
    # Shuffle gym badges into the general item pool. If turned off, badges will be shuffled across the 8 gyms.
    false: 0
    true: 1

  badges_needed_for_hm_moves:
    # Off will remove the requirement for badges to use HM moves. Extra will give the Marsh, Volcano, and Earth Badges
    # a random HM move to enable. Extra Plus will additionally pick two random badges to enable a second HM move.
    # You will only need one of the required badges to use the HM move.
    on: 50
    off: 0
    extra: 0
    extra_plus: 0

  key_items_only:
    # Shuffle only Key Items. This overrides Randomize Hidden Items, Trainersanity, and Dexsanity.
    # Sets all non-excluded locations in your game to Priority Locations.
    # May have high generation failure rates for solo games or small multiworlds, especially with Door Shuffle.
    false: 50
    true: 0

  tea:
    # Adds a Tea item to the item pool which the Saffron guards require instead of the vending machine drinks.
    # Adds a location check to the Celadon Mansion 1F, where Tea is acquired in FireRed and LeafGreen.
    false: 0
    true: 1

  extra_key_items:
    # Adds key items that are required to access the Rocket Hideout, Cinnabar Mansion, Safari Zone, and Power Plant.
    # Adds four item pickups to Rock Tunnel B1F.
    false: 50
    true: 0

  split_card_key:
    # Splits the Card Key item into 10 different Keys, one for each Silph Co floor 2F through 11F.
    # Adds location checks to 9 NPCs in Silph Co.
    # With Progressive, you will always obtain the keys in order from 2F to 11F.
    off: 50
    on: 0
    progressive: 0

  all_elevators_locked:
    # Adds requirements to the Celadon Department Store elevator and Silph Co elevators to have the Lift Key.
    # No logical implications normally, but may have a significant impact on some Door Shuffle options.
    false: 0
    true: 50

  extra_strength_boulders:
    # Adds Strength Boulders blocking the Route 11 gate, and in Route 13 (can be bypassed with Surf).
    # This potentially increases the usefulness of Strength as well as the Bicycle.
    false: 50
    true: 0

  require_item_finder:
    # Require Item Finder to pick up hidden items.
    false: 50
    true: 0

  randomize_hidden_items:
    # Randomize hidden items. If you choose exclude, they will be randomized but will be guaranteed junk items.
    on: 1
    off: 0
    exclude: 0

  prizesanity:
    # Shuffles the TM prizes at the Celadon Prize Corner into the item pool.
    false: 50
    true: 0

  trainersanity:
    # Add a location check to every trainer in the game, which can be obtained by talking to a trainer after defeating
    # them. Does not affect gym leaders and some scripted event battles (including all Rival, Giovanni, and
    # Cinnabar Gym battles).
    false: 0
    true: 1

  dexsanity:
    # Adds location checks for Pokemon flagged "owned" on your Pokedex. You may specify a percentage of Pokemon to
    # have checks added. If Accessibility is set to locations, this will be the percentage of all logically reachable
    # Pokemon that will get a location check added to it. With items or minimal Accessibility, it will be the percentage
    # of all 151 Pokemon.
    # If Pokedex is required, the items for Pokemon acquired before acquiring the Pokedex can be found by talking to
    # Professor Oak or evaluating the Pokedex via Oak's PC.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    disabled: 50 # equivalent to 0
    full: 0 # equivalent to 100

  randomize_pokedex:
    # Randomize the location of the Pokedex, or start with it.
    vanilla: 50
    randomize: 0
    start_with: 0

  require_pokedex:
    # Require the Pokedex to obtain items from Oak's Aides or from Dexsanity checks.
    false: 0
    true: 50

  all_pokemon_seen:
    # Start with all Pokemon "seen" in your Pokedex. This allows you to see where Pokemon can be encountered in the
    # wild. Pokemon found by fishing or in the Cerulean Cave are not displayed.
    # The Pokedex also shows which HMs can be learned by Pokemon registered as seen.
    false: 50
    true: 0

  oaks_aide_rt_2:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 2.
    # Vanilla is 10.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    10: 0
    random: 1
    random-low: 0
    random-high: 0

  oaks_aide_rt_11:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 11.
    # Vanilla is 30.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    20: 0
    random: 1
    random-low: 0
    random-high: 0

  oaks_aide_rt_15:
    # Number of Pokemon registered in the Pokedex required to receive the item from Oak's Aide on Route 15.
    # Vanilla is 50.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 80
    30: 0
    random: 1
    random-low: 0
    random-high: 0

  stonesanity:
    # Removes the four evolution stones from the Celadon Department Store and replaces four of the five Moon Stones
    # in the item pool with the four shop stones. If randomize_hidden_items is off, this will cause the two hidden
    # Moon Stone locations to be randomized anyway. These are in Pokemon Mansion 1F and Mt Moon B2F.
    false: 50
    true: 0

  door_shuffle:
    # Simple: entrances are randomized together in groups: Pokemarts, Gyms, single exit dungeons, dual exit dungeons,
    # single exit misc interiors, dual exit misc interiors are all shuffled separately. Safari Zone is not shuffled.
    # On Simple only, the Town Map will be updated to show the new locations for each dungeon.
    # Interiors: Any outdoor entrance may lead to any interior, but intra-interior doors are not shuffled. Previously
    # named Full.
    # Full: Exterior to interior entrances are shuffled, and interior to interior doors are shuffled, separately.
    # Insanity: All doors in the game are shuffled.
    # Decoupled: Doors may be decoupled from each other, so that leaving through an exit may not return you to the
    # door you entered from.
    off: 1
    simple: 1
    interiors: 1
    full: 1
    insanity: 1
    decoupled: 1

  warp_tile_shuffle:
    # Vanilla: The warp tiles in Silph Co and Sabrina's Gym are not changed.
    # Shuffle: The warp tile destinations are shuffled among themselves.
    # Mixed: The warp tiles are mixed into the pool of available doors for Full, Insanity, and Decoupled. Same as Shuffle
    # for any other door shuffle option.
    vanilla: 1
    shuffle: 1
    mixed: 1

  randomize_rock_tunnel:
    # Randomize the layout of Rock Tunnel. If Full, Insanity, or Decoupled Door Shuffle is on, this will cause only the
    # main entrances to Rock Tunnel to be shuffled.
    false: 50
    true: 0

  dark_rock_tunnel_logic:
    # Logically require Flash to traverse the Rock Tunnel, so you are never forced to traverse it in the dark.
    false: 0
    true: 50

  free_fly_location:
    # One random Fly destination will be unlocked by default.
    false: 0
    true: 50

  town_map_fly_location:
    # One random Fly destination will be unlocked when you obtain the Town Map.
    false: 50
    true: 0

  blind_trainers:
    # Chance each frame that you are standing on a tile in a trainer's line of sight that they will fail to initiate a
    # battle. If you move into and out of their line of sight without stopping, this chance will only trigger once.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 0
    random: 1
    random-low: 0
    random-high: 0

  minimum_steps_between_encounters:
    # Minimum number of steps between wild Pokemon encounters.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  level_scaling:
    # Off: Encounters use vanilla game levels.
    # By Spheres: Levels are scaled by access sphere. Areas reachable in later spheres will have higher levels.
    # By Spheres and Distance: Levels are scaled by access spheres as well as distance from Pallet Town, measured by
    # number  of internal region connections. This is a much more severe curving of levels and may lead to much less
    # variation in levels found in a particular map. However, it may make the higher door shuffle settings significantly
    # more bearable, as these options more often result in a smaller number of larger access spheres.
    # Auto: Scales by Spheres if Door Shuffle is off or on Simple, otherwise scales by Spheres and Distance
    off: 0
    by_spheres: 0
    by_spheres_and_distance: 0
    auto: 50

  exp_modifier:
    # Modifier for EXP gained. When specifying a number, exp is multiplied by this amount and divided by 16.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 4.0
    # Maximum value is 255
    random: 1
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 8.0
    normal: 0 # equivalent to 16
    double: 0 # equivalent to 32
    triple: 0 # equivalent to 48
    quadruple: 0 # equivalent to 64
    quintuple: 0 # equivalent to 80
    sextuple: 0 # equivalent to 96
    septuple: 0 # equivalent to 112
    octuple: 0 # equivalent to 128

  randomize_wild_pokemon:
    # Randomize all wild Pokemon and game corner prize Pokemon. match_types will select a Pokemon with at least one
    # type matching the original type of the original Pokemon. match_base_stats will prefer Pokemon with closer base stat
    # totals. match_types_and_base_stats will match types and will weight towards similar base stats, but there may not be
    # many to choose from.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 1

  area_1_to_1_mapping:
    # When randomizing wild Pokemon, for each zone, all instances of a particular Pokemon will be replaced with the
    # same Pokemon, resulting in fewer Pokemon in each area.
    false: 1
    true: 0

  randomize_starter_pokemon:
    # Randomize the starter Pokemon choices.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 1

  randomize_static_pokemon:
    # Randomize one-time gift and encountered Pokemon. These will always be first evolution stage Pokemon.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 1

  randomize_legendary_pokemon:
    # Randomize Legendaries. Mew has been added as an encounter at the Vermilion dock truck.
    # Shuffle will shuffle the legendaries with each other. Static will shuffle them into other static Pokemon locations.
    # 'Any' will allow legendaries to appear anywhere based on wild and static randomization options, and their locations
    # will be randomized according to static Pokemon randomization options.
    vanilla: 0
    shuffle: 0
    static: 0
    any: 1

  catch_em_all:
    # Guarantee all first evolution stage Pokemon are available, or all Pokemon of all stages.
    # Currently only has an effect if wild Pokemon are randomized.
    off: 0
    first_stage: 0
    all_pokemon: 1

  randomize_pokemon_stats:
    # Randomize base stats for each Pokemon. Shuffle will shuffle the 5 base stat values amongst each other. Randomize
    # will completely randomize each stat, but will still add up to the same base stat total.
    vanilla: 50
    shuffle: 0
    randomize: 0

  randomize_pokemon_catch_rates:
    # Randomize the catch rate for each Pokemon.
    false: 50
    true: 0

  minimum_catch_rate:
    # Minimum catch rate for each Pokemon. If randomize_catch_rates is on, this will be the minimum value that can be
    # chosen. Otherwise, it will raise any Pokemon's catch rate up to this value if its normal catch rate is lower.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  randomize_trainer_parties:
    # Randomize enemy Pokemon encountered in trainer battles.
    vanilla: 0
    match_types: 0
    match_base_stats: 0
    match_types_and_base_stats: 0
    completely_random: 1

  trainer_legendaries:
    # Allow legendary Pokemon in randomized trainer parties.
    false: 0
    true: 1

  move_balancing:
    # All one-hit-KO moves and fixed-damage moves become normal damaging moves.
    # Blizzard, and moves that cause sleep have their accuracy reduced.
    false: 50
    true: 0

  fix_combat_bugs:
    # Fixes a variety of combat-related bugs. Note that this fixes the Focus Energy bug. The Focus Energy bug causes
    # critical strike chances to be doubled when Focus Energy has not been used and halved when it is used.
    # Fixing this bug means critical strike chances outside the use of Focus Energy are quartered from the vanilla rate.
    false: 0
    true: 50

  randomize_pokemon_movesets:
    # Randomize the moves learned by Pokemon. prefer_types will prefer moves that match the type of the Pokemon.
    vanilla: 0
    prefer_types: 0
    completely_random: 1

  confine_transform_to_ditto:
    # Regardless of moveset randomization, will keep Ditto's first move as Transform no others will learn it.
    # If an enemy Pokemon uses transform before you catch it, it will permanently change to Ditto after capture.
    false: 0
    true: 50

  start_with_four_moves:
    # If movesets are randomized, this will give all Pokemon 4 starting moves.
    false: 0
    true: 1

  same_type_attack_bonus:
    # Here you can disable Same Type Attack Bonus, so that a move matching a Pokemon's type has no benefit.
    # If disabled, all moves will gain 25% extra damage, instead of same type moves gaining 50% extra damage.
    false: 0
    true: 50

  randomize_tm_moves:
    # Randomize the moves taught by TMs.
    # All TM items will be flagged as 'filler' items regardless of how good the move they teach are.
    false: 0
    true: 1

  tm_same_type_compatibility:
    # Chance of each TM being usable on each Pokemon whose type matches the move.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  tm_normal_type_compatibility:
    # Chance of each TM being usable on each Pokemon if the move is Normal type and the Pokemon is not.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  tm_other_type_compatibility:
    # Chance of each TM being usable on each Pokemon if the move a type other than Normal or one of the Pokemon's types.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  hm_same_type_compatibility:
    # Chance of each HM being usable on each Pokemon whose type matches the move.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  hm_normal_type_compatibility:
    # Chance of each HM being usable on each Pokemon if the move is Normal type and the Pokemon is not.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  hm_other_type_compatibility:
    # Chance of each HM being usable on each Pokemon if the move a type other than Normal or one of the Pokemon's types.
    # At least one Pokemon will always be able to learn the moves needed to meet your accessibility requirements.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to -1
    none: 0 # equivalent to 0
    full: 1 # equivalent to 100

  inherit_tm_hm_compatibility:
    # If on, evolved Pokemon will inherit their pre-evolved form's TM and HM compatibilities.
    # They will then roll the above set chances again at a 50% lower rate for all TMs and HMs their predecessor could not
    # learn, unless the evolved form has additional or different types, then moves of those new types will be rolled
    # at the full set chance.
    false: 50
    true: 0

  randomize_move_types:
    # Randomize the types of each move.
    false: 50
    true: 0

  randomize_pokemon_types:
    # Randomize the types of each Pokemon. Follow Evolutions will ensure Pokemon's types remain the same when evolving
    # (except possibly gaining a type).
    vanilla: 50
    follow_evolutions: 0
    randomize: 0

  secondary_type_chance:
    # If randomize_pokemon_types is on, this is the chance each Pokemon will have a secondary type. If follow_evolutions
    # is selected, it is the chance a second type will be added at each evolution stage. vanilla will give secondary types
    # to Pokemon that normally have a secondary type.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to -1

  randomize_type_chart:
    # Randomize the type chart. If 'randomize' is chosen, the matchup weight options will determine the weights.
    # If the numbers chosen across the 4 settings add up to exactly 225, they will be the exact numbers of those matchups.
    # Otherwise, the normal super effective, and not very effective matchup settings will be used as weights.
    # The immunities option will always be the exact amount of immunity matchups.
    # If 'chaos' is chosen, the matchup settings will be ignored and every type matchup will be given a random damage
    # modifier anywhere between 0 to 200% damage, in 10% increments.
    vanilla: 50
    randomize: 0
    chaos: 0

  normal_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for neutral matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    143: 50
    random: 0
    random-low: 0
    random-high: 0

  super_effective_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for super effective matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    38: 50
    random: 0
    random-low: 0
    random-high: 0

  not_very_effective_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the weight for not very effective matchups.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 225
    38: 50
    random: 0
    random-low: 0
    random-high: 0

  immunity_matchups:
    # If 'randomize' is chosen for Randomize Type Chart, this will be the exact number of immunities.
    # No effect if 'chaos' is chosen
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  safari_zone_normal_battles:
    # Change the Safari Zone to have standard wild Pokemon battles.
    false: 50
    true: 0

  normalize_encounter_chances:
    # Each wild encounter table has 10 slots for Pokemon. Normally the chance for each being chosen ranges from
    # 19.9% to 1.2%. Turn this on to normalize them all to 10% each.
    false: 50
    true: 0

  reusable_tms:
    # Makes TMs reusable, so they will not be consumed upon use.
    false: 0
    true: 1

  better_shops:
    # Change every town's Pokemart to contain all normal Pokemart items. Additionally, you can add the Master Ball
    # to these shops.
    off: 0
    on: 0
    add_master_ball: 1

  master_ball_price:
    # Price for Master Balls. Can only be bought if Better Shops is set to Add Master Ball, but this will affect the
    # sell price regardless. Vanilla is 0
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 999999
    5000: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_money:
    # The amount of money you start with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 999999
    3000: 50
    random: 0
    random-low: 0
    random-high: 0

  lose_money_on_blackout:
    # Lose half your money when blacking out, as in vanilla.
    false: 0
    true: 50

  poke_doll_skip:
    # Patch out the Pokemon Tower Poke Doll skip or have this skip considered in logic.
    patched: 50
    in_logic: 0

  bicycle_gate_skips:
    # Patch out the Route 16/18 Bicycle Gate skips or have these skips considered in logic.
    patched: 0
    in_logic: 1

  trap_percentage:
    # Chance for each filler item to be replaced with trap items. Keep in mind that trainersanity vastly increases the
    # number of filler items. The trap weight options will determine which traps can be chosen from and at what likelihood.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  poison_trap_weight:
    # Weights for Poison Traps. These apply the Poison status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  fire_trap_weight:
    # Weights for Fire Traps. These apply the Burn status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  paralyze_trap_weight:
    # Weights for Paralyze Traps. These apply the Paralyze status to all your party members.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  sleep_trap_weight:
    # Weights for Sleep Traps. These apply the Sleep status to all your party members, for randomly between 1 and 7 turns.
    low: 0
    medium: 50
    high: 0
    disabled: 0

  ice_trap_weight:
    # Weights for Ice Traps. These apply the Ice status to all your party members. Don't forget to buy Ice Heals!
    low: 0
    medium: 0
    high: 0
    disabled: 50

  randomize_pokemon_palettes:
    # Modify palettes of Pokemon. Primary Type will set Pokemons' palettes based on their primary type, Follow
    # Evolutions will randomize palettes but palettes will remain the same through evolutions (except Eeveelutions),
    # Completely Random will randomize all Pokemons' palettes individually
    vanilla: 50
    primary_type: 0
    follow_evolutions: 0
    completely_random: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Raft:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  minimum_resource_pack_amount:
    # The minimum amount of resources available in a resource pack
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 15
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  maximum_resource_pack_amount:
    # The maximum amount of resources available in a resource pack
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 15
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  duplicate_items:
    # Adds duplicates of items to the item pool (if configured in Filler items). These will be selected alongside
    # Resource Packs (if configured). Note that there are not many progression items, and selecting Progression may
    # produce many of the same duplicate item.
    progression: 0
    non_progression: 0
    any: 50

  filler_item_types:
    # Determines whether to use Resource Packs, Duplicate Items (as configured), or both.
    resource_packs: 50
    duplicates: 0
    both: 0

  island_frequency_locations:
    # Sets where frequencies for story islands are located.
    vanilla: 0
    random_on_island: 0
    random_island_order: 50
    random_on_island_random_order: 0
    progressive: 0
    anywhere: 0

  island_generation_distance:
    # Sets how far away islands spawn from you when you input their coordinates into the Receiver.
    quarter: 0
    half: 0
    vanilla: 50
    double: 0
    quadrouple: 0

  expensive_research:
    # Makes unlocking items in the Crafting Table consume the researched items.
    false: 50
    true: 0

  progressive_items:
    # Makes some items, like the Bow and Arrow, progressive rather than raw unlocks.
    false: 0
    true: 50

  big_island_early_crafting:
    # Allows recipes that require items from big islands (eg leather) to lock earlygame items like the Receiver, Bolt,
    # or Smelter. Big islands are available from the start of the game, however it can take a long time to find them.
    false: 50
    true: 0

  paddleboard_mode:
    # Sets later story islands to in logic without an Engine or Steering Wheel. May require lots of paddling. Not
    # recommended.
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Risk of Rain 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Classic Mode: Every Item pickup increases fills a progress bar which gives location checks.
    #
    # Explore Mode: Each environment will have location checks within each environment.
    # environments will be locked in the item pool until received.
    classic: 0
    explore: 1

  victory:
    # Mithrix: Defeat Mithrix in Commencement
    # Voidling: Defeat the Voidling in The Planetarium (DLC required! Will select any if not enabled.)
    # Limbo: Defeat the Scavenger in Hidden Realm: A Moment, Whole
    # Any: Any victory in the game will count. See Final Stage Death for additional ways.
    any: 50
    mithrix: 0
    voidling: 0
    limbo: 0

  total_locations:
    # Classic Mode: Number of location checks which are added to the Risk of Rain playthrough.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 40
    # Maximum value is 250
    40: 0
    random: 1
    random-low: 0
    random-high: 0

  chests_per_stage:
    # Explore Mode: The number of chest locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 20
    10: 0
    random: 1
    random-low: 0
    random-high: 0

  shrines_per_stage:
    # Explore Mode: The number of shrine locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 2
    # Maximum value is 20
    5: 0
    random: 0
    random-low: 1
    random-high: 0

  scavengers_per_stage:
    # Explore Mode: The number of scavenger locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1
    0: 0
    random: 1
    random-low: 0
    random-high: 0

  scanner_per_stage:
    # Explore Mode: The number of scanners locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 1
    1: 0
    random: 1
    random-low: 0
    random-high: 0

  altars_per_stage:
    # Explore Mode: The number of altars locations per environment.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 2
    1: 0
    random: 0
    random-low: 1
    random-high: 0

  total_revivals:
    # Total Percentage of `Dio's Best Friend` item put in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    4: 0
    random: 1
    random-low: 0
    random-high: 0

  start_with_revive:
    # Start the game with a `Dio's Best Friend` item.
    false: 1
    true: 0

  final_stage_death:
    # The following will count as a win if set to "true", and victory is set to "any":
    # Dying in Commencement.
    # Dying in The Planetarium.
    # Obliterating yourself
    # If not use the following to tell if final stage death will count:
    # Victory: mithrix - only dying in Commencement will count.
    # Victory: voidling - only dying in The Planetarium will count.
    # Victory: limbo - Obliterating yourself will count.
    false: 0
    true: 1

  dlc_sotv:
    # Enable if you are using SOTV DLC.
    #  Affects environment availability for Explore Mode.
    #  Adds Void Items into the item pool
    false: 0
    true: 1

  require_stages:
    # Add Stage items to the pool to block access to the next set of environments.
    false: 0
    true: 50

  progressive_stages:
    # This will convert Stage items to be a progressive item. For example instead of "Stage 2" it would be
    #  "Progressive Stage"
    false: 0
    true: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  item_pickup_step:
    # Number of items to pick up before an AP Check is completed.
    # Setting to 1 means every other pickup.
    # Setting to 2 means every third pickup. So on...
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    1: 0
    random: 1
    random-low: 0
    random-high: 0

  shrine_use_step:
    # Explore Mode:
    # Number of shrines to use up before an AP Check is completed.
    # Setting to 1 means every other pickup.
    # Setting to 2 means every third pickup. So on...
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    0: 0
    random: 1
    random-low: 0
    random-high: 0

  enable_trap:
    # Allows Trap items in the item pool.
    false: 50
    true: 0

  enable_lunar:
    # Allows Lunar items in the item pool.
    false: 0
    true: 50

  item_weights:
    # Set item_pool_presets to true if you want to use one of these presets.
    # Preset choices for determining the weights of the item pool.
    # - New is a test for a potential adjustment to the default weights.
    # - Uncommon puts a large number of uncommon items in the pool.
    # - Legendary puts a large number of legendary items in the pool.
    # - Chaos generates the pool completely at random with rarer items having a slight cap to prevent this option being
    # too easy.
    # - No Scraps removes all scrap items from the item pool.
    # - Even generates the item pool with every item having an even weight.
    # - Scraps Only will be only scrap items in the item pool.
    # - Lunartic makes everything a lunar item.
    # - Void makes everything a void item.
    default: 0
    new: 0
    uncommon: 0
    legendary: 1
    chaos: 1
    no_scraps: 0
    even: 0
    scraps_only: 1
    lunartic: 1
    void: 1

  item_pool_presets:
    # Will use the item weight presets when set to true, otherwise will use the custom set item pool weights.
    false: 0
    true: 1

  green_scrap:
    # Weight of Green Scraps in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  red_scrap:
    # Weight of Red Scraps in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  yellow_scrap:
    # Weight of yellow scraps in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  white_scrap:
    # Weight of white scraps in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    32: 50
    random: 0
    random-low: 0
    random-high: 0

  common_item:
    # Weight of common items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    64: 50
    random: 0
    random-low: 0
    random-high: 0

  uncommon_item:
    # Weight of uncommon items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    32: 50
    random: 0
    random-low: 0
    random-high: 0

  legendary_item:
    # Weight of legendary items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  boss_item:
    # Weight of boss items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  lunar_item:
    # Weight of lunar items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  void_item:
    # Weight of void items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # (Ignored if Enable DLC - SOTV is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    16: 50
    random: 0
    random-low: 0
    random-high: 0

  equipment:
    # Weight of equipment items in the item pool.
    #
    #  (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    32: 50
    random: 0
    random-low: 0
    random-high: 0

  money:
    # Weight of money items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    64: 50
    random: 0
    random-low: 0
    random-high: 0

  lunar_coin:
    # Weight of lunar coin items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  experience:
    # Weight of 1000 exp items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  mountain_trap:
    # Weight of mountain trap items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  time_warp_trap:
    # Weight of time warp trap items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  combat_trap:
    # Weight of combat trap items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  teleport_trap:
    # Weight of teleport trap items in the item pool.
    #
    # (Ignored unless Item Weight Presets is 'No')
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

Rogue Legacy:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  starting_gender:
    # Determines the gender of your initial 'Sir Lee' character.
    sir: 0
    lady: 0
    random: 50

  starting_class:
    # Determines the starting class of your initial 'Sir Lee' character.
    knight: 50
    mage: 0
    barbarian: 0
    knave: 0
    shinobi: 0
    miner: 0
    spellthief: 0
    lich: 0

  available_classes:
    # List of classes that will be in the item pool to find. The upgraded form of the class will be added with it.
    # The upgraded form of your starting class will be available regardless.
    [
      "Mage",
      "Knight",
      "Knave",
      "Shinobi",
      "Lich",
      "Spellthief",
      "Dragon",
      "Barbarian",
      "Traitor",
      "Miner",
    ]

  new_game_plus:
    # Puts the castle in new game plus mode which vastly increases enemy level, but increases gold gain by 50%. Not
    # recommended for those inexperienced to Rogue Legacy!
    normal: 50
    new_game_plus: 0
    new_game_plus_2: 0

  fairy_chests_per_zone:
    # Determines the number of Fairy Chests in a given zone that contain items. After these have been checked, only stat
    # bonuses can be found in Fairy Chests.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  chests_per_zone:
    # Determines the number of Non-Fairy Chests in a given zone that contain items. After these have been checked, only
    # gold or stat bonuses can be found in Chests.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 20
    # Maximum value is 50
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  universal_fairy_chests:
    # Determines if fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    false: 50
    true: 0

  universal_chests:
    # Determines if non-fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    false: 50
    true: 0

  vendors:
    # Determines where to place the Blacksmith and Enchantress unlocks in logic (or start with them unlocked).
    start_unlocked: 0
    early: 50
    normal: 0
    anywhere: 0

  architect:
    # Determines where the Architect sits in the item pool.
    start_unlocked: 0
    early: 0
    anywhere: 50
    disabled: 0

  architect_fee:
    # Determines how large of a percentage the architect takes from the player when utilizing his services. 100 means he
    # takes all your gold. 0 means his services are free.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    40: 50
    random: 0
    random-low: 0
    random-high: 0

  disable_charon:
    # Prevents Charon from taking your money when you re-enter the castle. Also removes Haggling from the Item Pool.
    false: 50
    true: 0

  require_purchasing:
    # Determines where you will be required to purchase equipment and runes from the Blacksmith and Enchantress before
    # equipping them. If you disable require purchasing, Manor Renovations are scaled to take this into account.
    false: 0
    true: 50

  progressive_blueprints:
    # Instead of shuffling blueprints randomly into the pool, blueprint unlocks are progressively unlocked. You would get
    # Squire first, then Knight, etc., until finally Dark.
    false: 50
    true: 0

  gold_gain_multiplier:
    # Adjusts the multiplier for gaining gold from all sources.
    normal: 50
    quarter: 0
    half: 0
    double: 0
    quadruple: 0

  number_of_children:
    # Determines the number of offspring you can choose from on the lineage screen after a death.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  free_diary_on_generation:
    # Allows the player to get a free diary check every time they regenerate the castle in the starting room.
    false: 0
    true: 50

  khidr:
    # Determines if Neo Khidr replaces Khidr in their boss room.
    vanilla: 50
    challenge: 0

  alexander:
    # Determines if Alexander the IV replaces Alexander in their boss room.
    vanilla: 50
    challenge: 0

  leon:
    # Determines if Ponce de Freon replaces Ponce de Leon in their boss room.
    vanilla: 50
    challenge: 0

  herodotus:
    # Determines if Astrodotus replaces Herodotus in their boss room.
    vanilla: 50
    challenge: 0

  health_pool:
    # Determines the number of Health Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  mana_pool:
    # Determines the number of Mana Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  attack_pool:
    # Determines the number of Attack Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  magic_damage_pool:
    # Determines the number of Magic Damage Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    15: 50
    random: 0
    random-low: 0
    random-high: 0

  armor_pool:
    # Determines the number of Armor Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  equip_pool:
    # Determines the number of Equip Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  crit_chance_pool:
    # Determines the number of Crit Chance Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  crit_damage_pool:
    # Determines the number of Crit Damage Ups in the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  allow_default_names:
    # Determines if the default names defined in the vanilla game are allowed to be used. Warning: Your world will not
    # generate if the number of Additional Names defined is less than the Number of Children value.
    false: 0
    true: 50

  additional_lady_names:
    # Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    # of names your children can have. The first value will also be your initial character's name depending on Starting
    # Gender.
    []

  additional_sir_names:
    # Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    # of names your children can have. The first value will also be your initial character's name depending on Starting
    # Gender.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Secret of Evermore:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 30
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  difficulty:
    # Changes relative spell cost and stuff
    easy: 0
    normal: 50
    hard: 0
    mystery: 0

  energy_core:
    # How to obtain the Energy Core
    vanilla: 0
    shuffle: 50
    fragments: 0

  required_fragments:
    # Required fragment count for Energy Core = Fragments
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  available_fragments:
    # Placed fragment count for Energy Core = Fragments
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    11: 50
    random: 0
    random-low: 0
    random-high: 0

  money_modifier:
    # Money multiplier in %
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2500
    200: 0
    random: 1
    random-low: 0
    random-high: 0

  exp_modifier:
    # EXP multiplier for Weapons, Characters and Spells in %
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 2500
    200: 0
    random: 1
    random-low: 0
    random-high: 0

  sequence_breaks:
    # Disable, enable some sequence breaks or put them in logic
    off: 50
    on: 0
    logic: 0

  out_of_bounds:
    # Disable, enable the out-of-bounds glitch or put it in logic
    off: 50
    on: 0
    logic: 0

  fix_cheats:
    # Fix cheats left in by the devs (not desert skip)
    false: 0
    true: 50

  fix_infinite_ammo:
    # Fix infinite ammo glitch
    false: 50
    true: 0

  fix_atlas_glitch:
    # Fix atlas underflowing stats
    false: 50
    true: 0

  fix_wings_glitch:
    # Fix wings making you invincible in some areas
    false: 50
    true: 0

  shorter_dialogs:
    # Cuts some dialogs
    false: 0
    true: 50

  short_boss_rush:
    # Start boss rush at Metal Magmar, cut enemy HP in half
    false: 0
    true: 50

  ingredienizer:
    # On Shuffles, Full randomizes spell ingredients
    off: 0
    on: 50
    full: 0

  sniffamizer:
    # Off: all vanilla items in sniff spots
    # Shuffle: sniff items shuffled into random sniff spots
    #     Everywhere: add sniff spots to multiworld pool
    off: 0
    shuffle: 50
    everywhere: 0

  sniff_ingredients:
    # Select which items should be used as sniff items
    vanilla_ingredients: 50
    random_ingredients: 0

  callbeadamizer:
    # On Shuffles call bead characters, Full shuffles individual spells
    off: 0
    on: 50
    full: 0

  musicmizer:
    # Randomize music for some rooms
    false: 50
    true: 0

  doggomizer:
    # On shuffles dog per act, Full randomizes dog per screen, Pupdunk gives you Everpupper everywhere
    off: 50
    on: 0
    full: 0
    pupdunk: 0

  turdo_mode:
    # Replace offensive spells by Turd Balls with varying strength and make weapons weak
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  trap_count:
    # Replace some filler items with traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_chance_quake:
    # Sets the chance/ratio of quake traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_chance_poison:
    # Sets the chance/ratio of poison effect traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_chance_confound:
    # Sets the chance/ratio of confound effect traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_chance_hud:
    # Sets the chance/ratio of HUD visibility traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_chance_ohko:
    # Sets the chance/ratio of OHKO (1HP left) traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

Shivers:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  lobby_access:
    # Chooses how keys needed to reach the lobby are placed.
    # - Normal: Keys are placed anywhere
    # - Early: Keys are placed early
    # - Local: Keys are placed locally
    normal: 50
    early: 0
    local: 0

  puzzle_hints_required:
    # If turned on puzzle hints will be available before the corresponding puzzle is required. For example: The Shaman
    # Drums puzzle will be placed after access to the security cameras which give you the solution. Turning this off
    # allows for greater randomization.
    false: 0
    true: 50

  include_information_plaques:
    # Adds Information Plaques as checks.
    # (40 Locations)
    false: 50
    true: 0

  front_door_usable:
    # Adds a key to unlock the front door of the museum.
    false: 50
    true: 0

  elevators_stay_solved:
    # Adds elevators as checks and will remain open upon solving them.
    # (3 Locations)
    false: 0
    true: 50

  early_beth:
    # Beth's body is open at the start of the game. This allows any pot piece to be placed in the slide and early checks on the second half of the final riddle.
    false: 0
    true: 50

  early_lightning:
    # Allows lightning to be captured at any point in the game. You will still need to capture all ten Ixupi for victory.
    # (1 Location)
    false: 50
    true: 0

Slay the Spire:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  character:
    # Enter the internal ID of the character to use.
    #
    #   if you don't know the exact ID to enter with the mod installed go to
    #  `Mods -> Archipelago Multi-world -> config` to view a list of installed modded character IDs.
    #
    #  the downfall characters will only work if you have downfall installed.
    #
    #  Spire Take the Wheel will have your client pick a random character from the list of all your installed characters
    #  including custom ones.
    #
    #  if the chosen character mod is not installed it will default back to 'The Ironclad'
    the_ironclad: 0
    the_silent: 0
    the_defect: 0
    the_watcher: 0
    the_hermit: 0
    the_slime_boss: 0
    the_guardian: 0
    the_hexaghost: 0
    the_champ: 0
    the_gremlins: 0
    the_automaton: 0
    the_snecko: 0
    spire_take_the_wheel: 0
    random: 1

  ascension:
    # What Ascension do you wish to play with.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  final_act:
    # Whether you will need to collect the 3 keys and beat the final act to complete the game.
    false: 50
    true: 0

  downfall:
    # When Downfall is Installed this will switch the played mode to Downfall
    false: 50
    true: 0

SMZ3:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  sm_logic:
    # This option selects what kind of logic to use for item placement inside
    # Super Metroid.
    #
    # Normal - Normal logic includes only what Super Metroid teaches players
    # itself. Anything that's not demonstrated in-game or by the intro cutscenes
    # will not be required here.
    #
    # Hard - Hard logic is based upon the "no major glitches" ruleset and
    # includes most tricks that are considered minor glitches, with some
    # restrictions. You'll want to be somewhat of a Super Metroid veteran for
    # this logic.
    #
    # See https://samus.link/information for required moves.
    normal: 1
    hard: 1

  sword_location:
    # This option decides where the first sword will be placed.
    # Randomized - The sword can be placed anywhere.
    # Early - The sword will be placed in a location accessible from the start of
    # the game.
    # Uncle - The sword will always be placed on Link's Uncle.
    randomized: 50
    early: 0
    uncle: 0

  morph_location:
    # This option decides where the morph ball will be placed.
    # Randomized - The morph ball can be placed anywhere.
    # Early - The morph ball will be placed in a location accessible from the
    # start of the game.
    # Original location - The morph ball will always be placed at its original
    # location.
    randomized: 50
    early: 0
    original: 0

  goal:
    # This option decides what goal is required to finish the randomizer.
    # Defeat Ganon and Mother Brain - Find the required crystals and boss tokens to kill both bosses.
    # Fast Ganon and Defeat Mother Brain - The hole to ganon is open without having to defeat Agahnim in
    #                                      Ganon's Tower and Ganon can be defeat as soon you have the required
    #                                      crystals to make Ganon vulnerable. For keysanity, this mode also removes
    #                                      the Crateria Boss Key requirement from Tourian to allow faster access.
    # All Dungeons and Defeat Mother Brain -  Similar to "Defeat Ganon and Mother Brain", but also requires all dungeons
    #                                         to be beaten including Castle Tower and Agahnim.
    defeatboth: 50
    fastganondefeatmotherbrain: 0
    alldungeonsdefeatmotherbrain: 0

  key_shuffle:
    # This option decides how dungeon items such as keys are shuffled.
    # None - A Link to the Past dungeon items can only be placed inside the
    # dungeon they belong to, and there are no changes to Super Metroid.
    # Keysanity - See https://samus.link/information
    none: 1
    keysanity: 1

  open_tower:
    # The amount of crystals required to be able to enter Ganon's Tower.
    # If this is set to Random, the amount can be found in-game on a sign next to Ganon's Tower.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  ganon_vulnerable:
    # The amount of crystals required to be able to harm Ganon. The amount can be found
    # in-game on a sign near the top of the Pyramid.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 7
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  open_tourian:
    # The amount of boss tokens required to enter Tourian. The amount can be found in-game
    # on a sign above the door leading to the Tourian entrance.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    4: 0
    random: 1
    random-low: 0
    random-high: 0

  spin_jumps_animation:
    # Enable separate space/screw jump animations
    false: 50
    true: 0

  heart_beep_speed:
    # Sets the speed of the heart beep sound in A Link to the Past.
    off: 1
    quarter: 0
    half: 0
    normal: 0
    double: 0

  heart_color:
    # Changes the color of the hearts in the HUD for A Link to the Past.
    red: 1
    green: 1
    blue: 1
    yellow: 1

  quick_swap:
    # When enabled, lets you switch items in ALTTP with L/R
    false: 0
    true: 1

  energy_beep:
    # Toggles the low health energy beep in Super Metroid.
    false: 0
    true: 50

Sonic Adventure 2 Battle:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines the goal of the seed
    # Biolizard: Finish Cannon's Core and defeat the Biolizard and Finalhazard
    # Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone
    # Finalhazard Chaos Emerald Hunt: Find the Seven Chaos Emeralds and reach Green Hill Zone, then defeat Finalhazard
    # Grand Prix: Win every race in Kart Race Mode (all standard levels are disabled)
    # Boss Rush: Beat all of the bosses in the Boss Rush, ending with Finalhazard
    # Cannon's Core Boss Rush: Beat Cannon's Core, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # Boss Rush Chaos Emerald Hunt: Find the Seven Chaos Emeralds, then beat all of the bosses in the Boss Rush, ending with Finalhazard
    # Chaos Chao: Raise a Chaos Chao to win
    biolizard: 50
    chaos_emerald_hunt: 0
    finalhazard_chaos_emerald_hunt: 0
    grand_prix: 0
    boss_rush: 0
    cannons_core_boss_rush: 0
    boss_rush_chaos_emerald_hunt: 0
    chaos_chao: 0

  mission_shuffle:
    # Determines whether missions order will be shuffled per level
    false: 50
    true: 0

  boss_rush_shuffle:
    # Determines how bosses in Boss Rush Mode are shuffled
    # Vanilla: Bosses appear in the Vanilla ordering
    # Shuffled: The same bosses appear, but in a random order
    # Chaos: Each boss is randomly chosen separately (one will always be King Boom Boo)
    # Singularity: One boss is chosen and placed in every slot (one will always be replaced with King Boom Boo)
    vanilla: 50
    shuffled: 0
    chaos: 0
    singularity: 0

  keysanity:
    # Determines whether picking up Chao Keys grants checks
    # (86 Locations)
    false: 50
    true: 0

  whistlesanity:
    # Determines whether whistling at various spots grants checks
    # None: No Whistle Spots grant checks
    # Pipes: Whistling at Pipes grants checks (97 Locations)
    # Hidden: Whistling at Hidden Whistle Spots grants checks (32 Locations)
    # Both: Whistling at both Pipes and Hidden Whistle Spots grants checks (129 Locations)
    none: 50
    pipes: 0
    hidden: 0
    both: 0

  beetlesanity:
    # Determines whether destroying Gold Beetles grants checks
    # (27 Locations)
    false: 50
    true: 0

  omosanity:
    # Determines whether activating Omochao grants checks
    # (192 Locations)
    false: 50
    true: 0

  animalsanity:
    # Determines whether unique counts of animals grant checks.
    # ALL animals must be collected in a single run of a mission to get all checks.
    # (421 Locations)
    false: 50
    true: 0

  kart_race_checks:
    # Determines whether Kart Race Mode grants checks
    # None: No Kart Races grant checks
    # Mini: Each Kart Race difficulty must be beaten only once
    # Full: Every Character must separately beat each Kart Race difficulty
    none: 50
    mini: 0
    full: 0

  logic_difficulty:
    # What set of Upgrade Requirement logic to use
    # Standard: The logic assumes the "intended" usage of Upgrades to progress through levels
    # Hard: Some simple skips or sequence breaks may be required
    standard: 50
    hard: 0

  required_rank:
    # Determines what minimum Rank is required to send a check for a mission
    e: 50
    d: 0
    c: 0
    b: 0
    a: 0

  required_cannons_core_missions:
    # Determines how many Cannon's Core missions must be completed (for Biolizard or Cannon's Core goals)
    # First: Only the first mission must be completed
    # All Active: All active Cannon's Core missions must be completed
    first: 50
    all_active: 0

  emblem_percentage_for_cannons_core:
    # Allows logic to gate the final mission behind a number of Emblems
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 75
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  number_of_level_gates:
    # The number emblem-locked gates which lock sets of levels
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  level_gate_distribution:
    # Determines how levels are distributed between level gate regions
    # Early: Earlier regions will have more levels than later regions
    # Even: Levels will be evenly distributed between all regions
    # Late: Later regions will have more levels than earlier regions
    early: 0
    even: 50
    late: 0

  level_gate_costs:
    # Determines how many emblems are required to unlock level gates
    low: 0
    medium: 0
    high: 50

  max_emblem_cap:
    # Determines the maximum number of emblems that can be in the item pool.
    # If fewer available locations exist in the pool than this number, the number of available locations will be used instead.
    # Gate and Cannon's Core costs will be calculated based off of that number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 1000
    180: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_race_difficulty:
    # Determines the number of Chao Race difficulty levels included. Easier difficulty settings means fewer Chao Race checks
    # None: No Chao Races have checks
    # Beginner: Beginner Races
    # Intermediate: Beginner, Challenge, Hero, and Dark Races
    # Expert: Beginner, Challenge, Hero, Dark and Jewel Races
    none: 50
    beginner: 0
    intermediate: 0
    expert: 0

  chao_karate_difficulty:
    # Determines the number of Chao Karate difficulty levels included. (Note: This setting requires purchase of the "Battle" DLC)
    none: 50
    beginner: 0
    standard: 0
    expert: 0
    super: 0

  chao_stadium_checks:
    # Determines which Chao Stadium activities grant checks
    # All: Each individual race and karate fight grants a check
    # Prize: Only the races which grant Chao Toys grant checks (final race of each Beginner and Jewel cup, 4th, 8th, and
    #        12th Challenge Races, 2nd and 4th Hero and Dark Races, final fight of each Karate difficulty)
    all: 50
    prize: 0

  chao_stats:
    # Determines the highest level in each Chao Stat that grants checks
    # (Swim, Fly, Run, Power)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_stats_frequency:
    # Determines how many levels in each Chao Stat grant checks (up to the maximum set in the `chao_stats` option)
    # `1` means every level is included, `2` means every other level is included, `3` means every third, and so on
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 20
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  chao_stats_stamina:
    # Determines whether Stamina is included in the `chao_stats` option
    false: 50
    true: 0

  chao_stats_hidden:
    # Determines whether the hidden stats (Luck and Intelligence) are included in the `chao_stats` option
    false: 50
    true: 0

  chao_animal_parts:
    # Determines whether giving Chao various animal parts grants checks
    # (73 Locations)
    false: 50
    true: 0

  chao_kindergarten:
    # Determines whether learning the lessons from the Kindergarten Classroom grants checks
    # (WARNING: VERY SLOW)
    # None: No Kindergarten classes have checks
    # Basics: One class from each category (Drawing, Dance, Song, and Instrument) is a check (4 Locations)
    # Full: Every class is a check (23 Locations)
    none: 50
    basics: 0
    full: 0

  black_market_slots:
    # Determines how many multiworld items are available to purchase from the Black Market
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 64
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  black_market_unlock_costs:
    # Determines how many Chao Coins are required to unlock sets of Black Market items
    low: 0
    medium: 50
    high: 0

  black_market_price_multiplier:
    # Determines how many rings the Black Market items cost
    # The base ring costs of items in the Black Market range from 50-100,
    # and are then multiplied by this value
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_starting_chao_eggs:
    # Determines whether the starting Chao eggs in the gardens are random
    false: 0
    true: 50

  chao_entrance_randomization:
    # Determines whether entrances in Chao World are randomized
    false: 50
    true: 0

  junk_fill_percentage:
    # Replace a percentage of non-required emblems in the item pool with random junk items
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_fill_percentage:
    # Replace a percentage of junk items in the item pool with random traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  omochao_trap_weight:
    # Likelihood of receiving a trap which spawns several Omochao around the player
    none: 0
    low: 0
    medium: 50
    high: 0

  timestop_trap_weight:
    # Likelihood of receiving a trap which briefly stops time
    none: 0
    low: 0
    medium: 50
    high: 0

  confusion_trap_weight:
    # Likelihood of receiving a trap which causes the controls to be skewed for a period of time
    none: 0
    low: 0
    medium: 50
    high: 0

  tiny_trap_weight:
    # Likelihood of receiving a trap which causes the player to become tiny
    none: 0
    low: 0
    medium: 50
    high: 0

  gravity_trap_weight:
    # Likelihood of receiving a trap which increases gravity
    none: 0
    low: 0
    medium: 50
    high: 0

  exposition_trap_weight:
    # Likelihood of receiving a trap which tells you the story
    none: 0
    low: 0
    medium: 50
    high: 0

  ice_trap_weight:
    # Likelihood of receiving a trap which makes the world slippery
    none: 0
    low: 0
    medium: 50
    high: 0

  slow_trap_weight:
    # Likelihood of receiving a trap which makes you gotta go slow
    none: 0
    low: 0
    medium: 50
    high: 0

  cutscene_trap_weight:
    # Likelihood of receiving a trap which makes you watch an unskippable cutscene
    none: 0
    low: 0
    medium: 50
    high: 0

  reverse_trap_weight:
    # Likelihood of receiving a trap which reverses your controls
    none: 0
    low: 0
    medium: 50
    high: 0

  pong_trap_weight:
    # Likelihood of receiving a trap which forces you to play a Pong minigame
    none: 0
    low: 0
    medium: 50
    high: 0

  minigame_trap_difficulty:
    # How difficult any Minigame-style traps are
    easy: 0
    medium: 50
    hard: 0

  sadx_music:
    # Whether the randomizer will include Sonic Adventure DX Music in the music pool
    # SA2B: Only SA2B music will be played
    # SADX: Only SADX music will be played
    # Both: Both SA2B and SADX music will be played
    # NOTE: This option requires the player to own a PC copy of SADX and to follow the addition steps in the setup guide.
    sa2b: 50
    sadx: 0
    both: 0

  music_shuffle:
    # What type of Music Shuffle is used
    # None: No music is shuffled.
    # Levels: Level music is shuffled.
    # Full: Level, Menu, and Additional music is shuffled.
    # Singularity: Level, Menu, and Additional music is all replaced with a single random song.
    none: 50
    levels: 0
    full: 0
    singularity: 0

  voice_shuffle:
    # What type of Voice Shuffle is used
    # None: No voices are shuffled.
    # Shuffled: Voices are shuffled.
    # Rude: Voices are shuffled, but some are replaced with rude words.
    # Chao: All voices are replaced with chao sounds.
    # Singularity: All voices are replaced with a single random voice.
    none: 50
    shuffled: 0
    rude: 0
    chao: 0
    singularity: 0

  narrator:
    # Which menu narrator is used
    default: 50
    shadow: 0
    rouge: 0
    eggman: 0
    maria: 0
    secretary: 0
    omochao: 0
    amy: 0
    tails: 0
    knuckles: 0
    sonic: 0

  ring_loss:
    # How taking damage is handled
    # Classic: You lose all of your rings when hit
    # Modern: You lose 20 rings when hit
    # OHKO: You die immediately when hit (NOTE: Some Hard Logic tricks may require damage boosts!)
    classic: 50
    modern: 0
    ohko: 0

  speed_mission_count:
    # The number of active missions to include for Sonic and Shadow stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  speed_mission_2:
    # Determines if the Sonic and Shadow 100 rings missions should be included
    false: 0
    true: 50

  speed_mission_3:
    # Determines if the Sonic and Shadow lost chao missions should be included
    false: 0
    true: 50

  speed_mission_4:
    # Determines if the Sonic and Shadow time trial missions should be included
    false: 0
    true: 50

  speed_mission_5:
    # Determines if the Sonic and Shadow hard missions should be included
    false: 0
    true: 50

  mech_mission_count:
    # The number of active missions to include for Tails and Eggman stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  mech_mission_2:
    # Determines if the Tails and Eggman 100 rings missions should be included
    false: 0
    true: 50

  mech_mission_3:
    # Determines if the Tails and Eggman lost chao missions should be included
    false: 0
    true: 50

  mech_mission_4:
    # Determines if the Tails and Eggman time trial missions should be included
    false: 0
    true: 50

  mech_mission_5:
    # Determines if the Tails and Eggman hard missions should be included
    false: 0
    true: 50

  hunt_mission_count:
    # The number of active missions to include for Knuckles and Rouge stages
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  hunt_mission_2:
    # Determines if the Knuckles and Rouge 100 rings missions should be included
    false: 0
    true: 50

  hunt_mission_3:
    # Determines if the Knuckles and Rouge lost chao missions should be included
    false: 0
    true: 50

  hunt_mission_4:
    # Determines if the Knuckles and Rouge time trial missions should be included
    false: 0
    true: 50

  hunt_mission_5:
    # Determines if the Knuckles and Rouge hard missions should be included
    false: 0
    true: 50

  kart_mission_count:
    # The number of active missions to include for Route 101 and 280
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  kart_mission_2:
    # Determines if the Route 101 and 280 100 rings missions should be included
    false: 0
    true: 50

  kart_mission_3:
    # Determines if the Route 101 and 280 avoid cars missions should be included
    false: 0
    true: 50

  kart_mission_4:
    # Determines if the Route 101 and 280 avoid walls missions should be included
    false: 0
    true: 50

  kart_mission_5:
    # Determines if the Route 101 and 280 hard missions should be included
    false: 0
    true: 50

  cannons_core_mission_count:
    # The number of active missions to include for Cannon's Core
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  cannons_core_mission_2:
    # Determines if the Cannon's Core 100 rings mission should be included
    false: 0
    true: 50

  cannons_core_mission_3:
    # Determines if the Cannon's Core lost chao mission should be included
    false: 0
    true: 50

  cannons_core_mission_4:
    # Determines if the Cannon's Core time trial mission should be included
    false: 0
    true: 50

  cannons_core_mission_5:
    # Determines if the Cannon's Core hard mission should be included
    false: 0
    true: 50

  ring_link:
    # Whether your in-level ring gain/loss is linked to other players
    false: 0
    true: 1

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Starcraft 2:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  game_difficulty:
    # The difficulty of the campaign, affects enemy AI, starting units, and game speed.
    #
    # For those unfamiliar with the Archipelago randomizer, the recommended settings are one difficulty level
    # lower than the vanilla game
    casual: 0
    normal: 50
    hard: 0
    brutal: 0

  game_speed:
    # Optional setting to override difficulty-based game speed.
    default: 50
    slower: 0
    slow: 0
    normal: 0
    fast: 0
    faster: 0

  disable_forced_camera:
    # Prevents the game from moving or locking the camera without the player's consent.
    false: 50
    true: 0

  skip_cutscenes:
    # Skips all cutscenes and prevents dialog from blocking progress.
    false: 50
    true: 0

  all_in_map:
    # Determines what version of All-In (WoL final map) that will be generated for the campaign.
    ground: 50
    air: 0

  mission_order:
    # Determines the order the missions are played in.  The last three mission orders end in a random mission.
    # Vanilla (83 total if all campaigns enabled): Keeps the standard mission order and branching from the vanilla Campaigns.
    # Vanilla Shuffled (83 total if all campaigns enabled): Keeps same branching paths from the vanilla Campaigns but randomizes the order of missions within.
    # Mini Campaign (47 total if all campaigns enabled): Shorter version of the campaign with randomized missions and optional branches.
    # Medium Grid (16):  A 4x4 grid of random missions.  Start at the top-left and forge a path towards bottom-right mission to win.
    # Mini Grid (9):  A 3x3 version of Grid.  Complete the bottom-right mission to win.
    # Blitz (12):  12 random missions that open up very quickly.  Complete the bottom-right mission to win.
    # Gauntlet (7): Linear series of 7 random missions to complete the campaign.
    # Mini Gauntlet (4): Linear series of 4 random missions to complete the campaign.
    # Tiny Grid (4): A 2x2 version of Grid.  Complete the bottom-right mission to win.
    # Grid (variable): A grid that will resize to use all non-excluded missions.  Corners may be omitted to make the grid more square.  Complete the bottom-right mission to win.
    vanilla: 50
    vanilla_shuffled: 0
    mini_campaign: 0
    medium_grid: 0
    mini_grid: 0
    blitz: 0
    gauntlet: 0
    mini_gauntlet: 0
    tiny_grid: 0
    grid: 0

  maximum_campaign_size:
    # Sets an upper bound on how many missions to include when a variable-size mission order is selected.
    # If a set-size mission order is selected, does nothing.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 83
    83: 50
    random: 0
    random-low: 0
    random-high: 0

  grid_two_start_positions:
    # If turned on and 'grid' mission order is selected, removes a mission from the starting
    # corner sets the adjacent two missions as the starter missions.
    false: 50
    true: 0

  player_color_terran_raynor:
    # Determines in-game team color for playable Raynor's Raiders (Terran) factions.
    white: 0
    red: 0
    blue: 0
    teal: 0
    purple: 0
    yellow: 0
    orange: 0
    green: 0
    light_pink: 0
    violet: 0
    light_grey: 0
    dark_green: 0
    brown: 0
    light_green: 0
    dark_grey: 0
    pink: 0
    rainbow: 0
    default: 50

  player_color_protoss:
    # Determines in-game team color for playable Protoss factions.
    white: 0
    red: 0
    blue: 0
    teal: 0
    purple: 0
    yellow: 0
    orange: 0
    green: 0
    light_pink: 0
    violet: 0
    light_grey: 0
    dark_green: 0
    brown: 0
    light_green: 0
    dark_grey: 0
    pink: 0
    rainbow: 0
    default: 50

  player_color_zerg:
    # Determines in-game team color for playable Zerg factions before Kerrigan becomes Primal Kerrigan.
    white: 0
    red: 0
    blue: 0
    teal: 0
    purple: 0
    yellow: 0
    orange: 0
    green: 0
    light_pink: 0
    violet: 0
    light_grey: 0
    dark_green: 0
    brown: 0
    light_green: 0
    dark_grey: 0
    pink: 0
    rainbow: 0
    default: 50

  player_color_zerg_primal:
    # Determines in-game team color for playable Zerg factions after Kerrigan becomes Primal Kerrigan.
    white: 0
    red: 0
    blue: 0
    teal: 0
    purple: 0
    yellow: 0
    orange: 0
    green: 0
    light_pink: 0
    violet: 0
    light_grey: 0
    dark_green: 0
    brown: 0
    light_green: 0
    dark_grey: 0
    pink: 0
    rainbow: 0
    default: 50

  enable_wol_missions:
    # Enables missions from main Wings of Liberty campaign.
    false: 0
    true: 50

  enable_prophecy_missions:
    # Enables missions from Prophecy mini-campaign.
    false: 0
    true: 50

  enable_hots_missions:
    # Enables missions from Heart of the Swarm campaign.
    false: 0
    true: 50

  enable_lotv_prologue_missions:
    # Enables missions from Prologue campaign.
    false: 0
    true: 50

  enable_lotv_missions:
    # Enables missions from Legacy of the Void campaign.
    false: 0
    true: 50

  enable_epilogue_missions:
    # Enables missions from Epilogue campaign.
    # These missions are considered very hard.
    #
    # Enabling Wings of Liberty, Heart of the Swarm and Legacy of the Void is strongly recommended in order to play Epilogue.
    # Not recommended for short mission orders.
    # See also: Exclude Very Hard Missions
    false: 0
    true: 50

  enable_nco_missions:
    # Enables missions from Nova Covert Ops campaign.
    #
    # Note: For best gameplay experience it's recommended to also enable Wings of Liberty campaign.
    false: 0
    true: 50

  shuffle_campaigns:
    # Shuffles the missions between campaigns if enabled.
    # Only available for Vanilla Shuffled and Mini Campaign mission order
    false: 0
    true: 50

  shuffle_no_build:
    # Determines if the no-build missions are included in the shuffle.
    # If turned off, the no-build missions will not appear. Has no effect for Vanilla mission order.
    false: 0
    true: 50

  starter_unit:
    # Unlocks a random unit at the start of the game.
    #
    # Off: No units are provided, the first unit must be obtained from the randomizer
    # Balanced: A unit that doesn't give the player too much power early on is given
    # Any Starter Unit: Any starter unit can be given
    off: 50
    balanced: 0
    any_starter_unit: 0

  required_tactics:
    # Determines the maximum tactical difficulty of the world (separate from mission difficulty).  Higher settings
    # increase randomness.
    #
    # Standard:  All missions can be completed with good micro and macro.
    # Advanced:  Completing missions may require relying on starting units and micro-heavy units.
    # No Logic:  Units and upgrades may be placed anywhere.  LIKELY TO RENDER THE RUN IMPOSSIBLE ON HARDER DIFFICULTIES!
    #            Locks Grant Story Tech option to true.
    standard: 50
    advanced: 0
    no_logic: 0

  ensure_generic_items:
    # Specifies a minimum percentage of the generic item pool that will be present for the slot.
    # The generic item pool is the pool of all generically useful items after all exclusions.
    # Generically-useful items include: Worker upgrades, Building upgrades, economy upgrades,
    # Mercenaries, Kerrigan levels and abilities, and Spear of Adun abilities
    # Increasing this percentage will make units less common.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  min_number_of_upgrades:
    # Set a minimum to the number of upgrades a unit/structure can have.
    # Note that most units have 4 or 6 upgrades.
    # If a unit has fewer upgrades than the minimum, it will have all of its upgrades.
    #
    # Doesn't affect shared unit upgrades.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  max_number_of_upgrades:
    # Set a maximum to the number of upgrades a unit/structure can have. -1 is used to define unlimited.
    # Note that most unit have 4 to 6 upgrades.
    #
    # Doesn't affect shared unit upgrades.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 12
    -1: 50
    random: 0
    random-low: 0
    random-high: 0

  generic_upgrade_missions:
    # Determines the percentage of missions in the mission order that must be completed before
    # level 1 of all weapon and armor upgrades is unlocked.  Level 2 upgrades require double the amount of missions,
    # and level 3 requires triple the amount.  The required amounts are always rounded down.
    # If set to 0, upgrades are instead added to the item pool and must be found to be used.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  generic_upgrade_research:
    # Determines how weapon and armor upgrades affect missions once unlocked.
    #
    # Vanilla:  Upgrades must be researched as normal.
    # Auto In No-Build:  In No-Build missions, upgrades are automatically researched.
    # In all other missions, upgrades must be researched as normal.
    # Auto In Build:  In No-Build missions, upgrades are unavailable as normal.
    # In all other missions, upgrades are automatically researched.
    # Always Auto:  Upgrades are automatically researched in all missions.
    vanilla: 50
    auto_in_no_build: 0
    auto_in_build: 0
    always_auto: 0

  generic_upgrade_items:
    # Determines how weapon and armor upgrades are split into items.  All options produce 3 levels of each item.
    # Does nothing if upgrades are unlocked by completed mission counts.
    #
    # Individual Items:  All weapon and armor upgrades are each an item,
    # resulting in 18 total upgrade items for Terran and 15 total items for Zerg and Protoss each.
    # Bundle Weapon And Armor:  All types of weapon upgrades are one item per race,
    # and all types of armor upgrades are one item per race,
    # resulting in 18 total items.
    # Bundle Unit Class:  Weapon and armor upgrades are merged,
    # but upgrades are bundled separately for each race:
    # Infantry, Vehicle, and Starship upgrades for Terran (9 items),
    # Ground and Flyer upgrades for Zerg (6 items),
    # Ground and Air upgrades for Protoss (6 items),
    # resulting in 21 total items.
    # Bundle All:  All weapon and armor upgrades are one item per race,
    # resulting in 9 total items.
    individual_items: 50
    bundle_weapon_and_armor: 0
    bundle_unit_class: 0
    bundle_all: 0

  kerrigan_presence:
    # Determines whether Kerrigan is playable outside of missions that require her.
    #
    # Vanilla: Kerrigan is playable as normal, appears in the same missions as in vanilla game.
    # Not Present:  Kerrigan is not playable, unless the mission requires her to be present.  Other hero units stay playable,
    #     and locations normally requiring Kerrigan can be checked by any unit.
    #     Kerrigan level items, active abilities and passive abilities affecting her will not appear.
    #     In missions where the Kerrigan unit is required, story abilities are given in same way as Grant Story Tech is set to true
    # Not Present And No Passives:  In addition to the above, Kerrigan's passive abilities affecting other units (such as Twin Drones) will not appear.
    #
    # Note: Always set to "Not Present" if Heart of the Swarm campaign is disabled.
    vanilla: 50
    not_present: 0
    not_present_and_no_passives: 0

  kerrigan_levels_per_mission_completed:
    # Determines how many levels Kerrigan gains when a mission is beaten.
    #
    # NOTE: Setting this too low can result in generation failures if The Infinite Cycle or Supreme are in the mission pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 20
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  kerrigan_levels_per_mission_completed_cap:
    # Limits how many total levels Kerrigan can gain from beating missions.  This does not affect levels gained from items.
    # Set to -1 to disable this limit.
    #
    # NOTE: The following missions have these level requirements:
    # Supreme: 35
    # The Infinite Cycle: 70
    # See Grant Story Levels for more details.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 140
    -1: 50
    random: 0
    random-low: 0
    random-high: 0

  kerrigan_level_item_sum:
    # Determines the sum of the level items in the world.  This does not affect levels gained from beating missions.
    #
    # NOTE: The following missions have these level requirements:
    # Supreme: 35
    # The Infinite Cycle: 70
    # See Grant Story Levels for more details.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 140
    70: 50
    random: 0
    random-low: 0
    random-high: 0

  kerrigan_level_item_distribution:
    # Determines the amount and size of Kerrigan level items.
    #
    # Vanilla:  Uses the distribution in the vanilla campaign.
    # This entails 32 individual levels and 6 packs of varying sizes.
    # This distribution always adds up to 70, ignoring the Level Item Sum setting.
    # Smooth:  Uses a custom, condensed distribution of 10 items between sizes 4 and 10,
    # intended to fit more levels into settings with little room for filler while keeping some variance in level gains.
    # This distribution always adds up to 70, ignoring the Level Item Sum setting.
    # Size 70:  Uses items worth 70 levels each.
    # Size 35:  Uses items worth 35 levels each.
    # Size 14:  Uses items worth 14 levels each.
    # Size 10:  Uses items worth 10 levels each.
    # Size 7:  Uses items worth 7 levels each.
    # Size 5:  Uses items worth 5 levels each.
    # Size 2:  Uses items worth 2 level eachs.
    # Size 1:  Uses individual levels.  As there are not enough locations in the game for this distribution,
    # this will result in a greatly reduced total level, and is likely to remove many other items.
    vanilla: 0
    smooth: 50
    size_70: 0
    size_35: 0
    size_14: 0
    size_10: 0
    size_7: 0
    size_5: 0
    size_2: 0
    size_1: 0

  kerrigan_total_level_cap:
    # Limits how many total levels Kerrigan can gain from any source.  Depending on your other settings,
    # there may be more levels available in the world, but they will not affect Kerrigan.
    # Set to -1 to disable this limit.
    #
    # NOTE: The following missions have these level requirements:
    # Supreme: 35
    # The Infinite Cycle: 70
    # See Grant Story Levels for more details.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is -1
    # Maximum value is 140
    -1: 50
    random: 0
    random-low: 0
    random-high: 0

  start_primary_abilities:
    # Number of Primary Abilities (Kerrigan Tier 1, 2, and 4) to start the game with.
    # If set to 4, a Tier 7 ability is also included.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 4
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  kerrigan_primal_status:
    # Determines when Kerrigan appears in her Primal Zerg form.
    # This greatly increases her energy regeneration.
    #
    # Vanilla:  Kerrigan is human in missions that canonically appear before The Crucible,
    # and zerg thereafter.
    # Always Zerg:  Kerrigan is always zerg.
    # Always Human:  Kerrigan is always human.
    # Level 35:  Kerrigan is human until reaching level 35, and zerg thereafter.
    # Half Completion:  Kerrigan is human until half of the missions in the world are completed,
    # and zerg thereafter.
    # Item:  Kerrigan's Primal Form is an item. She is human until it is found, and zerg thereafter.
    vanilla: 50
    always_zerg: 0
    always_human: 0
    level_35: 0
    half_completion: 0
    item: 0

  spear_of_adun_presence:
    # Determines in which missions Spear of Adun calldowns will be available.
    # Affects only abilities used from Spear of Adun top menu.
    #
    # Not Present: Spear of Adun calldowns are unavailable.
    # LotV Protoss: Spear of Adun calldowns are only available in LotV main campaign
    # Protoss: Spear od Adun calldowns are available in any Protoss mission
    # Everywhere: Spear od Adun calldowns are available in any mission of any race
    not_present: 0
    lotv_protoss: 50
    protoss: 0
    everywhere: 0

  spear_of_adun_present_in_no_build:
    # Determines if Spear of Adun calldowns are available in no-build missions.
    #
    # If turned on, Spear of Adun calldown powers are available in missions specified under "Spear of Adun Presence".
    # If turned off, Spear of Adun calldown powers are unavailable in all no-build missions
    false: 50
    true: 0

  spear_of_adun_autonomously_cast_ability_presence:
    # Determines availability of Spear of Adun powers, that are autonomously cast.
    # Affects abilities like Reconstruction Beam or Overwatch
    #
    # Not Presents: Autocasts are not available.
    # LotV Protoss: Spear of Adun autocasts are only available in LotV main campaign
    # Protoss: Spear od Adun autocasts are available in any Protoss mission
    # Everywhere: Spear od Adun autocasts are available in any mission of any race
    not_present: 0
    lotv_protoss: 50
    protoss: 0
    everywhere: 0

  spear_of_adun_autonomously_cast_present_in_no_build:
    # Determines if Spear of Adun autocasts are available in no-build missions.
    #
    # If turned on, Spear of Adun autocasts are available in missions specified under "Spear of Adun Autonomously Cast Powers Presence".
    # If turned off, Spear of Adun autocasts are unavailable in all no-build missions
    false: 50
    true: 0

  grant_story_tech:
    # If set true, grants special tech required for story mission completion for duration of the mission.
    # Otherwise, you need to find these tech by a normal means as items.
    # Affects story missions like Back in the Saddle and Supreme
    #
    # Locked to true if Required Tactics is set to no logic.
    false: 50
    true: 0

  grant_story_levels:
    # If enabled, grants Kerrigan the required minimum levels for the following missions:
    # Supreme: 35
    # The Infinite Cycle: 70
    # The bonus levels only apply during the listed missions, and can exceed the Total Level Cap.
    #
    # If disabled, either of these missions is included, and there are not enough levels in the world, generation may fail.
    # To prevent this, either increase the amount of levels in the world, or enable this option.
    #
    # If disabled and Required Tactics is set to no logic, this option is forced to Minimum.
    #
    # Disabled: Kerrigan does not get bonus levels for these missions,
    #           instead the levels must be gained from items or beating missions.
    # Additive: Kerrigan gains bonus levels equal to the mission's required level.
    # Minimum: Kerrigan is either at her real level, or at the mission's required level,
    #          depending on which is higher.
    disabled: 0
    additive: 0
    minimum: 50

  take_over_ai_allies:
    # On maps supporting this feature allows you to take control over an AI Ally.
    false: 50
    true: 0

  locked_items:
    # Guarantees that these items will be unlockable
    []

  excluded_items:
    # Guarantees that these items will not be unlockable
    []

  excluded_missions:
    # Guarantees that these missions will not appear in the campaign
    # Doesn't apply to vanilla mission order.
    # It may be impossible to build a valid campaign if too many missions are excluded.
    []

  exclude_very_hard_missions:
    # Excludes Very Hard missions outside of Epilogue campaign (All-In, Salvation, and all Epilogue missions are considered Very Hard).
    # Doesn't apply to "Vanilla" mission order.
    #
    # Default: Not excluded for mission orders "Vanilla Shuffled" or "Grid" with Maximum Campaign Size >= 20,
    #          excluded for any other order
    # Yes: Non-Epilogue Very Hard missions are excluded and won't be generated
    # No: Non-Epilogue Very Hard missions can appear normally. Not recommended for too short mission orders.
    #
    # See also: Excluded Missions, Enable Epilogue Missions, Maximum Campaign Size
    default: 50
    true: 0
    false: 0

  nco_items:
    # If turned on, the equipment upgrades from Nova Covert Ops may be present in the world.
    #
    # If Nova Covert Ops campaign is enabled, this option is locked to be turned on.
    false: 0
    true: 50

  bw_items:
    # If turned on, returning items from StarCraft: Brood War may appear in the world.
    false: 0
    true: 50

  ext_items:
    # If turned on, original items that did not appear in Campaign mode may appear in the world.
    false: 0
    true: 50

  vanilla_locations:
    # Enables or disables item rewards for completing vanilla objectives.
    # Vanilla objectives are bonus objectives from the vanilla game,
    # along with some additional objectives to balance the missions.
    # Enable these locations for a balanced experience.
    #
    # Enabled: All locations fitting into this do their normal rewards
    # Resources: Forces these locations to contain Starting Resources
    # Disabled: Removes item rewards from these locations.
    #
    # Note: Individual locations subject to plando are always enabled, so the plando can be placed properly.
    # See also: Excluded Locations, Item Plando (https://archipelago.gg/tutorial/Archipelago/plando/en#item-plando)
    enabled: 50
    resources: 0
    disabled: 0

  extra_locations:
    # Enables or disables item rewards for mission progress and minor objectives.
    # This includes mandatory mission objectives,
    # collecting reinforcements and resource pickups,
    # destroying structures, and overcoming minor challenges.
    # Enables these locations to add more checks and items to your world.
    #
    # Enabled: All locations fitting into this do their normal rewards
    # Resources: Forces these locations to contain Starting Resources
    # Disabled: Removes item rewards from these locations.
    #
    # Note: Individual locations subject to plando are always enabled, so the plando can be placed properly.
    # See also: Excluded Locations, Item Plando (https://archipelago.gg/tutorial/Archipelago/plando/en#item-plando)
    enabled: 50
    resources: 0
    disabled: 0

  challenge_locations:
    # Enables or disables item rewards for completing challenge tasks.
    # Challenges are tasks that are more difficult than completing the mission, and are often based on achievements.
    # You might be required to visit the same mission later after getting stronger in order to finish these tasks.
    # Enable these locations to increase the difficulty of completing the multiworld.
    #
    # Enabled: All locations fitting into this do their normal rewards
    # Resources: Forces these locations to contain Starting Resources
    # Disabled: Removes item rewards from these locations.
    #
    # Note: Individual locations subject to plando are always enabled, so the plando can be placed properly.
    # See also: Excluded Locations, Item Plando (https://archipelago.gg/tutorial/Archipelago/plando/en#item-plando)
    enabled: 50
    resources: 0
    disabled: 0

  mastery_locations:
    # Enables or disables item rewards for overcoming especially difficult challenges.
    # These challenges are often based on Mastery achievements and Feats of Strength.
    # Enable these locations to add the most difficult checks to the world.
    #
    # Enabled: All locations fitting into this do their normal rewards
    # Resources: Forces these locations to contain Starting Resources
    # Disabled: Removes item rewards from these locations.
    #
    # Note: Individual locations subject to plando are always enabled, so the plando can be placed properly.
    # See also: Excluded Locations, Item Plando (https://archipelago.gg/tutorial/Archipelago/plando/en#item-plando)
    enabled: 50
    resources: 0
    disabled: 0

  minerals_per_item:
    # Configures how many minerals are given per resource item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 500
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  vespene_per_item:
    # Configures how much vespene gas is given per resource item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 500
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_supply_per_item:
    # Configures how much starting supply per is given per item.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 200
    5: 50
    random: 0
    random-low: 0
    random-high: 0

Stardew Valley:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Goal for this playthrough
    # Community Center: Complete the Community Center
    # Grandpa's Evaluation: 4 lit candles in Grandpa's evaluation
    # Bottom of the Mines: Reach level 120 in the mines
    # Cryptic Note: Complete the quest "Cryptic Note" (Skull Cavern Floor 100)
    # Master Angler: Catch every fish. Adapts to Fishsanity
    # Complete Collection: Complete the museum collection
    # Full House: Get married and have 2 children
    # Greatest Walnut Hunter: Find 130 Golden Walnuts
    # Protector of the Valley: Complete the monster slayer goals. Adapts to Monstersanity
    # Full Shipment: Ship every item. Adapts to Shipsanity
    # Gourmet Chef: Cook every recipe. Adapts to Cooksanity
    # Craft Master: Craft every item
    # Legend: Earn 10 000 000g
    # Mystery of the Stardrops: Find every stardrop
    # Allsanity: Complete every check in your slot
    # Perfection: Attain Perfection
    community_center: 50
    grandpa_evaluation: 0
    bottom_of_the_mines: 0
    cryptic_note: 0
    master_angler: 0
    complete_collection: 0
    full_house: 0
    greatest_walnut_hunter: 0
    protector_of_the_valley: 0
    full_shipment: 0
    gourmet_chef: 0
    craft_master: 0
    legend: 0
    mystery_of_the_stardrops: 0
    allsanity: 0
    perfection: 0

  farm_type:
    # What farm to play on?
    standard: 0
    riverland: 0
    forest: 0
    hill_top: 0
    wilderness: 0
    four_corners: 0
    beach: 0
    random: 50

  starting_money:
    # Amount of gold when arriving at the farm.
    # Set to -1 or unlimited for infinite money
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50000
    random: 0
    random-low: 0
    random-high: 0
    unlimited: 0 # equivalent to -1
    vanilla: 0 # equivalent to 500
    extra: 0 # equivalent to 2000
    rich: 50 # equivalent to 5000
    very rich: 0 # equivalent to 20000
    filthy rich: 0 # equivalent to 50000

  profit_margin:
    # Multiplier over all gold earned in-game by the player.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 400
    random: 0
    random-low: 0
    random-high: 0
    quarter: 0 # equivalent to 25
    half: 0 # equivalent to 50
    normal: 50 # equivalent to 100
    double: 0 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  bundle_randomization:
    # What items are needed for the community center bundles?
    # Vanilla: Standard bundles from the vanilla game
    # Thematic: Every bundle will require random items compatible with their original theme
    # Remixed: Picks bundles at random from thematic, vanilla remixed and new custom ones
    # Shuffled: Every bundle will require random items and follow no particular structure
    vanilla: 0
    thematic: 0
    remixed: 50
    shuffled: 0

  bundle_price:
    # How many items are needed for the community center bundles?
    # Minimum: Every bundle will require only one item
    # Very Cheap: Every bundle will require 2 items fewer than usual
    # Cheap: Every bundle will require 1 item fewer than usual
    # Normal: Every bundle will require the vanilla number of items
    # Expensive: Every bundle will require 1 extra item
    # Very Expensive: Every bundle will require 2 extra items
    # Maximum: Every bundle will require many extra items
    minimum: 0
    very_cheap: 0
    cheap: 0
    normal: 50
    expensive: 0
    very_expensive: 0
    maximum: 0

  entrance_randomization:
    # Should area entrances be randomized?
    # Disabled: No entrance randomization is done
    # Pelican Town: Only doors in the main town area are randomized with each other
    # Non Progression: Only entrances that are always available are randomized with each other
    # Buildings: All entrances that allow you to enter a building are randomized with each other
    # Chaos: Same as "Buildings", but the entrances get reshuffled every single day!
    disabled: 50
    pelican_town: 0
    non_progression: 0
    buildings: 0
    chaos: 0

  season_randomization:
    # Should seasons be randomized?
    # Disabled: Start in Spring with all seasons unlocked.
    # Randomized: Start in a random season and the other 3 must be unlocked randomly.
    # Randomized Not Winter: Same as randomized, but the start season is guaranteed not to be winter.
    # Progressive: Start in Spring and unlock the seasons in their original order.
    disabled: 0
    randomized: 50
    randomized_not_winter: 0
    progressive: 0

  cropsanity:
    # Formerly named "Seed Shuffle"
    # Pierre now sells a random amount of seasonal seeds and Joja sells them without season requirements, but only in huge packs.
    # Disabled: All the seeds are unlocked from the start, there are no location checks for growing and harvesting crops
    # Enabled: Seeds are unlocked as archipelago items, for each seed there is a location check for growing and harvesting that crop
    disabled: 0
    enabled: 50

  backpack_progression:
    # Shuffle the backpack?
    # Vanilla: You can buy backpacks at Pierre's General Store.
    # Progressive: You will randomly find Progressive Backpack upgrades.
    # Early Progressive: Same as progressive, but one backpack will be placed early in the multiworld.
    vanilla: 0
    progressive: 0
    early_progressive: 50

  tool_progression:
    # Shuffle the tool upgrades?
    # Vanilla: Clint will upgrade your tools with metal bars.
    # Progressive: You will randomly find Progressive Tool upgrades.
    # Cheap: Tool Upgrades will cost 2/5th as much
    # Very Cheap: Tool Upgrades will cost 1/5th as much
    vanilla: 0
    progressive: 50
    vanilla_cheap: 0
    vanilla_very_cheap: 0
    progressive_cheap: 0
    progressive_very_cheap: 0

  skill_progression:
    # Shuffle skill levels?
    # Vanilla: Leveling up skills is normal
    # Progressive: Skill levels are unlocked randomly, and earning xp sends checks
    vanilla: 0
    progressive: 50

  building_progression:
    # Shuffle Carpenter Buildings?
    # Vanilla: You can buy each building normally.
    # Progressive: You will receive the buildings and will be able to build the first one of each type for free,
    #     once it is received. If you want more of the same building, it will cost the vanilla price.
    # Cheap: Buildings will cost half as much
    # Very Cheap: Buildings will cost 1/5th as much
    vanilla: 0
    vanilla_cheap: 0
    vanilla_very_cheap: 0
    progressive: 0
    progressive_cheap: 50
    progressive_very_cheap: 0

  festival_locations:
    # Shuffle Festival Activities?
    # Disabled: You do not need to attend festivals
    # Easy: Every festival has checks, but they are easy and usually only require attendance
    # Hard: Festivals have more checks, and many require performing well, not just attending
    disabled: 0
    easy: 50
    hard: 0

  elevator_progression:
    # Shuffle the elevator?
    # Vanilla: Reaching a mineshaft floor unlocks the elevator for it
    # Progressive: You will randomly find Progressive Mine Elevators to go deeper.
    # Progressive from previous floor: Same as progressive, but you cannot use the elevator to check elevator locations.
    #     You must reach elevator floors on your own.
    vanilla: 0
    progressive: 0
    progressive_from_previous_floor: 50

  arcade_machine_locations:
    # Shuffle the arcade machines?
    # Disabled: The arcade machines are not included.
    # Victories: Each Arcade Machine will contain one check on victory
    # Victories Easy: Same as Victories, but both games are made considerably easier.
    # Full Shuffling: The arcade machines will contain multiple checks each, and different buffs that make the game
    #     easier are in the item pool. Junimo Kart has one check at the end of each level.
    #     Journey of the Prairie King has one check after each boss, plus one check for each vendor equipment.
    disabled: 0
    victories: 0
    victories_easy: 0
    full_shuffling: 50

  special_order_locations:
    # Shuffle Special Orders?
    # Disabled: The special orders are not included in the Archipelago shuffling.
    # Board Only: The Special Orders on the board in town are location checks
    # Board and Qi: The Special Orders from Mr Qi's walnut room are checks, in addition to the board in town
    disabled: 0
    board_only: 50
    board_qi: 0

  quest_locations:
    # Include location checks for quests
    # None: No quests are checks
    # Story: Only story quests are checks
    # Number: Story quests and help wanted quests are checks up to the specified amount. Multiple of 7 recommended
    # Out of every 7 help wanted quests, 4 will be item deliveries, and then 1 of each for: Fishing, Gathering and Slaying Monsters.
    # Extra Help wanted quests might be added if current settings don't have enough locations
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 56
    random: 0
    random-low: 0
    random-high: 0
    none: 0 # equivalent to -1
    story: 0 # equivalent to 0
    minimum: 50 # equivalent to 7
    normal: 0 # equivalent to 14
    lots: 0 # equivalent to 28
    maximum: 0 # equivalent to 56

  fishsanity:
    # Locations for catching a fish the first time?
    # None: There are no locations for catching fish
    # Legendaries: Each of the 5 legendary fish are checks, plus the extended family if qi board is turned on
    # Special: A curated selection of strong fish are checks
    # Randomized: A random selection of fish are checks
    # All: Every single fish in the game is a location that contains an item. Pairs well with the Master Angler Goal
    # Exclude Legendaries: Every fish except legendaries
    # Exclude Hard Fish: Every fish under difficulty 80
    # Only Easy Fish: Every fish under difficulty 50
    none: 50
    legendaries: 0
    special: 0
    randomized: 0
    all: 0
    exclude_legendaries: 0
    exclude_hard_fish: 0
    only_easy_fish: 0

  museumsanity:
    # Locations for museum donations?
    # None: There are no locations for donating artifacts and minerals to the museum
    # Milestones: The donation milestones from the vanilla game are checks
    # Randomized: A random selection of minerals and artifacts are checks
    # All: Every single donation is a check
    none: 0
    milestones: 50
    randomized: 0
    all: 0

  monstersanity:
    # Locations for slaying monsters?
    # None: There are no checks for slaying monsters
    # One per category: Every category visible at the adventure guild gives one check
    # One per Monster: Every unique monster gives one check
    # Monster Eradication Goals: The Monster Eradication Goals each contain one check
    # Short Monster Eradication Goals: The Monster Eradication Goals each contain one check, but are reduced by 60%
    # Very Short Monster Eradication Goals: The Monster Eradication Goals each contain one check, but are reduced by 90%
    # Progressive Eradication Goals: The Monster Eradication Goals each contain 5 checks, each 20% of the way
    # Split Eradication Goals: The Monster Eradication Goals are split by monsters, each monster has one check
    none: 0
    one_per_category: 50
    one_per_monster: 0
    goals: 0
    short_goals: 0
    very_short_goals: 0
    progressive_goals: 0
    split_goals: 0

  shipsanity:
    # Locations for shipping items?
    # None: There are no checks for shipping items
    # Crops: Every crop and forageable being shipped is a check
    # Fish: Every fish being shipped is a check except legendaries
    # Full Shipment: Every item in the Collections page is a check
    # Full Shipment With Fish: Every item in the Collections page and every fish is a check
    # Everything: Every item in the game that can be shipped is a check
    none: 50
    crops: 0
    fish: 0
    full_shipment: 0
    full_shipment_with_fish: 0
    everything: 0

  cooksanity:
    # Locations for cooking food?
    # None: There are no checks for cooking
    # Queen of Sauce: Every Queen of Sauce Recipe can be cooked for a check
    # All: Every cooking recipe can be cooked for a check
    none: 50
    queen_of_sauce: 0
    all: 0

  chefsanity:
    # Locations for learning cooking recipes?
    # Vanilla: All cooking recipes are learned normally
    # Queen of Sauce: Every Queen of sauce episode is a check, all queen of sauce recipes are items
    # Purchases: Every purchasable recipe is a check
    # Friendship: Recipes obtained from friendship are checks
    # Skills: Recipes obtained from skills are checks
    # All: Learning every cooking recipe is a check
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    random: 0
    random-low: 0
    random-high: 0
    none: 50 # equivalent to 0
    queen_of_sauce: 0 # equivalent to 1
    purchases: 0 # equivalent to 2
    qos_and_purchases: 0 # equivalent to 3
    skills: 0 # equivalent to 4
    friendship: 0 # equivalent to 8
    all: 0 # equivalent to 15

  craftsanity:
    # Checks for crafting items?
    # If enabled, all recipes purchased in shops will be checks as well.
    # Recipes obtained from other sources will depend on related archipelago settings
    none: 50
    all: 0

  friendsanity:
    # Shuffle Friendships?
    # None: Friendship hearts are earned normally
    # Bachelors: Hearts with bachelors are shuffled
    # Starting NPCs: Hearts for NPCs available immediately are checks
    # All: Hearts for all npcs are checks, including Leo, Kent, Sandy, etc
    # All With Marriage: Hearts for all npcs are checks, including romance hearts up to 14 when applicable
    none: 50
    bachelors: 0
    starting_npcs: 0
    all: 0
    all_with_marriage: 0

  friendsanity_heart_size:
    # If using friendsanity, how many hearts are received per heart item, and how many hearts must be earned to send a check
    # A higher value will lead to fewer heart items in the item pool, reducing bloat
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 8
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  movement_buff_number:
    # Number of movement speed buffs to the player that exist as items in the pool.
    # Each movement speed buff is a +25% multiplier that stacks additively
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  luck_buff_number:
    # Number of luck buffs to the player that exist as items in the pool.
    # Each luck buff is a bonus to daily luck of 0.025
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 12
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  exclude_ginger_island:
    # Exclude Ginger Island?
    # This option will forcefully exclude everything related to Ginger Island from the slot.
    # If you pick a goal that requires Ginger Island, you cannot exclude it and it will get included anyway
    false: 50
    true: 0

  trap_items:
    # When rolling filler items, including resource packs, the game can also roll trap items.
    # Trap items are negative items that cause problems or annoyances for the player
    # This setting is for choosing if traps will be in the item pool, and if so, how punishing they will be.
    no_traps: 0
    easy: 0
    medium: 50
    hard: 0
    hell: 0
    nightmare: 0

  multiple_day_sleep_enabled:
    # Enable the ability to sleep automatically for multiple days straight?
    false: 0
    true: 50

  multiple_day_sleep_cost:
    # How much gold it will cost to use MultiSleep. You will have to pay that amount for each day skipped.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 200
    random: 0
    random-low: 0
    random-high: 0
    free: 50 # equivalent to 0
    cheap: 0 # equivalent to 10
    medium: 0 # equivalent to 25
    expensive: 0 # equivalent to 50
    very expensive: 0 # equivalent to 100

  experience_multiplier:
    # How fast you want to earn skill experience.
    # A lower setting mean less experience.
    # A higher setting means more experience.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 800
    random: 0
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 50
    vanilla: 0 # equivalent to 100
    double: 50 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  friendship_multiplier:
    # How fast you want to earn friendship points with villagers.
    # A lower setting mean less friendship per action.
    # A higher setting means more friendship per action.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 800
    random: 0
    random-low: 0
    random-high: 0
    half: 0 # equivalent to 50
    vanilla: 0 # equivalent to 100
    double: 50 # equivalent to 200
    triple: 0 # equivalent to 300
    quadruple: 0 # equivalent to 400

  debris_multiplier:
    # How much debris will spawn on the player's farm?
    # Vanilla: debris spawns normally
    # Half: debris will spawn at half the normal rate
    # Quarter: debris will spawn at one quarter of the normal rate
    # None: No debris will spawn on the farm, ever
    # Start Clear: debris will spawn at the normal rate, but the farm will be completely clear when starting the game
    vanilla: 0
    half: 50
    quarter: 0
    none: 0
    start_clear: 0

  quick_start:
    # Do you want the quick start package? You will get a few items to help early game automation,
    # so you can use the multiple day sleep at its maximum.
    false: 0
    true: 50

  gifting:
    # Do you want to enable gifting items to and from other Archipelago slots?
    # Items can only be sent to games that also support gifting
    false: 0
    true: 50

  mods:
    # List of mods that will be included in the shuffling.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Subnautica:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  swim_rule:
    # What logic considers ok swimming distances.
    # Easy: +200 depth from any max vehicle depth.
    # Normal: +400 depth from any max vehicle depth.
    # Warning: Normal can expect you to death run to a location (No viable return trip).
    # Hard: +600 depth from any max vehicle depth.
    # Warning: Hard may require bases, deaths, glitches, multi-tank inventory or other depth extending means.
    # Items: Expected depth is extended by items like seaglide, ultra glide fins and capacity tanks.
    easy: 50
    normal: 0
    hard: 0
    items_easy: 0
    items_normal: 0
    items_hard: 0

  early_seaglide:
    # Make sure 2 of the Seaglide Fragments are available in or near the Safe Shallows (Sphere 1 Locations).
    false: 0
    true: 50

  free_samples:
    # Get free items with your blueprints.
    # Items that can go into your inventory are awarded when you unlock their blueprint through Archipelago.
    false: 50
    true: 0

  goal:
    # Goal to complete.
    # Launch: Leave the planet.
    # Free: Disable quarantine.
    # Infected: Reach maximum infection level.
    # Drive: Repair the Aurora's Drive Core
    launch: 50
    free: 0
    infected: 0
    drive: 0

  creature_scans:
    # Place items on specific, randomly chosen, creature scans.
    # Warning: Includes aggressive Leviathans.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  creature_scan_logic:
    # By default (Stasis), aggressive Creature Scans are logically expected only with a Stasis Rifle.
    # Containment: Removes Stasis Rifle as expected solution and expects Alien Containment instead.
    # Either: Creatures may be expected to be scanned via Stasis Rifle or Containment, whichever is found first.
    # None: Aggressive Creatures are assumed to not need any tools to scan.
    # Removed: No Creatures needing Stasis or Containment will be in the pool at all.
    #
    # Note: Containment, Either and None adds Cuddlefish as an option for scans.
    # Note: Stasis, Either and None adds unhatchable aggressive species, such as Warper.
    # Note: This is purely a logic expectation, and does not affect gameplay, only placement.
    stasis: 50
    containment: 0
    either: 0
    none: 0
    removed: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    # Note: can be toggled via in-game console command "deathlink".
    false: 0
    true: 1

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  filler_items_distribution:
    # Random chance weights of various filler resources that can be obtained.
    # Available items: "Copper Ore", "Crystalline Sulfur", "Diamond", "Gold", "Kyanite", "Lead", "Lithium", "Magnetite", "Nickel Ore", "Reactor Rod", "Ruby", "Salt Deposit", "Silver Ore", "Titanium"
    Copper Ore: 1
    Crystalline Sulfur: 1
    Diamond: 1
    Gold: 1
    Kyanite: 1
    Lead: 1
    Lithium: 1
    Magnetite: 1
    Nickel Ore: 1
    Reactor Rod: 1
    Ruby: 1
    Salt Deposit: 1
    Silver Ore: 1
    Titanium: 1

Super Mario 64:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  area_rando:
    # Randomize Entrances
    off: 50
    courses_only: 0
    courses_and_secrets_separate: 0
    courses_and_secrets: 0

  buddy_checks:
    # Bob-omb Buddies are checks, Cannon Unlocks are items
    false: 50
    true: 0

  exclamation_boxes:
    # Include 1Up Exclamation Boxes during randomization.
    # Adds 29 locations to the pool.
    off: 50
    1ups_only: 0

  progressive_keys:
    # Keys will first grant you access to the Basement, then to the Second Floor
    false: 0
    true: 50

  enable_coin_stars:
    # Disable to Ignore 100 Coin Stars. You can still collect them, but they don't do anything.
    # Removes 15 locations from the pool.
    false: 0
    true: 50

  enable_move_rando:
    # Mario is unable to perform some actions until a corresponding item is picked up.
    # This option is incompatible with builds using a 'nomoverando' branch.
    # Specific actions to randomize can be specified in the YAML.
    false: 50
    true: 0

  move_rando_actions:
    # Which actions to randomize when Move Randomizer is enabled
    [
      "Triple Jump",
      "Long Jump",
      "Backflip",
      "Side Flip",
      "Wall Kick",
      "Dive",
      "Ground Pound",
      "Kick",
      "Climb",
      "Ledge Grab",
    ]

  strict_cap_requirements:
    # If disabled, Stars that expect special caps may have to be acquired without the caps
    false: 0
    true: 50

  strict_cannon_requirements:
    # If disabled, Stars that expect cannons may have to be acquired without them.
    # Has no effect if Buddy Checks and Move Randomizer are disabled
    false: 0
    true: 50

  strict_move_requirements:
    # If disabled, Stars that expect certain moves may have to be acquired without them. Only makes a difference
    # if Move Randomization is enabled
    false: 0
    true: 50

  amount_of_stars:
    # How many stars exist.
    # If there aren't enough locations to hold the given total, the total will be reduced.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 35
    # Maximum value is 120
    120: 50
    random: 0
    random-low: 0
    random-high: 0

  first_bowser_star_door_cost:
    # What percent of the total stars are required at the Star Door to Bowser in the Dark World
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 40
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  basement_star_door_cost:
    # What percent of the total stars are required at the Star Door in the Basement
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 50
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  second_floor_star_door_cost:
    # What percent of the total stars are required to access the third floor
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 50
    random: 0
    random-low: 0
    random-high: 0

  mips1_cost:
    # What percent of the total stars are required to spawn MIPS the first time
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 35
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  mips2_cost:
    # What percent of the total stars are required to spawn MIPS the second time.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 70
    42: 50
    random: 0
    random-low: 0
    random-high: 0

  stars_to_finish:
    # What percent of the total stars are required at the infinite stairs
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 90
    58: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  completion_type:
    # Set goal for game completion
    last_bowser_stage: 50
    all_bowser_stages: 0

Super Mario World:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  goal:
    # Determines the goal of the seed
    # Bowser: Defeat Koopalings, reach Bowser's Castle and defeat Bowser
    # Yoshi Egg Hunt: Find a certain number of Yoshi Eggs
    bowser: 1
    yoshi_egg_hunt: 1

  bosses_required:
    # How many Bosses (Koopalings or Reznor) must be defeated in order to defeat Bowser
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 11
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  max_yoshi_egg_cap:
    # Maximum possible number of Yoshi Eggs that will be in the item pool
    # If fewer available locations exist in the pool than this number, the number of available locations will be used instead.
    # Required Percentage of Yoshi Eggs will be calculated based off of that number.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 255
    50: 0
    random: 1
    random-low: 0
    random-high: 0

  percentage_of_yoshi_eggs:
    # What Percentage of Yoshi Eggs are required to finish Yoshi Egg Hunt
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    100: 0
    random: 1
    random-low: 0
    random-high: 0

  dragon_coin_checks:
    # Whether collecting 5 Dragon Coins in each level will grant a check
    false: 0
    true: 1

  moon_checks:
    # Whether collecting a 3-Up Moon in a level will grant a check
    false: 50
    true: 0

  hidden_1up_checks:
    # Whether collecting a hidden 1-Up mushroom in a level will grant a check
    # These checks are considered cryptic as there's no actual indicator that they're in their respective places
    # Enable this option at your own risk
    false: 50
    true: 0

  bonus_block_checks:
    # Whether collecting a 1-Up mushroom from a Bonus Block in a level will grant a check
    false: 50
    true: 0

  blocksanity:
    # Whether hitting a block with an item or coin inside will grant a check
    # Note that some blocks are excluded due to how the option and the game works!
    # Exclusion list:
    #   * Blocks in Top Secret Area & Front Door/Bowser Castle
    #   * Blocks that are unreachable unless you glitch your way in
    false: 50
    true: 0

  bowser_castle_doors:
    # How the doors of Bowser's Castle behave
    # Vanilla: Front and Back Doors behave as vanilla
    # Fast: Both doors behave as the Back Door
    # Slow: Both doors behave as the Front Door
    # "Front Door" rooms depend on the `bowser_castle_rooms` option
    # "Back Door" only requires going through the dark hallway to Bowser
    vanilla: 50
    fast: 0
    slow: 0

  bowser_castle_rooms:
    # How the rooms of Bowser's Castle Front Door behave
    # Vanilla: You can choose which rooms to enter, as in vanilla
    # Random Two Room: Two random rooms are chosen
    # Random Five Room: Five random rooms are chosen
    # Gauntlet: All eight rooms must be cleared
    # Labyrinth: Which room leads to Bowser?
    vanilla: 0
    random_two_room: 50
    random_five_room: 0
    gauntlet: 0
    labyrinth: 0

  level_shuffle:
    # Whether levels are shuffled
    false: 0
    true: 1

  exclude_special_zone:
    # If active, this option will prevent any progression items from being placed in Special Zone levels.
    # Additionally, if Level Shuffle is active, Special Zone levels will not be shuffled away from their vanilla tiles.
    false: 50
    true: 0

  boss_shuffle:
    # How bosses are shuffled
    # None: Bosses are not shuffled
    # Simple: Four Reznors and the seven Koopalings are shuffled around
    # Full: Each boss location gets a fully random boss
    # Singularity: One or two bosses are chosen and placed at every boss location
    none: 50
    simple: 0
    full: 0
    singularity: 0

  swap_donut_gh_exits:
    # If enabled, this option will swap which overworld direction the two exits of the level at the Donut Ghost House
    #     overworld tile go:
    # False: Normal Exit goes up, Secret Exit goes right.
    # True: Normal Exit goes right, Secret Exit goes up.
    false: 50
    true: 0

  display_received_item_popups:
    # What messages to display in-game for items received
    none: 0
    all: 0
    progression: 0
    progression_minus_yoshi_eggs: 50

  junk_fill_percentage:
    # Replace a percentage of non-required Yoshi Eggs in the item pool with random junk items (only applicable on Yoshi Egg Hunt goal)
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_fill_percentage:
    # Replace a percentage of junk items in the item pool with random traps
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  ice_trap_weight:
    # Likelihood of a receiving a trap which causes the level to become slippery
    none: 0
    low: 0
    medium: 50
    high: 0

  stun_trap_weight:
    # Likelihood of a receiving a trap which briefly stuns Mario
    none: 0
    low: 0
    medium: 50
    high: 0

  literature_trap_weight:
    # Likelihood of a receiving a trap which causes the player to read literature
    none: 0
    low: 0
    medium: 50
    high: 0

  timer_trap_weight:
    # Likelihood of a receiving a trap which causes the timer to run low
    none: 0
    low: 0
    medium: 50
    high: 0

  reverse_trap_weight:
    # Likelihood of a receiving a trap which causes the controls to be reversed in the current level
    none: 0
    low: 0
    medium: 50
    high: 0

  thwimp_trap_weight:
    # Likelihood of a receiving a trap which causes a Thwimp to spawn above the player
    none: 0
    low: 0
    medium: 50
    high: 0

  autosave:
    # Whether a save prompt will appear after every level
    false: 0
    true: 50

  early_climb:
    # Force Climb to appear early in the seed as a local item.
    # This is particularly useful to prevent BK when Level Shuffle is disabled
    false: 50
    true: 0

  overworld_speed:
    # How fast Mario moves on the overworld
    slow: 0
    vanilla: 0
    fast: 1

  music_shuffle:
    # Music shuffle type
    # None: No Music is shuffled
    # Consistent: Each music track is consistently shuffled throughout the game
    # Full: Each individual level has a random music track
    # Singularity: The entire game uses one song for overworld and one song for levels
    none: 0
    consistent: 0
    full: 1
    singularity: 0

  sfx_shuffle:
    # Shuffles almost every instance of sound effect playback
    # Archipelago elements that play sound effects aren't randomized
    # None: No SFX are shuffled
    # Full: Each individual SFX call has a random SFX
    # Singularity: The entire game uses one SFX for every SFX call
    none: 0
    full: 1
    singularity: 0

  mario_palette:
    # Mario palette color
    mario: 1
    luigi: 1
    wario: 1
    waluigi: 1
    geno: 1
    princess: 1
    dark: 1
    sponge: 1

  level_palette_shuffle:
    # Whether to shuffle level palettes
    # Off: Do not shuffle palettes
    # On Legacy: Uses only the palette sets from the original game
    # On Curated: Uses custom, hand-crafted palette sets
    off: 1
    on_legacy: 1
    on_curated: 1

  overworld_palette_shuffle:
    # Whether to shuffle overworld palettes
    # Off: Do not shuffle palettes
    # On Legacy: Uses only the palette sets from the original game
    # On Curated: Uses custom, hand-crafted palette sets
    off: 1
    on_legacy: 1
    on_curated: 1

  starting_life_count:
    # How many extra lives to start the game with
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    5: 50
    random: 0
    random-low: 0
    random-high: 0

Super Metroid:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  start_inventory_removes_from_pool:
    # Remove items in starting inventory from pool.
    false: 50
    true: 0

  preset:
    # Choose one of the presets or specify "varia_custom" to use varia_custom_preset option or specify "custom" to use
    # custom_preset option.
    newbie: 0
    casual: 0
    regular: 1
    veteran: 1
    expert: 1
    master: 1
    samus: 0
    season_races: 0
    smrat2021: 0
    solution: 0
    custom: 0
    varia_custom: 0

  start_location:
    # Choose where you want to start the game.
    ceres: 0
    landing_site: 0
    gauntlet_top: 0
    green_brinstar_elevator: 0
    big_pink: 0
    etecoons_supers: 0
    wrecked_ship_main: 0
    firefleas_top: 0
    business_center: 0
    bubble_mountain: 0
    mama_turtle: 0
    watering_hole: 0
    aqueduct: 0
    red_brinstar_elevator: 0
    golden_four: 0
    random: 1

  remote_items:
    # Indicates you get items sent from your own world. This allows coop play of a world.
    false: 50
    true: 0

  death_link:
    # When DeathLink is enabled and someone dies, you will die. With survive reserve tanks can save you.
    disable: 0
    enable: 1
    enable_survive: 0

  max_difficulty:
    # Depending on the perceived difficulties of the techniques, bosses, hell runs etc. from the preset, it will
    # prevent the Randomizer from placing an item in a location too difficult to reach with the current items.
    easy: 0
    medium: 0
    hard: 0
    harder: 0
    hardcore: 50
    mania: 0
    infinity: 0

  morph_placement:
    # Influences where the Morphing Ball with be placed.
    early: 0
    normal: 1

  hide_items:
    # Hides half of the visible items.
    # Items always visible:
    # - Energy Tank, Gauntlet
    # - Energy Tank, Terminator
    # - Morphing Ball
    # - Missile (Crateria moat)
    # - Missile (green Brinstar below super missile)
    # - Missile (above Crocomire)
    # - Power Bomb (lower Norfair above fire flea room)
    # - Missile (Gravity Suit)
    # - Missile (green Maridia shinespark)
    false: 50
    true: 0

  strict_minors:
    # Instead of using the Minors proportions as probabilities, enforce a strict distribution to match the proportions
    # as closely as possible.
    false: 50
    true: 0

  missile_qty:
    # The higher the number the higher the probability of choosing missles when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    30: 50
    random: 0
    random-low: 0
    random-high: 0

  super_qty:
    # The higher the number the higher the probability of choosing super missles when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  power_bomb_qty:
    # The higher the number the higher the probability of choosing power bombs when placing a minor.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 90
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  minor_qty:
    # From 7%, minimum number of minors required to finish the game, to 100%.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 7
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  energy_qty:
    # Choose how many Energy/Reserve Tanks will be available, from 0-1 in ultra sparse, 4-6 in sparse, 8-12 in medium
    # and 18 in vanilla.
    ultra_sparse: 0
    sparse: 0
    medium: 0
    vanilla: 50

  area_randomization:
    # Randomize areas together using bidirectional access portals.
    off: 1
    light: 1
    full: 1

  area_layout:
    # Some layout tweaks to make your life easier in areas randomizer.
    false: 1
    true: 1

  doors_colors_rando:
    # Randomize the color of Red/Green/Yellow doors. Add four new type of doors which require Ice/Wave/Spazer/Plasma
    # beams to open them.
    false: 1
    true: 1

  allow_grey_doors:
    # When randomizing the color of Red/Green/Yellow doors, some doors can be randomized to Grey. Grey doors will never
    # open, you will have to go around them.
    false: 1
    true: 1

  boss_randomization:
    # Randomize Golden 4 bosses access doors using bidirectional access portals.
    false: 1
    true: 1

  escape_rando:
    # When leaving Tourian, get teleported to the exit of a random Map station (between Brinstar/Maridia/Norfair/Wrecked Ship).
    # You then have to find your way to the ship in the remaining time. Allotted time depends on area layout, but not on skill settings and is pretty generous.
    #
    # During the escape sequence:
    # - All doors are opened
    # - Maridia tube is opened
    # - The Hyper Beam can destroy Bomb , Power Bomb  and Super Missile  blocks and open blue/green gates from both sides
    # - All mini bosses are defeated
    # - All minor enemies are removed to allow you to move faster and remove lag
    #
    # During regular game only Crateria Map station door can be opened and activating the station will act as if all map stations were activated at once.
    #
    # Animals Challenges:
    # You can use the extra available time to:
    # - find the animals that are hidden behind a (now blue) map station door
    # - go to the vanilla animals door to cycle through the 4 available escapes, and complete as many escapes as you can
    #
    # Pick your challenge, or try to do both, but watch your timer!
    false: 0
    true: 1

  remove_escape_enemies:
    # Remove enemies during escape sequence, disable it to blast through enemies with your Hyper Beam and cause lag.
    false: 50
    true: 0

  fun_combat:
    # Forces removal of Plasma Beam and Screw Attack if the preset and settings allow it. In addition, can randomly
    # remove Spazer and Wave Beam from the Combat set. If used, might force 'minimal' accessibility.
    false: 50
    true: 0

  fun_movement:
    # Forces removal of Space Jump if the preset allows it. In addition, can randomly remove High Jump, Grappling Beam,
    # Spring Ball, Speed Booster, and Bombs from the Movement set. If used, might force 'minimal' accessibility.
    false: 50
    true: 0

  fun_suits:
    # If the preset and seed layout allow it, will force removal of at least one of Varia Suit and/or Gravity Suit. If
    # used, might force 'minimal' accessibility.
    false: 50
    true: 0

  layout_patches:
    # Include the anti-softlock layout patches. Disable at your own softlocking risk!
    false: 0
    true: 50

  varia_tweaks:
    # Include minor tweaks for the game to behave 'as it should' in a randomizer context
    false: 50
    true: 0

  nerfed_charge:
    # Samus begins with a starter Charge Beam that does one third of charged shot damage that can damage bosses. Pseudo
    # Screws also do one third damage. Special Beam Attacks do normal damage but cost 3 Power Bombs instead of 1. Once the
    # Charge Beam item has been collected, it does full damage and special attacks are back to normal.
    false: 50
    true: 0

  gravity_behaviour:
    # Modify the heat damage and enemy damage reduction qualities of the Gravity and Varia Suits.
    vanilla: 0
    balanced: 50
    progressive: 0

  elevators_speed:
    # Accelerate elevators transitions.
    false: 0
    true: 50

  fast_doors:
    # Accelerate doors transitions.
    false: 0
    true: 50

  spin_jump_restart:
    # Allows Samus to start spinning in mid air after jumping or falling.
    false: 50
    true: 0

  rando_speed:
    # Let Samus keeps her momentum when landing from a fall or from jumping.
    false: 50
    true: 0

  infinite_space_jump:
    # Space jumps can be done quicker and at any time in air, water or lava, even after falling long distances.
    false: 50
    true: 0

  refill_before_save:
    # Refill energy and ammo when saving.
    false: 50
    true: 0

  hud:
    # Displays the current area name and the number of remaining items of selected item split in the HUD for the
    # current area.
    false: 0
    true: 1

  animals:
    # Replace saving the animals in the escape sequence by a random surprise.
    # Note: This setting is not available when Escape Randomization is enabled, as it is replaced by Animals Challenges
    # (see Escape Randomization help for more information).
    false: 50
    true: 0

  no_music:
    # Disable the background music.
    false: 50
    true: 0

  random_music:
    # Randomize the background music.
    false: 50
    true: 0

  custom_preset:
    # see https://randommetroidsolver.pythonanywhere.com/presets for detailed info on each preset settings
    # knows: each skill (know) has a pair [can use, perceived difficulty using one of 1, 5, 10, 25, 50 or 100 each one
    #        matching a max_difficulty]
    # settings: hard rooms, hellruns and bosses settings
    # controller: predefined controller mapping and moon walk setting
    controller: {}
    knows: {}
    settings: {}

  varia_custom_preset:
    # use an entry from the preset list on https://randommetroidsolver.pythonanywhere.com/presets
    {}

  tourian:
    # Choose endgame Tourian behaviour:
    # Vanilla: regular vanilla Tourian
    # Fast: speed up Tourian to skip Metroids, Zebetites, and all cutscenes (including Mother Brain 3 fight). Golden Four statues are replaced by an invincible Gadora until all objectives are completed.
    # Disabled: skip Tourian entirely, ie. escape sequence is triggered as soon as all objectives are completed.
    vanilla: 0
    fast: 1
    disabled: 0

  custom_objective:
    # Use randomized custom objectives. You can choose which objectives are available for the randomizer to choose from. If enabled, the randomizer
    # will choose "Custom objective count" objectives from "Custom objective list". Otherwise, only objective is used. Default is disabled.
    false: 0
    true: 1

  custom_objective_list:
    # If ""Custom objectives"" is enabled, "Custom Objective count" will be used to pick an amount of objective from the list.
    # This setting is ignored if ""Custom objectives"" is set to false.
    # Note: If you leave the list empty no objective is required to access Tourian, ie. it's open.
    # Note: See the Tourian parameter to enable fast Tourian or trigger the escape when all objectives are completed.
    # Note: Current percentage of collected items is displayed in the inventory pause menu.
    # Note: Collect 100% items is excluded by default as it requires you to complete all the objectives.
    # Note: In AP, Items% and areas objectives are counted toward location checks, not items collected or received, except for "collect all upgrades"
    #
    # Format as a comma-separated list of objective names: ["kill three G4", "collect 75% items"] or ["random"] to specify the whole list except
    # "collect 100% items" and "nothing". The default is ["random"]. A full list of supported objectives can be found at:
    # https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/sm/variaRandomizer/utils/objectives.py
    ["random"]

  custom_objective_count:
    # By default you need to complete 4 objectives from the list to access Tourian. You can choose between 1 and 5. This setting is ignored if
    # ""Custom objectives"" is set to false.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    4: 0
    random: 1
    random-low: 0
    random-high: 0

  objective:
    # If ""Custom objectives"" is disabled, choose which objectives are required to sink the Golden Four statue and to open access to Tourian.
    # You can choose from 0 to 5 objectives. Up to the first 5 objectives from the list will be selected.
    # Note: If you leave the list empty no objective is required to access Tourian, ie. it's open.
    # Note: See the Tourian parameter to enable fast Tourian or trigger the escape when all objectives are completed.
    # Note: Current percentage of collected items is displayed in the inventory pause menu.
    # Note: In AP, Items% and areas objectives are counted toward location checks, not items collected or received, except for "collect all upgrades"
    #
    # Format as a comma-separated list of objective names: ["kill three G4", "collect 75% items"]. The default is ["kill all G4"].
    # A full list of supported objectives can be found at:
    # https://github.com/ArchipelagoMW/Archipelago/blob/main/worlds/sm/variaRandomizer/utils/objectives.py
    ["kill all G4"]

  relaxed_round_robin_cf:
    # Changes Crystal Flashes behavior and requirements as follows:
    #
    # You can perform a Crystal Flash with any amount of ammo, but you need at least one Power Bomb to begin the process.
    # After consuming 1 ammo, Samus gains 50 energy, and it will try a different ammo type next,
    # cycling through Missiles, Supers, and Power Bombs as available. The cycling is to keep the consumption even between ammo types.
    # If one of your ammo types is at 0, it will be skipped.
    # The Crystal Flash ends when Samus is out of ammo or a total of 30 ammo has been consumed.
    false: 50
    true: 0

Terraria:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # The victory condition for your run. Stuff after the goal will not be shuffled.
    mechanical_bosses: 50
    plantera: 0
    golem: 0
    empress_of_light: 0
    lunatic_cultist: 0
    moon_lord: 0
    zenith: 0

  achievements:
    # Adds checks upon collecting achievements. Achievements for clearing bosses and events are excluded.
    # "Exclude Grindy" also excludes fishing achievements.
    none: 0
    exclude_grindy: 50
    exclude_fishing: 0
    all: 0

  fill_extra_checks_with:
    # Applies if you have achievements enabled. "Useful Items" helps to make the early game less grindy.
    # Items are rewarded to all players in your Terraria world.
    coins: 0
    useful_items: 50

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

The Legend of Zelda:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  ExpandedPool:
    # Puts room clear drops and take any caves into the pool of items and locations.
    false: 0
    true: 50

  TriforceLocations:
    # Where Triforce fragments can be located. Note that Triforce pieces
    # obtained in a dungeon will heal and warp you out, while overworld Triforce pieces obtained will appear to have
    # no immediate effect. This is normal.
    vanilla: 50
    dungeons: 0
    anywhere: 0

  StartingPosition:
    # How easy is the start of the game.
    # Safe means a weapon is guaranteed in Starting Sword Cave.
    # Unsafe means that a weapon is guaranteed between Starting Sword Cave, Letter Cave, and Armos Knight.
    # Dangerous adds these level locations to the unsafe pool (if they exist):
    #       Level 1 Compass, Level 2 Bomb Drop (Keese), Level 3 Key Drop (Zols Entrance), Level 3 Compass
    # Very Dangerous is the same as dangerous except it doesn't guarantee a weapon. It will only mean progression
    # will be there in single player seeds. In multi worlds, however, this means all bets are off and after checking
    # the dangerous spots, you could be stuck until someone sends you a weapon
    safe: 50
    unsafe: 0
    dangerous: 0
    very_dangerous: 0

The Messenger:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 50
    items: 0
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  logic_level:
    # The level of logic to use when determining what locations in your world are accessible.
    #
    # Normal: Can require damage boosts, but otherwise approachable for someone who has beaten the game.
    # Hard: Expects more knowledge and tighter execution. Has leashing, normal clips and much tighter d-boosting in logic.
    normal: 50
    hard: 0

  shuffle_shards:
    # Whether mega shards should be item locations.
    false: 50
    true: 0

  limited_movement:
    # Removes either rope dart or wingsuit from the itempool. Forces logic to at least hard and accessibility to minimal.
    false: 50
    true: 0

  early_meditation:
    # Guarantees meditation will be found early
    false: 50
    true: 0

  available_portals:
    # Number of portals that are available from the start. Autumn Hills, Howling Grotto, and Glacial Peak are always available. If portal outputs are not randomized, Searing Crags will also be available.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  shuffle_portals:
    # Whether the portals lead to random places.
    # Entering a portal from its vanilla area will always lead to HQ, and will unlock it if relevant.
    # Supports plando.
    #
    # None: Portals will take you where they're supposed to.
    # Shops: Portals can lead to any area except Music Box and Elemental Skylands, with each portal output guaranteed to not overlap with another portal's. Will only put you at a portal or a shop.
    # Checkpoints: Like Shops except checkpoints without shops are also valid drop points.
    # Anywhere: Like Checkpoints except it's possible for multiple portals to output to the same map.
    none: 50
    shops: 0
    checkpoints: 0
    anywhere: 0

  goal:
    # Requirement to finish the game. To win with the power seal hunt goal, you must enter the Music Box through the shop chest.
    open_music_box: 50
    power_seal_hunt: 0

  music_box:
    # Whether the music box gauntlet needs to be done.
    false: 0
    true: 50

  notes_needed:
    # How many notes are needed to access the Music Box.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 6
    6: 50
    random: 0
    random-low: 0
    random-high: 0

  total_seals:
    # Number of power seals that exist in the item pool when power seal hunt is the goal.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 85
    45: 50
    random: 0
    random-low: 0
    random-high: 0

  percent_seals_required:
    # Percentage of total seals required to open the shop chest.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 10
    # Maximum value is 100
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  traps:
    # Whether traps should be included in the itempool.
    false: 50
    true: 0

  shop_price:
    # Percentage modifier for shuffled item prices in shops
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 25
    # Maximum value is 400
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  shop_price_plan:
    # Plan specific prices on shop slots. Supports weighting
    {}

The Witness:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  puzzle_randomization:
    # Puzzles in this randomizer are randomly generated. This option changes the difficulty/types of puzzles.
    sigma_normal: 50
    sigma_expert: 0
    none: 0

  shuffle_symbols:
    # If on, you will need to unlock puzzle symbols as items to be able to solve the panels that contain those symbols.
    #
    # Please note that there is no minimum set of progression items in this randomizer.
    # If you turn this option off and don't turn on door shuffle or obelisk keys, there will be no progression items, which will disallow you from adding your yaml to a multiworld generation.
    false: 0
    true: 50

  shuffle_doors:
    # If on, opening doors, moving bridges etc. will require a "key".
    # If set to "panels", the panel on the door will be locked until receiving its corresponding key.
    # If set to "doors", the door will open immediately upon receiving its key. Door panels are added as location checks.
    # "Mixed" includes all doors from "doors", and all control panels (bridges, elevators etc.) from "panels".
    off: 50
    panels: 0
    doors: 0
    mixed: 0

  door_groupings:
    # If set to "none", there will be one key for each door, potentially resulting in upwards of 120 keys being added to the item pool.
    # If set to "regional", all doors in the same general region will open at once with a single key, reducing the amount of door items and complexity.
    off: 50
    regional: 0

  shuffle_boat:
    # If on, adds a "Boat" item to the item pool. Before receiving this item, you will not be able to use the boat.
    false: 0
    true: 50

  shuffle_lasers:
    # If on, the 11 lasers are turned into items and will activate on their own upon receiving them.
    off: 50
    local: 0
    anywhere: 0

  disable_non_randomized_puzzles:
    # Disables puzzles that cannot be randomized.
    # This includes many puzzles that heavily involve the environment, such as Shadows, Monastery or Orchard.
    #
    # The lasers for those areas will activate as you solve optional puzzles, such as Discarded Panels.
    # Additionally, the panel activating the Jungle Popup Wall will be on from the start.
    false: 50
    true: 0

  shuffle_discarded_panels:
    # Adds Discarded Panels into the location pool.
    #
    # Even if this is off, solving certain Discarded Panels may still be necessary to beat the game - The main example of this being the alternate activation triggers in "Disable non randomized puzzles".
    false: 50
    true: 0

  shuffle_vault_boxes:
    # Adds Vault Boxes to the location pool.
    false: 50
    true: 0

  obelisk_keys:
    # Add one Obelisk Key item per Obelisk, locking you out of solving any of the associated Environmental Puzzles.
    #
    # Does nothing if "Shuffle Environmental Puzzles" is set to "off".
    false: 0
    true: 50

  shuffle_EPs:
    # Adds Environmental/Obelisk Puzzles into the location pool.
    # If set to "individual", every Environmental Puzzle sends an item.
    # If set to "Obelisk Sides", completing every puzzle on one side of an Obelisk sends an item.
    #
    # Note: In Obelisk Sides, any EPs excluded through another option will be pre-completed on their Obelisk.
    off: 50
    individual: 0
    obelisk_sides: 0

  EP_difficulty:
    # When "Shuffle Environmental Puzzles" is on, this setting governs which EPs are eligible for the location pool.
    # If set to "eclipse", every EP in the game is eligible, including the 1-hour-long "Theater Eclipse EP".
    # If set to "tedious", Theater Eclipse EP is excluded from the location pool.
    # If set to "normal", several other difficult or long EPs are excluded as well.
    normal: 50
    tedious: 0
    eclipse: 0

  shuffle_postgame:
    # Adds locations into the pool that are guaranteed to become accessible after or at the same time as your goal.
    # Use this if you don't play with release on victory.
    false: 50
    true: 0

  victory_condition:
    # Set the victory condition for this world.
    # Elevator: Start the elevator at the bottom of the mountain (requires Mountain Lasers).
    # Challenge: Beat the secret Challenge (requires Challenge Lasers).
    # Mountain Box Short: Input the short solution to the Mountaintop Box (requires Mountain Lasers).
    # Mountain Box Long: Input the long solution to the Mountaintop Box (requires Challenge Lasers).
    #
    # It is important to note that while the Mountain Box requires Desert Laser to be redirected in Town for that laser
    # to count, the laser locks on the Elevator and Challenge Timer panels do not.
    elevator: 50
    challenge: 0
    mountain_box_short: 0
    mountain_box_long: 0

  mountain_lasers:
    # Sets the number of lasers required to enter the Mountain.
    # If set to a higher number than 7, the mountaintop box will be slightly rotated to make it possible to solve without the hatch being opened.
    # This change will also be applied logically to the long solution ("Challenge Lasers" option).
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    7: 0
    random: 1
    random-low: 0
    random-high: 0

  challenge_lasers:
    # Sets the number of lasers required to enter the Caves through the Mountain Bottom Floor Discard and to unlock the Challenge Timer Panel.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 11
    11: 0
    random: 1
    random-low: 0
    random-high: 0

  early_caves:
    # Adds an item that opens the Caves Shortcuts to Swamp and Mountain, allowing early access to the Caves even if you are not playing a remote Door Shuffle mode.
    # You can either add this item to the pool to be found in the multiworld, or you can outright start with it and have immediate access to the Caves.
    #
    # If you choose "Add To Pool" and you are already playing a remote Door Shuffle mode, this option will do nothing.
    off: 50
    add_to_pool: 0
    starting_inventory: 0

  elevators_come_to_you:
    # If on, the Quarry Elevator, Bunker Elevator and Swamp Long Bridge will "come to you" if you approach them.
    # This does actually affect logic as it allows unintended backwards / early access into these areas.
    false: 50
    true: 0

  trap_percentage:
    # Replaces junk items with traps, at the specified rate.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_weights:
    # Specify the weights determining how many copies of each trap item will be in your itempool.
    # If you don't want a specific type of trap, you can set the weight for it to 0 (Do not delete the entry outright!).
    # If you set all trap weights to 0, you will get no traps, bypassing the "Trap Percentage" option.
    Bonk: 1
    Power Surge: 2
    Slowness: 6

  puzzle_skip_amount:
    # Adds this many Puzzle Skips into the pool, if there is room. Puzzle Skips let you skip one panel.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  hint_amount:
    # Adds hints to Audio Logs. If set to a low amount, up to 2 additional duplicates of each hint will be added.
    # Remaining Audio Logs will have junk hints.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 49
    12: 50
    random: 0
    random-low: 0
    random-high: 0

  area_hint_percentage:
    # There are two types of hints for The Witness.
    # "Location hints" hint one location in your world or one location containing an item for your world.
    # "Area hints" tell you some general info about the items you can find in one of the main geographic areas on the island.
    # Use this option to specify how many of your hints you want to be area hints. The rest will be location hints.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    33: 50
    random: 0
    random-low: 0
    random-high: 0

  laser_hints:
    # If on, lasers will tell you where their items are if you walk close to them in-game.
    # Only applies if Laser Shuffle is enabled.
    false: 50
    true: 0

  death_link:
    # If on, whenever you fail a puzzle (with some exceptions), you and everyone who is also on Death Link dies.
    # The effect of a "death" in The Witness is a Bonk Trap.
    false: 0
    true: 1

  death_link_amnesty:
    # The number of panel fails to allow before sending a death through Death Link.
    # 0 means every panel fail will send a death, 1 means every other panel fail will send a death, etc.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    1: 50
    random: 0
    random-low: 0
    random-high: 0

Timespinner:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  StartWithJewelryBox:
    # Start with Jewelry Box unlocked
    false: 50
    true: 0

  DownloadableItems:
    # With the tablet you will be able to download items at terminals
    false: 0
    true: 50

  EyeSpy:
    # Requires Oculus Ring in inventory to be able to break hidden walls.
    false: 50
    true: 0

  StartWithMeyef:
    # Start with Meyef, ideal for when you want to play multiplayer.
    false: 50
    true: 0

  QuickSeed:
    # Start with Talaria Attachment, Nyoom!
    false: 50
    true: 0

  SpecificKeycards:
    # Keycards can only open corresponding doors
    false: 50
    true: 0

  Inverted:
    # Start in the past
    false: 50
    true: 0

  GyreArchives:
    # Gyre locations are in logic. New warps are gated by Merchant Crow and Kobo
    false: 50
    true: 0

  Cantoran:
    # Cantoran's fight and check are available upon revisiting his room
    false: 50
    true: 0

  LoreChecks:
    # Memories and journal entries contain items.
    false: 50
    true: 0

  BossRando:
    # Wheter all boss locations are shuffled, and if their damage/hp should be scaled.
    off: 50
    scaled: 0
    unscaled: 0

  EnemyRando:
    # Wheter enemies will be randomized, and if their damage/hp should be scaled.
    off: 50
    scaled: 0
    unscaled: 0
    ryshia: 0

  DamageRando:
    # Randomly nerfs and buffs some orbs and their associated spells as well as some associated rings.
    off: 50
    allnerfs: 0
    mostlynerfs: 0
    balanced: 0
    mostlybuffs: 0
    allbuffs: 0
    manual: 0

  DamageRandoOverrides:
    # Manual +/-/normal odds for an orb. Put 0 if you don't want a certain nerf or buff to be a possibility. Orbs that
    # you don't specify will roll with 1/1/1 as odds
    Blade:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Blood:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Blue:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Empire:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Eye:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Fire:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    ForbiddenTome:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Gun:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Ice:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Iron:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Nether:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Plasma:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Radiant:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Shattered:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Umbra:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1
    Wind:
      MinusOdds: 1
      NormalOdds: 1
      PlusOdds: 1

  HpCap:
    # Sets the number that Lunais's HP maxes out at.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 999
    999: 50
    random: 0
    random-low: 0
    random-high: 0

  LevelCap:
    # Sets the max level Lunais can achieve.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 99
    99: 50
    random: 0
    random-low: 0
    random-high: 0

  ExtraEarringsXP:
    # Adds additional XP granted by Galaxy Earrings.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 24
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  BossHealing:
    # Enables/disables healing after boss fights. NOTE: Currently only applicable when Boss Rando is enabled.
    false: 0
    true: 50

  ShopFill:
    # Sets the items for sale in Merchant Crow's shops.
    # Default: No sunglasses or trendy jacket, but sand vials for sale.
    # Randomized: Up to 4 random items in each shop.
    # Vanilla: Keep shops the same as the base game.
    # Empty: Sell no items at the shop.
    default: 50
    randomized: 0
    vanilla: 0
    empty: 0

  ShopWarpShards:
    # Shops always sell warp shards (when keys possessed), ignoring inventory setting.
    false: 0
    true: 50

  ShopMultiplier:
    # Multiplier for the cost of items in the shop. Set to 0 for free shops.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    1: 50
    random: 0
    random-low: 0
    random-high: 0

  LootPool:
    # Sets the items that drop from enemies (does not apply to boss reward checks)
    # Vanilla: Drops are the same as the base game
    # Randomized: Each slot of every enemy's drop table is given a random use item or piece of equipment.
    # Empty: Enemies drop nothing.
    vanilla: 50
    randomized: 0
    empty: 0

  DropRateCategory:
    # Sets the drop rate when 'Loot Pool' is set to 'Random'
    # Tiered: Based on item rarity/value
    # Vanilla: Based on bestiary slot the item is placed into
    # Random: Assigned a random tier/drop rate
    # Fixed: Set by the 'Fixed Drop Rate' setting
    tiered: 50
    vanilla: 0
    randomized: 0
    fixed: 0

  FixedDropRate:
    # Base drop rate percentage when 'Drop Rate Category' is set to 'Fixed'
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  LootTierDistro:
    # Sets how often items of each rarity tier are placed when 'Loot Pool' is set to 'Random'
    # Default Weight: Rarer items will be assigned to enemy drop slots less frequently than common items
    # Full Random: Any item has an equal chance of being placed in an enemy's drop slot
    # Inverted Weight: Rarest items show up the most frequently, while common items are the rarest
    default_weight: 50
    full_random: 0
    inverted_weight: 0

  ShowBestiary:
    # All entries in the bestiary are visible, without needing to kill one of a given enemy first
    false: 50
    true: 0

  ShowDrops:
    # All item drops in the bestiary are visible, without needing an enemy to drop one of a given item first
    false: 50
    true: 0

  EnterSandman:
    # The Ancient Pyramid is unlocked by the Twin Pyramid Keys, but the final boss door opens if you have all 5 Timespinner pieces
    false: 50
    true: 0

  DadPercent:
    # The win condition is beating the boss of Emperor's Tower
    false: 50
    true: 0

  RisingTides:
    # Random areas are flooded or drained, can be further specified with RisingTidesOverrides
    false: 50
    true: 0

  RisingTidesOverrides:
    # Odds for specific areas to be flooded or drained, only has effect when RisingTides is on.
    # Areas that are not specified will roll with the default 33% chance of getting flooded or drained
    AncientPyramidShaft:
      Dry: 67
      Flooded: 33
    CastleBasement:
      Dry: 66
      Flooded: 17
      FloodedWithSavePointAvailable: 17
    CastleCourtyard:
      Dry: 67
      Flooded: 33
    CastleMoat:
      Dry: 67
      Flooded: 33
    Lab:
      Dry: 67
      Flooded: 33
    LakeDesolation:
      Dry: 67
      Flooded: 33
    LakeSerene:
      Dry: 33
      Flooded: 67
    LakeSereneBridge:
      Dry: 67
      Flooded: 33
    Maw:
      Dry: 67
      Flooded: 33
    Sandman:
      Dry: 67
      Flooded: 33
    Xarion:
      Dry: 67
      Flooded: 33

  UnchainedKeys:
    # Start with Twin Pyramid Key, which does not give free warp;
    # warp items for Past, Present, (and ??? with Enter Sandman) can be found.
    false: 50
    true: 0

  TrapChance:
    # Chance of traps in the item pool.
    # Traps will only replace filler items such as potions, vials and antidotes
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  Traps:
    # List of traps that may be in the item pool to find
    [
      "Meteor Sparrow Trap",
      "Poison Trap",
      "Chaos Trap",
      "Neurotoxin Trap",
      "Bee Trap",
    ]

  PresentAccessWithWheelAndSpindle:
    # When inverted, allows using the refugee camp warp when both the Timespinner Wheel and Spindle is acquired.
    false: 50
    true: 0

  DeathLink:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

TUNIC:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  sword_progression:
    # Adds four sword upgrades to the item pool that will progressively grant stronger melee weapons, including two new swords with increased range and attack power.
    false: 0
    true: 50

  start_with_sword:
    # Start with a sword in the player's inventory. Does not count towards Sword Progression.
    false: 50
    true: 0

  keys_behind_bosses:
    # Places the three hexagon keys behind their respective boss fight in your world.
    false: 50
    true: 0

  ability_shuffling:
    # Locks the usage of Prayer, Holy Cross*, and the Icebolt combo until the relevant pages of the manual have been found.
    # If playing Hexagon Quest, abilities are instead randomly unlocked after obtaining 25%, 50%, and 75% of the required Hexagon goal amount.
    # *Certain Holy Cross usages are still allowed, such as the free bomb codes, the seeking spell, and other player-facing codes.
    false: 50
    true: 0

  shuffle_ladders:
    # Turns several ladders in the game into items that must be found before they can be climbed on.
    # Adds more layers of progression to the game by blocking access to many areas early on.
    # "Ladders were a mistake." —Andrew Shouldice
    false: 50
    true: 0

  entrance_rando:
    # Randomize the connections between scenes.
    # If you set this to a value besides true or false, that value will be used as a custom seed.
    # A small, very lost fox on a big adventure.
    no: 50
    yes: 0

  fixed_shop:
    # Forces the Windmill entrance to lead to a shop, and places only one other shop in the pool.
    # Has no effect if Entrance Rando is not enabled.
    false: 50
    true: 0

  logic_rules:
    # Set which logic rules to use for your world.
    # Restricted: Standard logic, no glitches.
    # No Major Glitches: Sneaky Laurels zips, ice grapples through doors, shooting the west bell, and boss quick kills are included in logic.
    # * Ice grappling through the Ziggurat door is not in logic since you will get stuck in there without Prayer.
    # Unrestricted: Logic in No Major Glitches, as well as ladder storage to get to certain places early.
    # *Torch is given to the player at the start of the game due to the high softlock potential with various tricks. Using the torch is not required in logic.
    # *Using Ladder Storage to get to individual chests is not in logic to avoid tedium.
    # *Getting knocked out of the air by enemies during Ladder Storage to reach places is not in logic, except for in Rooted Ziggurat Lower. This is so you're not punished for playing with enemy rando on.
    restricted: 50
    no_major_glitches: 0
    unrestricted: 0

  fool_traps:
    # Replaces low-to-medium value money rewards in the item pool with fool traps, which cause random negative effects to the player.
    off: 0
    normal: 50
    double: 0
    onslaught: 0

  hexagon_quest:
    # An alternate goal that shuffles Gold "Questagon" items into the item pool and allows the game to be completed after collecting the required number of them.
    false: 50
    true: 0

  hexagon_goal:
    # How many Gold Questagons are required to complete the game on Hexagon Quest.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 15
    # Maximum value is 50
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  extra_hexagon_percentage:
    # How many extra Gold Questagons are shuffled into the item pool, taken as a percentage of the goal amount.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  lanternless:
    # Choose whether you require the Lantern for dark areas.
    # When enabled, the Lantern is marked as Useful instead of Progression.
    false: 50
    true: 0

  maskless:
    # Choose whether you require the Scavenger's Mask for Lower Quarry.
    # When enabled, the Scavenger's Mask is marked as Useful instead of Progression.
    false: 50
    true: 0

  laurels_location:
    # Force the Hero's Laurels to be placed at a location in your world.
    # For if you want to avoid or specify early or late Laurels.
    # If you use the 10 Fairies option in Entrance Rando, Secret Gathering Place will be at its vanilla entrance.
    anywhere: 50
    6_coins: 0
    10_coins: 0
    10_fairies: 0

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}

Undertale:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  route_required:
    # Main route of the game required to win.
    neutral: 50
    pacifist: 0
    genocide: 0
    all_routes: 0

  starting_area:
    # Which area to start with access to.
    ruins: 50
    snowdin: 0
    waterfall: 0
    hotland: 0
    core: 0

  key_hunt:
    # Adds Key Pieces to the item pool, you need all of them to enter the last corridor.
    false: 50
    true: 0

  key_pieces:
    # How many Key Pieces are added to the pool, only matters with Key Piece Hunt enabled.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 10
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  rando_love:
    # Adds LOVE to the pool. Only matters if your goal includes Genocide route
    false: 50
    true: 0

  rando_stats:
    # Makes each stat increase from LV a separate item. Only matters if your goal includes Genocide route
    # Warning: This tends to spam chat with sending out checks.
    false: 50
    true: 0

  temy_include:
    # Adds Temmy Armor to the item pool.
    false: 0
    true: 50

  no_equips:
    # Removes all equippable items.
    false: 50
    true: 0

  only_flakes:
    # Replaces all non-required items, except equipment, with Temmie Flakes.
    false: 50
    true: 0

  prog_armor:
    # Makes the armor progressive.
    false: 50
    true: 0

  prog_weapons:
    # Makes the weapons progressive.
    false: 50
    true: 0

  rando_item_button:
    # Turns the ITEM button in battle into an item you have to receive.
    false: 50
    true: 0

VVVVVV:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  music_rando:
    # Randomize Music
    false: 50
    true: 0

  area_rando:
    # Randomize Entrances to Areas
    false: 50
    true: 0

  door_cost:
    # Amount of Trinkets required to enter Areas. Set to 0 to disable artificial locks.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 3
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  area_cost:
    # Randomize which Area requires which set of DoorCost Trinkets
    false: 50
    true: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

  death_link_amnesty:
    # Amount of Deaths to take before sending a DeathLink signal, for balancing difficulty
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 30
    15: 50
    random: 0
    random-low: 0
    random-high: 0

Wargroove:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  income_boost:
    # How much extra income the player gets per turn per boost received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  commander_defense_boost:
    # How much extra defense the player's commander gets per boost received.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  commander_choice:
    # How the player's commander is selected for missions.
    # Locked Random: The player's commander is randomly predetermined for each level.
    # Unlockable Factions: The player starts with Mercival and can unlock playable factions.
    # Random Starting Faction:  The player starts with a random starting faction and can unlock the rest.
    # When playing with unlockable factions, faction items are added to the pool.
    # Extra faction items after the first also reward starting Groove charge.
    locked_random: 50
    unlockable_factions: 0
    random_starting_faction: 0

Yoshi's Island:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  starting_world:
    # This sets which world you start in. Other worlds can be accessed by receiving a Gate respective to that world.
    world_1: 50
    world_2: 0
    world_3: 0
    world_4: 0
    world_5: 0
    world_6: 0

  starting_lives:
    # This sets the amount of lives Yoshi will have upon loading the game.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 999
    3: 50
    random: 0
    random-low: 0
    random-high: 0

  goal:
    # This sets the goal. Bowser goal requires defeating Bowser at the end of 6-8, while Luigi Hunt requires collecting all required Luigi Pieces.
    bowser: 50
    luigi_hunt: 0

  luigi_pieces_required:
    # This will set how many Luigi Pieces are required to trigger a victory.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    25: 50
    random: 0
    random-low: 0
    random-high: 0

  luigi_pieces_in_pool:
    # This will set how many Luigi Pieces are in the item pool.
    #    If the number in the pool is lower than the number required,
    #    the amount in the pool will be randomized, with the minimum being the amount required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  extras_enabled:
    # If enabled, the more difficult Extra stages will be added into logic. Otherwise, they will be inaccessible.
    false: 50
    true: 0

  minigame_checks:
    # This will set minigame victories to give Archipelago checks.
    # This will not randomize minigames amongst themselves, and is compatible with item logic.
    # Bonus games will be expected to be cleared from the Overworld, not the end of levels.
    # Additionally, 1-Up bonus games will accept any profit as a victory.
    none: 50
    bandit_games: 0
    bonus_games: 0
    both: 0

  split_extras:
    # If enabled, Extra stages will be unlocked individually. Otherwise, there will be a single 'Extra Panels' item that unlocks all of them.
    false: 50
    true: 0

  split_bonus:
    # If enabled, Bonus Games will be unlocked individually. Otherwise, there will be a single 'Bonus Panels' item that unlocks all of them.
    false: 50
    true: 0

  hidden_object_visibility:
    # This will determine the default visibility of objects revealed by the Magnifying Glass.
    # Strict Logic will expect the Secret Lens or a Magnifying Glass to interact with hidden clouds containing stars if they are not set to visible by default.
    none: 0
    coins_only: 50
    clouds_only: 0
    full: 0

  add_secretlens:
    # If enabled, the Secret Lens will be added to the item pool.
    # The Secret Lens will act as a permanent Magnifying Glass.
    false: 50
    true: 0

  shuffle_midrings:
    # If enabled, Middle Rings will be added to the item pool.
    false: 50
    true: 0

  stage_logic:
    # This determines what logic mode the stages will use.
    # Strict: Best for casual players or those new to playing Yoshi's Island in AP. Level requirements won't expect anything too difficult of the player.
    # Loose: Recommended for veterans of the original game. Won't expect anything too difficult, but may expect unusual platforming or egg throws.
    # Expert: Logic may expect advanced knowledge or memorization of level layouts, as well as jumps the player may only have one chance to make without restarting.
    strict: 50
    loose: 0
    expert: 0

  item_logic:
    # This will enable logic to expect consumables to be used from the inventory in place of some major items.
    # Logic will expect you to have access to an Overworld bonus game, or a bandit game to get the necessary items.
    # Logic will NOT expect grinding end-of-level bonus games, or any inventory consumables received from checks.
    # Casual logic will only expect consumables from Overworld games; Loose and Expert may expect them from bandit games.
    false: 50
    true: 0

  disable_autoscroll:
    # If enabled, will disable autoscrolling during levels, except during levels which cannot function otherwise.
    false: 50
    true: 0

  softlock_prevention:
    # If enabled, hold R + X to warp to the last used Middle Ring, or the start of the level if none have been activated.
    false: 0
    true: 50

  castle_open_condition:
    # This sets how many bosses need to be defeated to access 6-8.
    #    You can check this in-game by pressing SELECT while in any level.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 11
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  castle_clear_condition:
    # This sets how many bosses need to be defeated to access the boss of 6-8.
    #    You can check this in-game by pressing SELECT while in any level.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 11
    0: 50
    random: 0
    random-low: 0
    random-high: 0

  bowser_door_mode:
    # This will set which route you take through 6-8.
    # Manual: You go through the door that you hit with an egg, as normal.
    # Doors: Route will be forced to be the door chosen here, regardless of which door you hit.
    # Gauntlet: You will be forced to go through all 4 routes in order before the final hallway.
    manual: 50
    door_1: 0
    door_2: 0
    door_3: 0
    door_4: 0
    gauntlet: 0

  level_shuffle:
    # Disabled: All levels will appear in their normal location.
    # Bosses Guaranteed: All worlds will have a boss on -4 and -8.
    # Full: Worlds may have more than 2 or no bosses in them.
    # Regardless of the setting, 6-8 and Extra stages are not shuffled.
    disabled: 50
    bosses_guaranteed: 0
    full: 0

  boss_shuffle:
    # This whill shuffle which boss each boss door will lead to. Each boss can only appear once, and Baby Bowser is left alone.
    false: 50
    true: 0

  yoshi_colors:
    # Sets the Yoshi color for each level.
    # Normal will use the vanilla colors.
    # Random order will generate a random order of colors that will be used in each level. The stage 1 color will be used for Extra stages, and 6-8.
    # Random color will generate a random color for each stage.
    # Singularity will use a single color defined under 'Singularity Yoshi Color' for use in all stages.
    normal: 50
    random_order: 0
    random_color: 0
    singularity: 0

  yoshi_singularity_color:
    # Sets which color Yoshi will be if Yoshi Colors is set to singularity.
    green: 50
    pink: 0
    cyan: 0
    yellow: 0
    purple: 0
    brown: 0
    red: 0
    blue: 0

  baby_mario_sound:
    # Change the sound that Baby Mario makes when not on Yoshi.
    normal: 50
    disabled: 0
    random_sound_effect: 0

  traps_enabled:
    # Will place traps into the item pool.
    #    Traps have a variety of negative effects, and will only replace filler items.
    false: 50
    true: 0

  trap_percent:
    # Percentage of the item pool that becomes replaced with traps.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    10: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1

Zillion:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  continues:
    # number of continues before game over
    #
    # game over teleports you to your ship, keeping items and open doors
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 21
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 50 # equivalent to 3
    infinity: 0 # equivalent to 21

  floppy_req:
    # how many floppy disks are required
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 8
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  gun_levels:
    # Zillion gun power for the number of Zillion power ups you pick up
    #
    # For "restrictive", Champ is the only one that can get Zillion gun power level 3.
    vanilla: 0
    balanced: 50
    low: 0
    restrictive: 0

  jump_levels:
    # jump levels for each character level
    #
    # For "restrictive", Apple is the only one that can get jump level 3.
    vanilla: 0
    balanced: 50
    low: 0
    restrictive: 0

  randomize_alarms:
    # whether to randomize the locations of alarm sensors
    false: 0
    true: 50

  max_level:
    # the highest level you can get
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 3
    # Maximum value is 8
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  start_char:
    # which character you start with
    jj: 0
    apple: 0
    champ: 0
    random: 50

  opas_per_level:
    # how many Opa-Opas are required to level up
    #
    # Lower makes you level up faster.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  id_card_count:
    # how many ID Cards are in the game
    #
    # Vanilla is 63
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    42: 50
    random: 0
    random-low: 0
    random-high: 0

  bread_count:
    # how many Breads are in the game
    #
    # Vanilla is 33
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  opa_opa_count:
    # how many Opa-Opas are in the game
    #
    # Vanilla is 26
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    26: 50
    random: 0
    random-low: 0
    random-high: 0

  zillion_count:
    # how many Zillion gun power ups are in the game
    #
    # Vanilla is 6
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    8: 50
    random: 0
    random-low: 0
    random-high: 0

  floppy_disk_count:
    # how many Floppy Disks are in the game
    #
    # Vanilla is 5
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    7: 50
    random: 0
    random-low: 0
    random-high: 0

  scope_count:
    # how many Scopes are in the game
    #
    # Vanilla is 4
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  red_id_card_count:
    # how many Red ID Cards are in the game
    #
    # Vanilla is 1
    #
    # maximum total for all items is 144
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 126
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  early_scope:
    # make sure Scope is available early
    false: 50
    true: 0

  skill:
    # the difficulty level of the game
    #
    # higher skill:
    # - can require more precise platforming movement
    # - lowers your defense
    # - gives you less time to escape at the end
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    2: 50
    random: 0
    random-low: 0
    random-high: 0

  starting_cards:
    # how many ID Cards to start the game with
    #
    # Refilling at the ship also ensures you have at least this many cards.
    # 0 gives vanilla behavior.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 10
    2: 50
    random: 0
    random-low: 0
    random-high: 0
    vanilla: 0 # equivalent to 0

  room_gen:
    # whether to generate rooms with random terrain
    false: 50
    true: 0

Zork Grand Inquisitor:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  goal:
    # Determines the victory condition
    #
    # Three Artifacts: Retrieve the three artifacts of magic and place them in the walking castle
    three_artifacts: 50

  quick_port_foozle:
    # If true, the items needed to go down the well will be found in early locations for a smoother early game
    false: 0
    true: 50

  start_with_hotspot_items:
    # If true, the player will be given all the hotspot items at the start of the game, effectively removing the need
    # to enable the important hotspots in the game before interacting with them. Recommended for beginners
    #
    # Note: The spots these hotspot items would have occupied in the item pool will instead be filled with junk items.
    # Expect a higher volume of filler items if you enable this option
    false: 0
    true: 50

  deathsanity:
    # If true, adds 16 player death locations to the world
    false: 0
    true: 1

  grant_missable_location_checks:
    # If true, performing an irreversible action will grant the locations checks that would have become unobtainable as a
    # result of that action when you meet the item requirements
    #
    # Otherwise, the player is expected to potentially have to use the save system to reach those location checks. If you
    # don't like the idea of rarely having to reload an earlier save to get a location check, make sure this option is
    # enabled
    false: 50
    true: 0

---
name: Lajjo Secondary
description: Secondary game for Lajjo
game:
  Bumper Stickers: 0
  ChecksFinder: 0
  Clique: 1
  Lingo: 0

requires:
  version: 0.4.6

Bumper Stickers:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  task_advances:
    # Task Advances allow you to skip one step of a level task. They do not restock, so use them sparingly.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    4: 50
    random: 0
    random-low: 0
    random-high: 0

  turners:
    # Turners allow you to change the direction of a Bumper. These restock when the board resets.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    3: 0
    random: 1
    random-low: 0
    random-high: 0

  paint_cans:
    # Paint Cans allow you to change the color of a Bumper.
    #     The ones you get from the multiworld restock when the board resets; you also get one-time ones from score.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 5
    3: 0
    random: 1
    random-low: 0
    random-high: 0

  trap_count:
    # Traps affect the board in various ways.
    #     This number indicates how many total traps will be added to the item pool.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 15
    5: 50
    random: 0
    random-low: 0
    random-high: 0

  rainbow_trap_weight:
    # Rainbow Traps change the color of every bumper on the field.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  spinner_trap_weight:
    # Spinner Traps change the direction of every bumper on the field.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    50: 50
    random: 0
    random-low: 0
    random-high: 0

  killer_trap_weight:
    # Killer Traps end the current board immediately.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    0: 50
    random: 0
    random-low: 0
    random-high: 0

ChecksFinder:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

Clique:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  color:
    # Customize your button! Now available in 12 unique colors.
    red: 0
    orange: 0
    yellow: 0
    green: 0
    cyan: 0
    blue: 0
    magenta: 0
    purple: 0
    pink: 0
    brown: 0
    white: 0
    black: 0
    random: 1

  hard_mode:
    # Only for the most masochistically inclined... Requires button activation!
    false: 0
    true: 1

Lingo:
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # Locations: ensure everything can be reached and acquired.
    # Items: ensure all logically relevant items can be acquired.
    # Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0

  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_hints:
    # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations:
    # Prevent these locations from having an important item
    []

  priority_locations:
    # Prevent these locations from having an unimportant item
    []

  item_links:
    # Share part of your item pool with other players.
    []

  shuffle_doors:
    # If on, opening doors will require their respective "keys".
    # In "simple", doors are sorted into logical groups, which are all opened by receiving an item.
    # In "complex", the items are much more granular, and will usually only open a single door each.
    none: 50
    simple: 0
    complex: 0

  progressive_orange_tower:
    # When "Shuffle Doors" is on, this setting governs the manner in which the Orange Tower floors open up.
    # If off, there is an item for each floor of the tower, and each floor's item is the only one needed to access that floor.
    # If on, there are six progressive items, which open up the tower from the bottom floor upward.
    false: 0
    true: 50

  progressive_colorful:
    # When "Shuffle Doors" is on "complex", this setting governs the manner in which The Colorful opens up.
    # If off, there is an item for each room of The Colorful, meaning that random rooms in the middle of the sequence can open up without giving you access to them.
    # If on, there are ten progressive items, which open up the sequence from White forward.
    false: 0
    true: 50

  location_checks:
    # On "normal", there will be a location check for each panel set that would ordinarily open a door, as well as for
    # achievement panels and a small handful of other panels.
    # On "reduced", many of the locations that are associated with opening doors are removed.
    # On "insanity", every individual panel in the game is a location check.
    normal: 50
    reduced: 0
    insanity: 0

  shuffle_colors:
    # If on, an item is added to the pool for every puzzle color (besides White).
    # You will need to unlock the requisite colors in order to be able to solve puzzles of that color.
    false: 0
    true: 50

  shuffle_panels:
    # If on, the puzzles on each panel are randomized.
    # On "rearrange", the puzzles are the same as the ones in the base game, but are placed in different areas.
    none: 50
    rearrange: 0

  shuffle_paintings:
    # If on, the destination, location, and appearance of the painting warps in the game will be randomized.
    false: 50
    true: 0

  enable_pilgrimage:
    # If on, you are required to complete a pilgrimage in order to access the Pilgrim Antechamber.
    # If off, the pilgrimage will be deactivated, and the sun painting will be added to the pool, even if door shuffle is off.
    false: 50
    true: 0

  pilgrimage_allows_roof_access:
    # If on, you may use the Crossroads roof access during a pilgrimage (and you may be expected to do so).
    # Otherwise, pilgrimage will be deactivated when going up the stairs.
    false: 0
    true: 50

  pilgrimage_allows_paintings:
    # If on, you may use paintings during a pilgrimage (and you may be expected to do so).
    # Otherwise, pilgrimage will be deactivated when going through a painting.
    false: 0
    true: 50

  sunwarp_access:
    # Determines how access to sunwarps works.
    # On "normal", all sunwarps are enabled from the start.
    # On "disabled", all sunwarps are disabled. Pilgrimage must be disabled when this is used.
    # On "unlock", sunwarps start off disabled, and all six activate once you receive an item.
    # On "individual", sunwarps start off disabled, and each has a corresponding item that unlocks it.
    # On "progressive", sunwarps start off disabled, and they unlock in order using a progressive item.
    normal: 50
    disabled: 0
    unlock: 0
    individual: 0
    progressive: 0

  shuffle_sunwarps:
    # If on, the pairing and ordering of the sunwarps in the game will be randomized.
    false: 50
    true: 0

  victory_condition:
    # Change the victory condition.
    # On "the_end", the goal is to solve THE END at the top of the tower.
    # On "the_master", the goal is to solve THE MASTER at the top of the tower, after getting the number of achievements specified in the Mastery Achievements option.
    # On "level_2", the goal is to solve LEVEL 2 in the second room, after solving the number of panels specified in the Level 2 Requirement option.
    # On "pilgrimage", the goal is to solve PILGRIM in the Pilgrim Antechamber, typically after performing a Pilgrimage.
    the_end: 50
    the_master: 0
    level_2: 0
    pilgrimage: 0

  mastery_achievements:
    # The number of achievements required to unlock THE MASTER.
    # In the base game, 21 achievements are needed.
    # If you include The Scientific and The Unchallenged, which are in the base game but are not counted for mastery, 23 would be required.
    # If you include the custom achievement (The Wanderer), 24 would be required.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 24
    21: 50
    random: 0
    random-low: 0
    random-high: 0

  level_2_requirement:
    # The number of panel solves required to unlock LEVEL 2.
    # In the base game, 223 are needed.
    # Note that this count includes ANOTHER TRY.
    # When set to 1, the panel hunt is disabled, and you can access LEVEL 2 for free.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 800
    223: 50
    random: 0
    random-low: 0
    random-high: 0

  early_color_hallways:
    # When on, a painting warp to the color hallways area will appear in the starting room.
    # This lets you avoid being trapped in the starting room for long periods of time when door shuffle is on.
    false: 50
    true: 0

  trap_percentage:
    # Replaces junk items with traps, at the specified rate.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  trap_weights:
    # Specify the distribution of traps that should be placed into the pool.
    # If you don't want a specific type of trap, set the weight to zero.
    Atbash Trap: 1
    Iceland Trap: 1
    Slowness Trap: 1

  puzzle_skip_percentage:
    # Replaces junk items with puzzle skips, at the specified rate.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  death_link:
    # If on: Whenever another player on death link dies, you will be returned to the starting room.
    false: 0
    true: 1

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # The game decides what the replacement items will be.
    {}
