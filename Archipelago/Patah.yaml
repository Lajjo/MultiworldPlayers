# What is this file?
# This file contains options which allow you to configure your multiworld experience while allowing others
# to play how they want as well.

# How do I use it?
# The options in this file are weighted. This means the higher number you assign to a value, the more
# chances you have for that option to be chosen. For example, an option like this:
#
# map_shuffle:
#   on: 5
#   off: 15
#
# Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned off

# I've never seen a file like this before. What characters am I allowed to use?
# This is a .yaml file. You are allowed to use most characters.
# To test if your yaml is valid or not, you can use this website:
# http://www.yamllint.com/

description: My little pretty archipelago file for Super Metroid # Used to describe your yaml. Useful if you have multiple files
# Your name in-game. Spaces will be replaced with underscores and there is a 16 character limit
name: Patah{NUMBER}
#{player} will be replaced with the player's slot number.
#{PLAYER} will be replaced with the player's slot number if that slot number is greater than 1.
#{number} will be replaced with the counter value of the name.
#{NUMBER} will be replaced with the counter value of the name if the counter value is greater than 1.
game:
  Super Metroid: 0
  A Link to the Past: 0
  Hollow Knight: 1
  SMZ3: 0
  ChecksFinder: 0
  ArchipIDLE: 0
  Slay the Spire: 0
  Rogue Legacy: 0
requires:
  version: 0.3.1 # Version of Archipelago required for this yaml to work as expected.
# Shared Options supported by all games:
accessibility:
  items: 0 # Guarantees you will be able to acquire all items, but you may not be able to access all locations
  locations: 50 # Guarantees you will be able to access all locations, and therefore all items
  none: 0 # Guarantees only that the game is beatable. You may not be able to access all locations or acquire all items
progression_balancing:
  on: 50 # A system to reduce BK, as in times during which you can't do anything by moving your items into an earlier access sphere to make it likely you have stuff to do
  off: 0 # Turn this off if you don't mind a longer multiworld, or can glitch/sequence break around missing items.
ArchipIDLE:
  SomeSetting: 'ostkaka'
ChecksFinder:
  SomeSetting: 'ostkaka'
SMZ3:
  sm_logic:
    normal: 2
    hard: 1
  sword_location:
    randomized: 50
    early: 0
    uncle: 0
  morph_location:
    randomized: 50
    early: 0
    original: 0
  key_shuffle:
    none: 1
    keysanity: 1
    
  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50

  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 1
    items: 1
    minimal: 1
    
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
Hollow Knight:
  RandomizeDreamers: 'true'
  RandomizeSkills: 'true'
  RandomizeFocus: 'false'
  RandomizeSwim: 'false'
  RandomizeCharms: 'true'
  RandomizeKeys: 'true'
  RandomizeMaskShards: 'true'
  RandomizeVesselFragments: 'true'
  RandomizeCharmNotches: 'true'
  RandomizePaleOre: 'true'
  RandomizeGeoChests: 'true'
  RandomizeJunkPitChests: 'true'
  RandomizeRancidEggs: 'true'
  RandomizeRelics: 'true'
  RandomizeWhisperingRoots: 'true'
  RandomizeBossEssence: 'true'
  RandomizeGrubs: 'true'
  RandomizeMimics: 'false'
  RandomizeMaps: 'true'
  RandomizeStags: 'true'
  RandomizeLifebloodCocoons: 'true'
  RandomizeGrimmkinFlames: 'true'
  RandomizeJournalEntries: 'true'
  RandomizeNail: 'false'
  RandomizeGeoRocks: 'true'
  RandomizeBossGeo: 'true'
  RandomizeSoulTotems: 'true'
  RandomizeLoreTablets: 'true'
  PreciseMovement: 'false'
  ProficientCombat: 'false'
  BackgroundObjectPogos: 'false'
  EnemyPogos: 'false'
  ObscureSkips: 'false'
  ShadeSkips: 'false'
  InfectionSkips: 'false'
  FireballSkips: 'false'
  SpikeTunnels: 'false'
  AcidSkips: 'false'
  DamageBoosts: 'false'
  DangerousSkips: 'false'
  DarkRooms: 'false'
  ComplexSkips: 'false'
  DifficultSkips: 'false'
  RemoveSpellUpgrades: 'false'
  StartLocation: random
  MinimumGrubPrice: 1
  MaximumGrubPrice: 23
  MinimumEssencePrice: 1
  MaximumEssencePrice: 1400
  MinimumEggPrice: 1
  MaximumEggPrice: 10
  MinimumCharmPrice: 1
  MaximumCharmPrice: 20
  RandomCharmCosts: -1
  EggShopSlots: 16

  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50

  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 1
    items: 1
    minimal: 1
    
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
Super Metroid:
  start_inventory_removes_from_pool:
    false: 50
    true: 0
  preset: # choose one of the preset or specify "varia_custom" to use varia_custom_preset option or specify "custom" to use custom_preset option
    newbie: 0
    casual: 0
    regular: 50
    veteran: 0
    expert: 0
    master: 0
    samus: 0
    season_races: 0
    smrat2021: 0
    solution: 0
    custom: 0
    varia_custom: 0
  start_location:
    ceres: 0
    landing_site: 15
    gauntlet_top: 1
    green_brinstar_elevator: 1
    big_pink: 1
    etecoons_supers: 1
    wrecked_ship_main: 1
    firefleas_top: 1
    business_center: 1
    bubble_mountain: 1
    mama_turtle: 1
    watering_hole: 0
    aqueduct: 1
    red_brinstar_elevator: 1
    golden_four: 0
  death_link: # When you die, everyone dies. Of course the reverse is true too.
    disable: 0
    enable: 1
    enable_survive: 0
  max_difficulty:
    easy: 0
    medium: 0
    hard: 0
    harder: 0
    hardcore: 50
    mania: 0
    infinity: 0
  morph_placement:
    early: 0
    normal: 1
  strict_minors:
    false: 50
    true: 0
  missile_qty:
    # you can add additional values between minimum and maximum
    10: 0 # minimum value
    90: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    30: 50
  super_qty:
    # you can add additional values between minimum and maximum
    10: 0 # minimum value
    90: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    20: 50
  power_bomb_qty:
    # you can add additional values between minimum and maximum
    10: 50 # minimum value
    90: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  minor_qty:
    # you can add additional values between minimum and maximum
    7: 0 # minimum value
    100: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  energy_qty:
    ultra_sparse: 0
    sparse: 0
    medium: 0
    vanilla: 50
  area_randomization:
    off: 7
    light: 3
    on: 1
  area_layout:
    false: 3
    true: 1
  doors_colors_rando:
    false: 3
    true: 1
  allow_grey_doors:
    false: 5
    true: 1
  boss_randomization:
    false: 5
    true: 1
  fun_combat:
    false: 5
    true: 1
  fun_movement:
    false: 5
    true: 1
  fun_suits:
    false: 5
    true: 1
  layout_patches:
    false: 3
    true: 1
  varia_tweaks:
    false: 5
    true: 1
  nerfed_charge:
    false: 50
    true: 0
  gravity_behaviour:
    vanilla: 1
    balanced: 1
    progressive: 1
  elevators_doors_speed:
    false: 0
    true: 50
  spin_jump_restart:
    false: 0
    true: 1
  infinite_space_jump:
    false: 50
    true: 0
  refill_before_save:
    false: 50
    true: 0
  hud:
    false: 1
    true: 1
  animals:
    false: 1
    true: 1
  no_music:
    false: 50
    true: 0
  random_music:
    false: 5
    true: 1
  custom_preset: # 
    #    see https://randommetroidsolver.pythonanywhere.com/presets for detailed info on each preset settings
    #    knows: each skill (know) has a pair [can use, perceived difficulty using one of 1, 5, 10, 25, 50 or 100 each one matching a max_difficulty]
    #    settings: hard rooms, hellruns and bosses settings
    #    controller: predefined controller mapping and moon walk setting
    #    
    controller: {}
    knows: {}
    settings: {}

  varia_custom_preset: # use an entry from the preset list on https://randommetroidsolver.pythonanywhere.com/presets
    {}

  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50

  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 1
    items: 1
    minimal: 1
    
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
A Link to the Past:
  ### Logic Section ###
  glitches_required: # Determine the logic required to complete the seed
    none: 50 # No glitches required
    minor_glitches: 0 # Puts fake flipper, waterwalk, super bunny shenanigans, and etc into logic
    overworld_glitches: 0 # Assumes the player has knowledge of both overworld major glitches (boots clips, mirror clips) and minor glitches
    hybrid_major_glitches: 0 # In addition to overworld glitches, also requires underworld clips between dungeons.
    no_logic: 0 # Your own items are placed with no regard to any logic; such as your Fire Rod can be on your Trinexx.
    # Other players items are placed into your world under HMG logic
  dark_room_logic: # Logic for unlit dark rooms
    lamp: 50 # require the Lamp for these rooms to be considered accessible.
    torches: 0 # in addition to lamp, allow the fire rod and presence of easily accessible torches for access
    none: 0 # all dark rooms are always considered doable, meaning this may force completion of rooms in complete darkness
  restrict_dungeon_item_on_boss: # aka ambrosia boss items
    on: 0 # prevents unshuffled compasses, maps and keys to be boss drops, they can still drop keysanity and other players' items
    off: 50
  ### End of Logic Section ###
  bigkey_shuffle: # Big Key Placement
    original_dungeon: 1
    own_dungeons: 1
    own_world: 0
    any_world: 3
    different_world: 0
    start_with: 0
  smallkey_shuffle: # Small Key Placement
    original_dungeon: 5
    own_dungeons: 1
    own_world: 0
    any_world: 3
    different_world: 0
    universal: 0
    start_with: 0
  compass_shuffle: # Compass Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0
    start_with: 0
  map_shuffle: # Map Placement
    original_dungeon: 0
    own_dungeons: 0
    own_world: 0
    any_world: 1
    different_world: 0
    start_with: 0
  dungeon_counters:
    on: 1 # Always display amount of items checked in a dungeon
    pickup: 0 # Show when compass is picked up
    default: 0 # Show when compass is picked up if the compass itself is shuffled
    off: 0 # Never show item count in dungeons
  progressive: # Enable or disable progressive items (swords, shields, bow)
    on: 1 # All items are progressive
    off: 1 # No items are progressive
    grouped_random: 1 # Randomly decides for all items. Swords could be progressive, shields might not be
  entrance_shuffle:
    none: 5 # Vanilla game map. All entrances and exits lead to their original locations. You probably want this option
    dungeonssimple: 3 # Shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon
    dungeonsfull: 3 # Shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons, but keep dungeons to a specific world
    dungeonscrossed: 3 # like dungeonsfull, but allow cross-world traversal through a dungeon. Warning: May force repeated dungeon traversal
    simple: 2 # Entrances are grouped together before being randomized. Simple uses the most strict grouping rules
    restricted: 2 # Less strict than simple
    full: 1 # Less strict than restricted
    crossed: 1 # Less strict than full
    insanity: 0 # Very few grouping rules. Good luck
    # you can also define entrance shuffle seed, like so:
    crossed-1000: 0 # using this method, you can have the same layout as another player and share entrance information
    # however, many other settings like logic, world state, retro etc. may affect the shuffle result as well.
    crossed-group-myfriends: 0 # using this method, everyone with "group-myfriends" will share the same seed
  goals:
    ganon: 3 # Climb GT, defeat Agahnim 2, and then kill Ganon
    crystals: 3 # Only killing Ganon is required. However, items may still be placed in GT
    bosses: 3 # Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2)
    pedestal: 1 # Pull the Triforce from the Master Sword pedestal
    ganon_pedestal: 1 # Pull the Master Sword pedestal, then kill Ganon
    triforce_hunt: 1 # Collect 20 of 30 Triforce pieces spread throughout the worlds, then turn them in to Murahadala in front of Hyrule Castle
    local_triforce_hunt: 0 # Collect 20 of 30 Triforce pieces spread throughout your world, then turn them in to Murahadala in front of Hyrule Castle
    ganon_triforce_hunt: 1 # Collect 20 of 30 Triforce pieces spread throughout the worlds, then kill Ganon
    local_ganon_triforce_hunt: 0 # Collect 20 of 30 Triforce pieces spread throughout your world, then kill Ganon
    ice_rod_hunt: 0 # You start with everything needed to 216 the seed. Find the Ice rod, then kill Trinexx at Turtle rock.
  open_pyramid:
    goal: 0 # Opens the pyramid if the goal requires you to kill Ganon, unless the goal is Slow Ganon or All Dungeons
    auto: 1 # Same as Goal, but also is closed if holes are shuffled and ganon is part of the shuffle pool
    yes: 0 # Pyramid hole is always open. Ganon's vulnerable condition is still required before he can he hurt
    no: 0 # Pyramid hole is always closed until you defeat Agahnim atop Ganon's Tower
  triforce_pieces_mode: #Determine how to calculate the extra available triforce pieces.
    extra: 0 # available = triforce_pieces_extra + triforce_pieces_required
    percentage: 0 # available = (triforce_pieces_percentage /100) * triforce_pieces_required
    available: 50 # available = triforce_pieces_available
  triforce_pieces_extra: # Set to how many extra triforces pieces are available to collect in the world.
    # Format "pieces: chance"
    0: 0
    5: 50
    10: 50
    15: 0
    20: 0
  triforce_pieces_percentage: # Set to how many triforce pieces according to a percentage of the required ones, are available to collect in the world.
    # Format "pieces: chance"
    100: 0 #No extra
    150: 50 #Half the required will be added as extra
    200: 0 #There are the double of the required ones available.
  triforce_pieces_available: # Set to how many triforces pieces are available to collect in the world. Default is 30. Max is 90, Min is 1
    # Format "pieces: chance"
    25: 0
    30: 50
    40: 0
    50: 0
  triforce_pieces_required: # Set to how many out of X triforce pieces you need to win the game in a triforce hunt. Default is 20. Max is 90, Min is 1
    # Format "pieces: chance"
    15: 0
    20: 50
    30: 0
    40: 0
    50: 0
  crystals_needed_for_gt: # Crystals required to open GT
    0: 0
    7: 0
    random: 1
    random-low: 0 # any valid number, weighted towards the lower end
    random-middle: 0 # any valid number, weighted towards the central range
    random-high: 0 # any valid number, weighted towards the higher end
  crystals_needed_for_ganon: # Crystals required to hurt Ganon
    0: 0
    7: 0
    random: 1
    random-low: 0
    random-middle: 0
    random-high: 0
  mode:
    standard: 1 # Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary
    open: 2 # Begin the game from your choice of Link's House or the Sanctuary
    inverted: 1 # Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World, and the Light World game map is altered
  retro:
    on: 0 # you must buy a quiver to use the bow, take-any caves and an old-man cave are added to the world. You may need to find your sword from the old man's cave
    off: 50
  hints: # Vendors: King Zora and Bottle Merchant say what they're selling.
  #    On/Full: Put item and entrance placement hints on telepathic tiles and some NPCs, Full removes joke hints.
    'on': 50
    vendors: 0
    'off': 0
    full: 0
  swordless:
    on: 0 # Your swords are replaced by rupees. Gameplay changes have been made to accommodate this change
    off: 1
  item_pool:
    easy: 0 # Doubled upgrades, progressives, and etc
    normal: 50 # Item availability remains unchanged from vanilla game
    hard: 0 # Reduced upgrade availability (max: 14 hearts, blue mail, tempered sword, fire shield, no silvers unless swordless)
    expert: 0 # Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers unless swordless)
  item_functionality:
    easy: 0 # Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
    normal: 50 # Vanilla item functionality
    hard: 0 # Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
    expert: 0 # Vastly reduces the helpfulness of items (potions barely effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled outside ganon)
  tile_shuffle: # Randomize the tile layouts in flying tile rooms
    on: 1
    off: 0
  misery_mire_medallion: # required medallion to open Misery Mire front entrance
    random: 50
    Ether: 0
    Bombos: 0
    Quake: 0
  turtle_rock_medallion: # required medallion to open Turtle Rock front entrance
    random: 50
    Ether: 0
    Bombos: 0
    Quake: 0
  ### Enemizer Section ###
  boss_shuffle:
    none: 4 # Vanilla bosses
    basic: 2 # Existing bosses except Ganon and Agahnim are shuffled throughout dungeons
    full: 2 # 3 bosses can occur twice
    chaos: 1 # Any boss can appear any amount of times
    singularity: 0 # Picks a boss, tries to put it everywhere that works, if there's spaces remaining it picks a boss to fill those
  enemy_shuffle: # Randomize enemy placement
    on: 0
    off: 50
  killable_thieves: # Make thieves killable
    on: 0 # Usually turned on together with enemy_shuffle to make annoying thief placement more manageable
    off: 50
  bush_shuffle: # Randomize the chance that bushes have enemies and the enemies under said bush
    on: 0
    off: 50
  enemy_damage:
    default: 50 # Vanilla enemy damage
    shuffled: 0 # Enemies deal 0 to 4 hearts and armor helps
    chaos: 0 # Enemies deal 0 to 8 hearts and armor just reshuffles the damage
  enemy_health:
    default: 50 # Vanilla enemy HP
    easy: 0 # Enemies have reduced health
    hard: 0 # Enemies have increased health
    expert: 0 # Enemies have greatly increased health
  pot_shuffle:
    'on': 0 # Keys, items, and buttons hidden under pots in dungeons are shuffled with other pots in their supertile
    'off': 50 # Default pot item locations
  ### End of Enemizer Section ###
  ### Beemizer ###
  # can add weights for any whole number between 0 and 100
  beemizer_total_chance: # Remove items from the global item pool and replace them with single bees (fill bottles) and bee traps
    0: 50   # No junk fill items are replaced (Beemizer is off)
    25: 0   # 25% chance for each junk fill item (rupees, bombs and arrows) to be replaced with bees
    50: 0   # 50% chance for each junk fill item (rupees, bombs and arrows) to be replaced with bees
    75: 0   # 75% chance for each junk fill item (rupees, bombs and arrows) to be replaced with bees
    100: 0  # All junk fill items (rupees, bombs and arrows) are replaced with bees
  beemizer_trap_chance:
    60: 50  # 60% chance for each beemizer replacement to be a trap, 40% chance to be a single bee
    70: 0   # 70% chance for each beemizer replacement to be a trap, 30% chance to be a single bee
    80: 0   # 80% chance for each beemizer replacement to be a trap, 20% chance to be a single bee
    90: 0   # 90% chance for each beemizer replacement to be a trap, 10% chance to be a single bee
    100: 0  # All beemizer replacements are traps
  ### Shop Settings ###
  shop_item_slots: # Maximum amount of shop slots to be filled with regular item pool items (such as Moon Pearl)
    0: 1
    5: 0
    15: 0
    30: 0
    random: 1 # 0 to 30 evenly distributed
  shop_price_modifier: # Percentage modifier for shuffled item prices in shops
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    400: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    100: 50
  shop_shuffle:
    none: 50
    g: 0 # Generate new default inventories for overworld/underworld shops, and unique shops
    f: 0 # Generate new default inventories for every shop independently
    i: 0 # Shuffle default inventories of the shops around
    p: 0 # Randomize the prices of the items in shop inventories
    u: 0 # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld)
    w: 0 # Consider witch's hut like any other shop and shuffle/randomize it too
    ip: 0 # Shuffle inventories and randomize prices
    fpu: 0 # Generate new inventories, randomize prices and shuffle capacity upgrades into item pool
    uip: 0 # Shuffle inventories, randomize prices and shuffle capacity upgrades into the item pool
    # You can add more combos
  ### End of Shop Section ###
  shuffle_prizes: # aka drops
    none: 0 # do not shuffle prize packs
    g: 50 # shuffle "general" prize packs, as in enemy, tree pull, dig etc.
    b: 0 # shuffle "bonk" prize packs
    bg: 0 # shuffle both
  timer:
    none: 50 # No timer will be displayed.
    timed: 0 # Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest time at the end.
    timed_ohko: 0 # Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as the clock as at zero, Link will die in one hit.
    ohko: 0 # Timer always at zero. Permanent OHKO.
    timed_countdown: 0 # Starts the clock with forty minutes. Same clocks as timed mode, but if the clock hits zero you lose. You can still keep playing, though.
    display: 0 # Displays a timer, but otherwise does not affect gameplay or the item pool.
  countdown_start_time: # For timed_ohko and timed_countdown timer modes, the amount of time in minutes to start with
    0: 0 # For timed_ohko, starts in OHKO mode when starting the game
    10: 50
    20: 0
    30: 0
    60: 0
  red_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock
    -2: 50
    1: 0
  blue_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock
    1: 0
    2: 50
  green_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock
    4: 50
    10: 0
    15: 0
  glitch_boots:
    on: 50 # Start with Pegasus Boots in any glitched logic mode that makes use of them
    off: 0
  # rom options section
  random_sprite_on_event: # An alternative to specifying randomonhit / randomonexit / etc... in sprite down below.
    enabled:  # If enabled, sprite down below is ignored completely, (although it may become the sprite pool)
      on: 0
      off: 1
    on_hit:  # Random sprite on hit. Being hit by things that cause 0 damage still counts.
      on: 1
      off: 0
    on_enter:  # Random sprite on underworld entry. Note that entering hobo counts.
      on: 0
      off: 1
    on_exit:  # Random sprite on underworld exit. Exiting hobo does not count.
      on: 0
      off: 1
    on_slash:  # Random sprite on sword slash. Note, it still counts if you attempt to slash while swordless.
      on: 0
      off: 1
    on_item:  # Random sprite on getting an item.  Anything that causes you to hold an item above your head counts.
      on: 0
      off: 1
    on_bonk:  # Random sprite on bonk.
      on: 0
      off: 1
    on_everything:  # Random sprite on ALL currently implemented events, even if not documented at present time.
      on: 0
      off: 1
    use_weighted_sprite_pool:  # Always on if no sprite_pool exists, otherwise it controls whether to use sprite as a weighted sprite pool
      on: 0
      off: 1
  #sprite_pool: # When specified, limits the pool of sprites used for randomon-event to the specified pool.  Uncomment to use this.
  #  - link
  #  - pride link
  #  - penguin link
  #  - random  # You can specify random multiple times for however many potentially unique random sprites you want in your pool.
  sprite: # Enter the name of your preferred sprite and weight it appropriately
    random: 1
    randomonhit: 0 # Random sprite on hit
    randomonenter: 0 # Random sprite on entering the underworld.
    randomonexit: 0 # Random sprite on exiting the underworld.
    randomonslash: 0 # Random sprite on sword slashes
    randomonitem: 0  # Random sprite on getting items.
    randomonbonk: 0 # Random sprite on bonk.
    # You can combine these events like this.  randomonhit-enter-exit  if you want it on hit, enter, exit.
    randomonall: 0 # Random sprite on any and all currently supported events. Refer to above for the supported events.
    Link: 0 # To add other sprites: open the gui/Creator, go to adjust, select a sprite and write down the name the gui calls it
  music: # If "off", all in-game music will be disabled
    on: 50
    off: 0
  quickswap: # Enable switching items by pressing the L+R shoulder buttons
    on: 50
    off: 0
  triforcehud: # Disable visibility of the triforce hud unless collecting a piece or speaking to Murahadala
    normal: 0 # original behavior (always visible)
    hide_goal: 50 # hide counter until a piece is collected or speaking to Murahadala
    hide_required: 0 # Always visible, but required amount is invisible until determined by Murahadala
    hide_both: 0 # Hide both under above circumstances
  reduceflashing: # Reduces instances of flashing such as lightning attacks, weather, ether and more.
    on: 50
    off: 0
  menuspeed: # Controls how fast the item menu opens and closes
    normal: 0
    instant: 0
    double: 0
    triple: 0
    quadruple: 1
    half: 0
  heartcolor: # Controls the color of your health hearts
    red: 0
    blue: 0
    green: 0
    yellow: 0
    random: 1
  heartbeep: # Controls the frequency of the low-health beeping
    double: 0
    normal: 50
    half: 0
    quarter: 0
    off: 0
  ow_palettes: # Change the colors of the overworld
    default: 0 # No changes
    good: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  uw_palettes: # Change the colors of caves and dungeons
    default: 0 # No changes
    good: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  hud_palettes: # Change the colors of the hud
    default: 0 # No changes
    good: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  sword_palettes: # Change the colors of swords
    default: 0 # No changes
    good: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  shield_palettes: # Change the colors of shields
    default: 0 # No changes
    good: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0

  # triggers that replace options upon rolling certain options
  legacy_weapons: # this is not an actual option, just a set of weights to trigger from
    trigger_disabled: 50
    randomized: 0 # Swords are placed randomly throughout the world
    assured: 0 # Begin with a sword, the rest are placed randomly throughout the world
    vanilla: 0 # Swords are placed in vanilla locations in your own game (Uncle, Pyramid Fairy, Smiths, Pedestal)
    swordless: 0 # swordless mode

  death_link:
    false: 0
    true: 1

  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50

  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 1
    items: 1
    minimal: 1

  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
Slay the Spire:
  character: # Pick What Character you wish to play with.
    ironclad: 1
    silent: 1
    defect: 1
    watcher: 1
  ascension: # What Ascension do you wish to play with.
    # you can add additional values between minimum and maximum
    0: 50 # minimum value
    20: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  heart_run: # Whether or not you will need to collect they 3 keys to unlock the final act
    #     and beat the heart to finish the game.
    false: 1
    true: 1
  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50
  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 0
    items: 50
    minimal: 0
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
Rogue Legacy:
  starting_gender:
    sir: 1
    lady: 1
  starting_class:
    knight: 1
    mage: 1
    barbarian: 1
    knave: 1
    shinobi: 1
    miner: 1
    spellthief: 1
    lich: 1
  available_classes:
    - Spellthief
    - Barbarian
    - Dragon
    - Knave
    - Mage
    - Lich
    - Traitor
    - Knight
    - Miner
    - Shinobi

  new_game_plus: # 
    #    Puts the castle in new game plus mode which vastly increases enemy level, but increases gold gain by 50%. Not
    #    recommended for those inexperienced to Rogue Legacy!
    #    
    normal: 50
    new_game_plus: 0
    new_game_plus_2: 0
  fairy_chests_per_zone: # 
    #    Determines the number of Fairy Chests in a given zone that contain items. After these have been checked, only stat
    #    bonuses can be found in Fairy Chests.
    #    
    # you can add additional values between minimum and maximum
    5: 1 # minimum value
    15: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  chests_per_zone: # 
    #    Determines the number of Non-Fairy Chests in a given zone that contain items. After these have been checked, only
    #    gold or stat bonuses can be found in Chests.
    #    
    # you can add additional values between minimum and maximum
    15: 0 # minimum value
    30: 0 # maximum value
    random: 0
    random-low: 1
    random-high: 0
  universal_fairy_chests: # 
    #    Determines if fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    #    
    false: 0
    true: 1
  universal_chests: # 
    #    Determines if non-fairy chests should be combined into one pool instead of per zone, similar to Risk of Rain 2.
    #    
    false: 50
    true: 0
  vendors: # 
    #    Determines where to place the Blacksmith and Enchantress unlocks in logic (or start with them unlocked).
    #    
    start_unlocked: 0
    early: 1
    normal: 1
    anywhere: 1
  architect: # 
    #    Determines where the Architect sits in the item pool.
    #    
    start_unlocked: 0
    normal: 50
    disabled: 0
  architect_fee: # 
    #    Determines how large of a percentage the architect takes from the player when utilizing his services. 100 means he
    #    takes all your gold. 0 means his services are free.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    100: 0 # maximum value
    random: 0
    random-low: 0
    random-high: 0
    40: 50
  disable_charon: # 
    #    Prevents Charon from taking your money when you re-enter the castle. Also removes Haggling from the Item Pool.
    #    
    false: 50
    true: 0
  require_purchasing: # 
    #    Determines where you will be required to purchase equipment and runes from the Blacksmith and Enchantress before
    #    equipping them. If you disable require purchasing, Manor Renovations are scaled to take this into account.
    #    
    false: 0
    true: 50
  progressive_blueprints: # 
    #    Instead of shuffling blueprints randomly into the pool, blueprint unlocks are progressively unlocked. You would get
    #    Squire first, then Knight, etc., until finally Dark.
    #    
    false: 1
    true: 1
  gold_gain_multiplier: # 
    #    Adjusts the multiplier for gaining gold from all sources.
    #    
    normal: 50
    quarter: 0
    half: 0
    double: 0
    quadruple: 0
  number_of_children: # 
    #    Determines the number of offspring you can choose from on the lineage screen after a death.
    #    
    # you can add additional values between minimum and maximum
    1: 0 # minimum value
    5: 0 # maximum value
    random: 1
    random-low: 0
    random-high: 0
    3: 0
  free_diary_on_generation: # 
    #    Allows the player to get a free diary check every time they regenerate the castle in the starting room.
    #    
    false: 0
    true: 50
  khidr: # 
    #    Determines if Neo Khidr replaces Khidr in their boss room.
    #    
    vanilla: 50
    challenge: 0
  alexander: # 
    #    Determines if Alexander the IV replaces Alexander in their boss room.
    #    
    vanilla: 50
    challenge: 0
  leon: # 
    #    Determines if Ponce de Freon replaces Ponce de Leon in their boss room.
    #    
    vanilla: 50
    challenge: 0
  herodotus: # 
    #    Determines if Astrodotus replaces Herodotus in their boss room.
    #    
    vanilla: 50
    challenge: 0
  health_pool: # 
    #    Determines the number of Health Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    15: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  mana_pool: # 
    #    Determines the number of Mana Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    15: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  attack_pool: # 
    #    Determines the number of Attack Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    15: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  magic_damage_pool: # 
    #    Determines the number of Magic Damage Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    15: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  armor_pool: # 
    #    Determines the number of Armor Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    10: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  equip_pool: # 
    #    Determines the number of Equip Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    10: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  crit_chance_pool: # 
    #    Determines the number of Crit Chance Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    5: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  crit_damage_pool: # 
    #    Determines the number of Crit Damage Ups in the item pool.
    #    
    # you can add additional values between minimum and maximum
    0: 0 # minimum value
    5: 50 # maximum value
    random: 0
    random-low: 0
    random-high: 0
  allow_default_names: # 
    #    Determines if the default names defined in the vanilla game are allowed to be used. Warning: Your world will not
    #    generate if the number of Additional Names defined is less than the Number of Children value.
    #    
    false: 0
    true: 50
  additional_lady_names: # 
    #    Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    #    of names your children can have. The first value will also be your initial character's name depending on Starting
    #    Gender.
    #    
    [ 'Roffelina' ]

  additional_sir_names: # 
    #    Set of additional names your potential offspring can have. If Allow Default Names is disabled, this is the only list
    #    of names your children can have. The first value will also be your initial character's name depending on Starting
    #    Gender.
    #    
    [ 'Roffe' ]

  death_link: # When you die, everyone dies. Of course the reverse is true too.
    false: 0
    true: 1
  progression_balancing: # A system that moves progression earlier, to try and prevent the player from getting stuck and bored early.
    false: 0
    true: 50
  accessibility: # Set rules for reachability of your items/locations.
    #    Locations: ensure everything can be reached and acquired.
    #    Items: ensure all logically relevant items can be acquired.
    #    Minimal: ensure what is needed to reach your goal can be acquired.
    locations: 1
    items: 0
    minimal: 0
  local_items: # Forces these items to be in their native world.
    []

  non_local_items: # Forces these items to be outside their native world.
    []

  start_inventory: # Start with these items.
    {}

  start_hints: # Start with these item's locations prefilled into the !hint command.
    []

  start_location_hints: # Start with these locations and their item prefilled into the !hint command
    []

  exclude_locations: # Prevent these locations from having an important item
    []

  priority_locations: # Prevent these locations from having an unimportant item
    []

  item_links: # Share part of your item pool with other players.
    []
