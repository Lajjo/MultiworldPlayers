# What is this file?
# This file contains options which allow you to configure your multiworld experience while allowing others
# to play how they want as well.
#
# How do I use it?
# The options in this file are weighted. This means the higher number you assign to a value, the more
# chances you have for that option to be chosen. For example, an option like this:
#
# map_shuffle:
#   on: 5
#   off: 15
#
# Means you have 5 chances for map shuffle to not occur, and 15 chances for map shuffle to be turned on

# I've never seen a file like this before. What characters am I allowed to use?
# This is a .yaml file. You are allowed to use most characters.
# To test if your yaml is valid or not, you can use this website:
# http://www.yamllint.com/

# Det luktar lite ost

description: Patah - Main # Used to describe your yaml. Useful if you have multiple files
name: Patah # Your name in-game. Spaces and underscores will be replaced with dashes
### Logic Section ###
glitches_required: # Determine the logic required to complete the seed
  none: 1 # No glitches required
  minor_glitches: 0 # puts fake flipper and super bunny shenanigans into logic
  overworld_glitches: 0 # Assumes the player knows how to perform overworld glitches like fake flipper, water walk, etc
  no_logic: 0 # Items are places completely at random and with no regard for logic. Your fire rod could be on Trinexx
dark_room_logic: # Logic for unlit dark rooms
  lamp: 1 # require the Lamp for these rooms to be considered accessible.
  torches: 0 # in addition to lamp, allow the fire rod and presence of easily accessible torches for access
  none: 0 # all dark rooms are always considered doable, meaning this may force completion of rooms in complete darkness
restrict_dungeon_item_on_boss: # aka ambrosia boss items
  on: 1 # prevents unshuffled compasses, maps and keys to be boss drops, they can still drop keysanity and other players' items
  off: 3
### End of Logic Section ###
#meta_ignore: # Nullify options specified in the meta.yaml file. Adding an option here guarantees it will not occur in your seed, even if the .yaml file specifies it
#  world_state:
#    - inverted # Never play inverted seeds
#    - retro # Never play retro seeds
#  weapons:
#    - swordless # Never play a swordless seed
# map_shuffle: # Shuffle dungeon maps into the world and other dungeons, including other players' worlds
#   on: 0
#   off: 1
# compass_shuffle: # Shuffle compasses into the world and other dungeons, including other players' worlds
#   on: 0
#   off: 1
# smallkey_shuffle: # Shuffle small keys into the world and other dungeons, including other players' worlds
#   on: 0
#   off: 1
# bigkey_shuffle: # Shuffle big keys into the world and other dungeons, including other players' worlds
#   on: 0
#   off: 1
# local_keys: # Keep small keys and big keys local to your world.
#   on: 0
#   off: 1
dungeon_items: # alternative to the 4 shuffles and local_keys above this, does nothing until the respective 4 shuffles and local_keys above are deleted
  none: 0 # shuffle none of the 4
  mc: 8 # shuffle Maps and Compass
  mcs: 1
  mcb: 2
  mcsb: 1 # shuffle all of the 4, any combination of m, c, s and b will shuffle the respective item, or not if it's missing, so you can add more options here
  lmcsb: 0 # like mcsb above, but with keys kept local to your world. l is what makes your keys local,  or not if it's missing.
dungeon_counters:
  on: 1 # always display amount of items checked in a dungeon
  pickup: 0 # show when compass is picked up
  default: 0 # show when compass is picked up if the compass itself is shuffled
  off: 0 # never show item count in dungeons
accessibility:
  items: 0 # Guarantees you will be able to acquire all items, but you may not be able to access all locations
  locations: 1 # Guarantees you will be able to access all locations, and therefore all items
  none: 0 # Guarantees only that the game is beatable. You may not be able to access all locations or acquire all items
progressive: # Enable or disable progressive items (swords, shields, bow)
  on: 3 # All items progressive
  off: 1 # No items progressive
  random: 2 # Randomly decides for all items. Swords could be progressive, shields might not be
entrance_shuffle: # Documentation: https://alttpr.com/en/options#entrance_shuffle
  none: 10 # Vanilla game map. All entrances and exits lead to their original locations. You probably want this option
  dungeonssimple: 10 # shuffle just dungeons amongst each other, swapping dungeons entirely, so Hyrule Castle is always 1 dungeon
  dungeonsfull: 6 # shuffle any dungeon entrance with any dungeon interior, so Hyrule Castle can be 4 different dungeons
  simple: 3 # Entrances are grouped together before being randomized. Simple uses the most strict grouping rules
  restricted: 1 # Less strict than simple
  full: 1 # Less strict than restricted
  crossed: 0 # Less strict than full
  insanity: 0 # Very few grouping rules. Good luck.
goals: 
  #### TRIFOCE HUNTS SPECIFIED IN linked_options ####
  ganon: 3 # Climb GT, defeat Agahnim 2, then kill Ganon
  fast_ganon: 3 # Only killing Ganon is required. The hole is always open. Items may still be placed in GT, however
  dungeons: 2 # Defeat the boss of all dungeons, including Agahnim's tower and GT (Aga 2)
  pedestal: 0 # Pull the Triforce from the Master Sword pedestal
  ganon_pedestal: 1 # Pull the Master Sword pedestal, then kill Ganon
  triforce_hunt: 1 # Collect 20 of 30 Triforce pieces spread throughout the worlds, then turn them in to Murahadala in front of Hyrule Castle
  local_triforce_hunt: 0 # Collect 20 of 30 Triforce pieces spread throughout your world, then turn them in to Murahadala in front of Hyrule Castle
  ganon_triforce_hunt: 1 # Collect 20 of 30 Triforce pieces spread throughout the worlds, then kill Ganon
  local_ganon_triforce_hunt: 0 # Collect 20 of 30 Triforce pieces spread throughout your world, then kill Ganon
triforce_pieces_mode: #Determine how to calculate the extra available triforce pieces.
  extra: 0 # available = triforce_pieces_extra + triforce_pieces_required
  percentage: 1 # available = (triforce_pieces_percentage /100) * triforce_pieces_required
  available: 0 # available = triforce_pieces_available
triforce_pieces_extra: # Set to how many extra triforces pieces are available to collect in the world. 
  # Format "pieces: chance"
  0: 0
  5: 50
  10: 50
  15: 0
  20: 0
triforce_pieces_percentage: # Set to how many extra triforces pieces according to a percentage of the required ones, are available to collect in the world. 
  # Format "pieces: chance"
  100: 1 #No extra
  105: 2
  110: 3
  115: 4
  120: 5
  125: 6
triforce_pieces_available: # Set to how many triforces pieces are available to collect in the world. Default is 30. Max is 90, Min is 1
  # Format "pieces: chance"
  25: 0
  30: 50
  40: 0
  50: 0
triforce_pieces_required: # Set to how many out of X triforce pieces you need to win the game in a triforce hunt. Default is 20. Max is 90, Min is 1
  # Format "pieces: chance"
  20: 2
  30: 5
  40: 6
  50: 5
  60: 4
  70: 3
  80: 2
  90: 1
tower_open: # Crystals required to open GT
  '0': 3
  '1': 3
  '2': 2
  '3': 2
  '4': 2
  '5': 1
  '6': 1
  '7': 1
  random: 0
ganon_open: # Crystals required to hurt Ganon
  '0': 1
  '1': 1
  '2': 2
  '3': 2
  '4': 2
  '5': 2
  '6': 2
  '7': 2
  random: 0
world_state:
  standard: 1 # Begin the game by rescuing Zelda from her cell and escorting her to the Sanctuary.
  open: 3 # Begin the game from your choice of Link's House or the Sanctuary
  inverted: 1 # Begin in the Dark World. The Moon Pearl is required to avoid bunny-state in Light World, and the Light World game map is altered
  retro: 0 # Small keys are universal, you must buy a quiver, take-any caves and an old-man cave are added to the world. You may need to find your sword from the old man's cave
hints:
  'on': 1 # Hint tiles sometimes give item location hints
  'off': 0 # Hint tiles provide gameplay tips
weapons: # Specifically, swords
  randomized: 5 # Swords are placed randomly throughout the world
  assured: 2 # Begin with a sword, the rest are placed randomly throughout the world
  vanilla: 1 # Swords are placed in vanilla locations in your own game (Uncle, Pyramid Fairy, Smiths, Pedestal)
  swordless: 0 # Your swords are replaced by rupees. Gameplay changes have been made to accommodate this change.
item_pool:
  easy: 0 # doubled upgrades, progressives etc.
  normal: 1 # Item availability remains unchanged from the vanilla game
  hard: 0 # Reduced upgrade availability (max: 14 hearts, green mail, tempered sword, fire shield, no silvers unless swordless)
  expert: 0 # Minimum upgrade availability (max: 8 hearts, green mail, master sword, fighter shield, no silvers unless swordless)
  crowd_control: 0 # Sets up the item pool for the crowd control extension. Do not use it without crowd control
item_functionality:
  easy: 0 # Allow Hammer to damage ganon, Allow Hammer tablet collection, Allow swordless medallion use everywhere.
  normal: 1 # Vanilla game item functionality
  hard: 0 # Reduced helpfulness of items (potions less effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs do not stun, silvers disabled outside ganon)
  expert: 0 # Vastly helpfulness of items (potions barely effective, can't catch faeries, cape uses double magic, byrna does not grant invulnerability, boomerangs and hookshot do not stun, silvers disabled outside ganon)
progression_balancing:
  on: 0 # a system to reduce BK, as in times during which you can't do anything by moving your items into earler access sphere to make it likely you have stuff to do
  off: 1 # turn this off if you don't mind a longer multiworld, or can glitch around missing items.
boss_shuffle:
  none: 7 # No boss shuffle
  simple: 3 # Existing bosses except Ganon and Agahnim are shuffled throughout dungeons
  full: 2 # 3 bosses can occur twice
  random: 1 # Any boss can appear any amount of times
  singularity: 0 # Picks a boss, tries to put it everywhere that works, if there's spaces remaining it picks a boss to fill those
enemy_shuffle: # Randomize enemy placement
  on: 0
  off: 50
killable_thieves: # Make thieves killable
  on: 0 # Usually turned on together with enemy_shuffle to make annoying thief placement more manageable
  off: 50
tile_shuffle: # Randomize the tile layouts in flying tile rooms
  on: 3
  off: 1
bush_shuffle: # Randomize the chance that bushes have enemies and the enemies under said bush
  on: 1
  off: 3
enemy_damage:
  default: 1 # Vanilla enemy damage
  shuffled: 0 # Enemies deal 0 to 4 hearts and armor helps
  random: 0 # Enemies deal 0 to 8 hearts and armor just reshuffles the damage
enemy_health:
  default: 1 # Vanilla enemy HP
  easy: 0 # Enemies have reduced health
  hard: 0 # Enemies have increased health
  expert: 0 # Enemies have greatly increased health
pot_shuffle:
  'on': 0 # Keys, items, and buttons hidden under pots in dungeons are shuffled with other pots in their supertile
  'off': 1 # Default pot item locations
beemizer: # Remove items from the global item pool and replace them with single bees and bee traps
  0: 14 # No bee traps are placed
  1: 1 # 25% of the non-essential item pool is replaced with bee traps
  2: 0 # 60% of the non-essential item pool is replaced with bee traps, of which 20% could be single bees
  3: 0 # 100% of the non-essential item pool is replaced with bee traps, of which 50% could be single bees
  4: 0 # 100% of the non-essential item pool is replaced with bee traps
shop_shuffle:
  none: 2
  i: 0 # Shuffle the inventories of the shops around
  p: 0 # Randomize the prices of the items in shop inventories
  u: 1 # Shuffle capacity upgrades into the item pool (and allow them to traverse the multiworld)
  ip: 0 # Shuffle inventories and randomize prices
  uip: 0 # Shuffle inventories, randomize prices and shuffle capacity upgrades into the item pool
  # You can add more combos
shuffle_prizes: # aka drops
  none: 0 # do not shuffle prize packs
  g: 50 # shuffle "general" price packs, as in enemy, tree pull, dig etc.
  b: 0 # shuffle "bonk" price packs
  bg: 0 # shuffle both
timer:
  none: 50 # No timer will be displayed.
  timed: 0 # Starts with clock at zero. Green clocks subtract 4 minutes (total 20). Blue clocks subtract 2 minutes (total 10). Red clocks add two minutes (total 10). Winner is the player with the lowest time at the end.
  timed_ohko: 0 # Starts the clock at ten minutes. Green clocks add five minutes (total 25). As long as the clock as at zero, Link will die in one hit.
  ohko: 0 # Timer always at zero. Permanent OHKO.
  timed_countdown: 0 # Starts the clock with forty minutes. Same clocks as timed mode, but if the clock hits zero you lose. You can still keep playing, though.
  display: 0 # Displays a timer, but otherwise does not affect gameplay or the item pool.
countdown_start_time: # For timed_ohko and timed_countdown timer modes, the amount of time in minutes to start with
  0: 0 # For timed_ohko, starts in OHKO mode when starting the game
  10: 50
  20: 0
  30: 0
  60: 0
red_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a red clock
  -2: 50
  1: 0
blue_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a blue clock
  1: 0
  2: 50
green_clock_time: # For all timer modes, the amount of time in minutes to gain or lose when picking up a green clock
  4: 50
  10: 0
  15: 0
#can be uncommented to use it
#local_items: #force certain items to appear in your world only, not across the multiworld. Recognizes some group names, like "Swords"
#  - "Moon Pearl"
#  - "Small Keys"
#  - "Big Keys"
glitch_boots:
  on: 1 # enables that you start with Pegasus Boots in any glitched logic mode that makes use of them
  off: 0
#linked_options:
  # - name: crosskeys
  #   options: # these overwrite earlier options if the percentage chance triggers
  #     entrance_shuffle: crossed
  #     bigkey_shuffle: true
  #     compass_shuffle: true
  #     map_shuffle: true
  #     smallkey_shuffle: true
  #   percentage: 0 # set this to the percentage chance you want crosskeys
  # - name: localcrosskeys
  #   options: # these overwrite earlier options if the percentage chance triggers
  #     entrance_shuffle: crossed
  #     bigkey_shuffle: true
  #     compass_shuffle: true
  #     map_shuffle: true
  #     smallkey_shuffle: true
  #     local_items: #forces keys to be local to your own world
  #       - "Small Keys"
  #       - "Big Keys"
  #   percentage: 0 # set this to the percentage chance you want local crosskeys
  # - name: enemizer
  #   options:
  #     boss_shuffle: # subchances can be injected too, which then get rolled
  #       simple: 1
  #       full: 1
  #       random: 1
  #       singularity: 1
  #       duality: 1
  #     enemy_damage:
  #       shuffled: 1
  #       random: 1
  #     enemy_health:
  #       easy: 1
  #       hard: 1
  #       expert: 1
  #   percentage: 0  # set this to the percentage chance you want enemizer
door_shuffle: # Only available if the host uses the doors branch, it is ignored otherwise
  vanilla: 8 # Everything should be like in vanilla
  basic: 3 # Dungeons are shuffled within themselves
  crossed: 1 # Dungeons are shuffled across each other
intensity: # Only available if the host uses the doors branch, it is ignored otherwise
  1: 3 # Shuffles normal doors and spiral staircases
  2: 2 # And shuffles open edges and straight staircases
  3: 1 # And shuffles dungeon lobbies
  random: 0 # Picks one of those at random
experimental: # Only available if the host uses the doors branch, it is ignored otherwise
  on: 0 # Enables experimental features. Currently, this is just the dungeon keys in chest counter.
  off: 50
debug: # Only available if the host uses the doors branch, it is ignored otherwise
  on: 0 # Enables debugging features. Currently, these are the Item collection counter. (overwrites total triforce pieces) and Castle Gate closed indicator.
  off: 50
rom:
  random_sprite_on_event: # An alternative to specifying randomonhit / randomonexit / etc... in sprite down below.
    enabled:  # If enabled, sprite down below is ignored completely, (although it may become the sprite pool)
      on: 1
      off: 0
    on_hit:  # Random sprite on hit. Being hit by things that cause 0 damage still counts.
      on: 1
      off: 12
    on_enter:  # Random sprite on underworld entry. Note that entering hobo counts.
      on: 1
      off: 8
    on_exit:  # Random sprite on underworld exit. Exiting hobo does not count.
      on: 1
      off: 8
    on_slash:  # Random sprite on sword slash. Note, it still counts if you attempt to slash while swordless.
      on: 1
      off: 15
    on_item:  # Random sprite on getting an item.  Anything that causes you to hold an item above your head counts.
      on: 1
      off: 8
    on_bonk:  # Random sprite on bonk.
      on: 1
      off: 8
    on_everything:  # Random sprite on ALL currently implemented events, even if not documented at present time.
      on: 1
      off: 20
    use_weighted_sprite_pool:  # Always on if no sprite_pool exists, otherwise it controls whether to use sprite as a weighted sprite pool
      on: 0
      off: 1
  sprite_pool: # When specified, limits the pool of sprites used for randomon-event to the specified pool.  Uncomment to use this.
   - link
   - Bananas in Pyjamas
   - Batman
   - Birb
   - Deadpool (Mythic)
   - Drake The Dragon
   - Fox Link
   - Garo Master
   - Kenny McCormick
   - Mini Ganon
   - Lucario
   - Modern link
   - Ori
   - Plague Knight
   - Pyro
   - Shy Guy
   - Sonic the Hedgehog
   - Wolf Link (Festive)
   - TP Zelda
   - TotemLinks
   - Zero Suit Samus
  sprite: # Enter the name of your preferred sprite and weight it appropriately
    random: 1
    randomonhit: 0 # Random sprite on hit
    randomonenter: 0 # Random sprite on entering the underworld.
    randomonexit: 0 # Random sprite on exiting the underworld.
    randomonslash: 0 # Random sprite on sword slashes
    randomonitem: 0  # Random sprite on getting items.
    randomonbonk: 0 # Random sprite on bonk.
                     # You can combine these events like this.  randomonhit-enter-exit  if you want it on hit, enter, exit.
    randomonall: 0 # Random sprite on any and all currently supported events. Refer to above for the supported events.
  disablemusic: # If "on", all in-game music will be disabled
    on: 0
    off: 1
  quickswap: # Enable switching items by pressing the L+R shoulder buttons
    on: 1
    off: 0
  menuspeed: # Controls how fast the item menu opens and closes
    normal: 0
    instant: 0
    double: 0
    triple: 0
    quadruple: 1
    half: 0
  heartcolor: # Controls the color of your health hearts
    red: 0
    blue: 0
    green: 0
    yellow: 0
    random: 1
  heartbeep: # Controls the frequency of the low-health beeping
    double: 0
    normal: 50
    half: 0
    quarter: 0
    off: 0
  ow_palettes: # Change the colors of the overworld
    default: 0 # No changes
    random: 1 # Shuffle the colors
    blackout: 0 # Never use this
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  uw_palettes: # Change the colors of caves and dungeons
    default: 0 # No changes
    random: 1 # Shuffle the colors
    blackout: 0 # Never use this
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  hud_palettes: # Change the colors of the hud
    default: 0 # No changes
    random: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  sword_palettes: # Change the colors of swords
    default: 0 # No changes
    random: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0
  shield_palettes: # Change the colors of shields
    default: 0 # No changes
    random: 1 # Shuffle the colors, with harmony in mind
    blackout: 0 # everything black / blind mode
    grayscale: 0
    negative: 0
    classic: 0
    dizzy: 0
    sick: 0
    puke: 0